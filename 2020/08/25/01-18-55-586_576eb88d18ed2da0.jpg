<!doctype html>
<html>
  <head>
    <title>Planet Clojure</title>
    <meta charset="utf-8" />
    <meta name="generator" content="http://intertwingly.net/code/venus/" />
    <link href="#" rel="apple-touch-icon" />
    <link rel="stylesheet" href="static/css/screen.css" media="screen, projection" />

<!--[if IE]>
<link rel="stylesheet" type="text/css" href="static/css/ie.css" media="screen, projection" />
<script type="text/javascript" src="static/js/html5.js"></script>
<![endif]-->



    <link rel="apple-touch-icon" sizes="180x180" href="/static/i/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/static/i/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/static/i/favicon-16x16.png">
    <link rel="manifest" href="/static/i/site.webmanifest">
    <link rel="shortcut icon" href="/static/i/favicon.ico">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-config" content="/static/i/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <link rel="alternate" href="http://planet.clojure.in/atom.xml" type="application/rss+xml" title="Planet Clojure RSS Feed" />
<!--    <link rel="alternate" href="http://feeds.feedburner.com/clojure" type="application/rss+xml" title="Planet Clojure RSS Feed" />-->
  </head>
  <body>
    <div id="planet">
      <div id="main">
        <div id="main-content">

          <header id="header">
            <h1><a href="" id="title"><span>Planet Clojure</span></a></h1>
          </header>

          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://purelyfunctional.tv" title="PurelyFunctional.tv">PurelyFunctional.tv Clojure articles</a></h2>
              <p>
August 24, 2020 10:00 AM                <br />
                <a href="https://purelyfunctional.tv">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-392-command-your-repl/">PurelyFunctional.tv Newsletter 392: command your repl</a></h2>
              <p>
<div class=" reset">
<p><em>Issue 392 – August 24, 2020 · <a href="https://purelyfunctional.tv/newsletter-archives/">Archives</a> · <a href="https://purelyfunctional.tv/newsletter/" title="Thanks, Jeff!">Subscribe</a></em></p>
<h2>Clojure Tip 💡</h2>
<p><em>command your repl</em></p>
<p>Last week, I mentioned that there are three editor commands you need to know to do REPL-driven development (RDD). These three commands are all you should really need. Of course, more commands will give you more nuance. But I wanted to select the bare minimum that gives you all of the benefits of RDD.</p>
<p>Those commands are all evaluation commands. They differ only in what they compile. Here they are:</p>
<ol>
<li>Evaluate one expression</li>
<li>Evaluate a top-level form</li>
<li>Evaluate the whole file</li>
</ol>
<p>You, as the programmer, have to decide which one to do at any given time. It turns out that the five most popular Clojure editors all have these three commands. I’ve run this by many experienced Clojure programmers and they agree that these are a minimal set.</p>
<p>How do you decide what command is right? My rule is pretty simple: compile the thing you are working on.</p>
<p>If you’re modifying a function, evaluate the function (a top-level form). If you’re moving stuff around the namespace, evaluate the whole file. And if you’re testing out what a single expression does, evaluate that expression.</p>
<p>Those three commands will give you the granularity you need to use 99% of the time. I’ve got <a href="https://purelyfunctional.tv/lesson/compiling-and-executing-code-from-your-clojure-editor/#notes" title="">a lesson on how to evaluate code</a>, which includes the 3 commands for the top-5 editors (check the Notes), which I’ve made free for the time being.</p>
<h2>Quarantine update 😷</h2>
<p>I know a lot of people are going through tougher times than I am. If you, for any reason, can’t afford my courses, and you think the courses will help you, please hit reply and I will set you up. It’s a small gesture I can make, but it might help.</p>
<p>I don’t want to shame you or anybody that we should be using this time to work on our skills. The number one priority is your health and safety. I know I haven’t been able to work very much, let alone learn some new skill. But if learning Clojure is important to you, and you can’t afford it, just hit reply and I’ll set you up. Keeping busy can keep us sane.</p>
<p>Also, if you just want to subscribe for a paid membership, I have opened them back up for the moment. Register <a href="https://purelyfunctional.tv/register/" title="">here</a>.</p>
<p>Stay healthy. Wash your hands. Stay at home. Wear a mask. Take care of loved ones.</p>
<h2>Clojure Challenge 🤔</h2>
<h3>Last week’s challenge</h3>
<p>I’m currently out of town so I haven’t published the submissions for Issue 391. I will do it when I get back.</p>
<p>Please do participate in the discussion on the <a href="https://gist.github.com/ericnormand/1524630ea3d4cadb84c588a19fccea89" title="">gist where the submissions are hosted</a>. It’s active and it’s a great way to get comments on your code.</p>
<h3>This week’s challenge</h3>
<p><strong>Binary search</strong></p>
<p>If I give you a sorted vector of integers, you can search through it quickly using binary search to know if it contains a given number <code>n</code>. Is <code>n</code> right in the middle? If yes, you’re done. If not, then you either have to search the left half or the right half. Since the numbers are sorted, you can check if <code>n</code> is greater than or less than the middle number. You can then recurse down into the appropriate half. Your task is to write this function.</p>
<pre><code>(binary-search 3 [1 2 3]) ;=&gt; true
(binary-search 4 [1 2 5]) ;=&gt; false
(binary-search 10 [1 2 4 5 9 10 11 12]) ;=&gt; true
</code></pre>
<p>You can assume you’re passed a sorted vector.</p>
<p>Thanks to <a href="https://edabit.com/challenge/kfXz49avvohsYSxoe" title="">this site</a> for the challenge idea where it is considered Hard level in Python.</p>
<p>You can also find these same instructions <a href="https://gist.github.com/ericnormand/892bcb31280859727c2375c7d41bea81" title="">here</a>. I might update them to correct errors and clarify the descriptions. That’s also where submissions will be posted. And there’s a great discussion!</p>
<p>As usual, please reply to this email and let me know what you tried. I’ll collect them up and share them in the next issue. If you don’t want me to share your submission, let me know.</p>
<p>Rock on!<br />Eric Normand</p>
</div>
<p>The post <a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-392-command-your-repl/" rel="nofollow">PurelyFunctional.tv Newsletter 392: command your repl</a> appeared first on <a href="https://purelyfunctional.tv" rel="nofollow">PurelyFunctional.tv</a>.</p>              </p>
              <p class="meta"><a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-392-command-your-repl/">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://jobs.braveclojure.com" title="Brave Clojure Jobs">Brave Clojure Jobs</a></h2>
              <p>
August 24, 2020 08:12 AM                <br />
                <a href="https://jobs.braveclojure.com">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://jobs.braveclojure.com/jobs/17592186047242/senior-developer-t-scape-limited">Senior Developer</a></h2>
              <p>
<div><h1>Senior Developer</h1><div class="company-name">T-Scape Limited | London, UK,/Lisbon, Portugal/Cork, Ireland</div><div>remote</div><div><a href="http://www.t-scape.com">http://www.t-scape.com</a></div><br /><div><p>We are a small company creating a niche financial services product. We have a strong domain knowledge in the areas we are focusing on and want to bring fresh ideas to old problems.</p><p>We are open to new initiatives and ideas.</p><p>You will be working with a small team with close contact to the Business Analysts, you will need to understand and question their requirements for ongoing tasks and expansion of our flag ship product.</p><p>We are looking for someone who can find innovative solutions to problems. You will be</p>
<ul>
  <li>Self-motivated, energetic and upbeat;</li>
  <li>Take a logical and systematic approach to problem solving;</li>
  <li>Strive for timely completion of projects;</li>
  <li>Take ownership and responsibility;</li>
  <li>Able to make decisions but are not foolhardy;</li>
  <li>Ask questions and take advice;</li>
  <li>You are pragmatic and prefer simple solutions</li>
  <li>Have the ability to prioritize the urgency of multiple requests and then take charge of these to meet deadlines.</li>
  <li>Fluent in English</li>
</ul><p>You will need to liaise with our clients if problems arise or to discuss their requirements. As the company expands you must be able to help and nurture junior members of the team.</p><p>Skills required.</p><p>The product itself is split into three components, the backend server, an application server, and a web based client front end. The key development for this role will report to the backend server and the application server, both of which are written using Clojure.</p><p>You will need</p>
<ul>
  <li>An excellent knowledge and commercial experience using Clojure, and Java 8+. You should have a good understanding of the STM.</li>
  <li>Database access via JDBC to one or more of Oracle, SQL Server or Postgres</li>
  <li>Source control is via GIT, with frequent branches and merges.</li>
  <li>Documentation is produced in Confluence and Issue Reporting uses JIRA.</li>
</ul><p>Any knowledge of the following will be a plus but not essential:</p>
<ul>
  <li>Front End development using Angular 7+, angular cli, CSS, HTML5 and ag-grid</li>
  <li>Spring MVC and Spring Security for the application server</li>
  <li>Middleware in the form of Spring Integration for interfaces.</li>
</ul></div></div>              </p>
              <p class="meta"><a href="https://jobs.braveclojure.com/jobs/17592186047242/senior-developer-t-scape-limited">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://solovyov.net/blog.atom" title="solovyov.net">Alexander Solovyov</a></h2>
              <p>
August 24, 2020 12:00 AM                <br />
                <a href="https://solovyov.net/blog.atom">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://solovyov.net/blog/2020/a-tale-of-webpage-speed-or-throwing-away-react/">A tale of webpage speed, or throwing away React</a></h2>
              <p>
<p>Back in 2011, I happened to get a job writing <a href="https://backbonejs.org/">Backbone.js</a> app. If you never did that, don’t. I was complaining about difficulties with composition left and right to whoever would listen. As I started digging into alternatives for the front-end, I discovered <a href="https://en.wikipedia.org/wiki/Functional_reactive_programming">FRP</a> and <a href="https://www.flapjax-lang.org/">Flapjax</a>, and <a href="https://clojurescript.org/">ClojureScript</a>. The last one got me hooked on <a href="https://clojure.org/">Clojure</a>. I even did a <a href="https://fwdays.com/event/js-frameworks-day-2013/review/Functional-Reactive-Programming-&amp;-ClojureScript">successful talk</a> on FRP and ClojureScript (and precursor to <a href="https://hoplon.io/">Hoplon</a>, called hlisp).</p>
<h2 id="react">React</h2>
<p>Then in May 2013 React was released. I championed it on my new job and discovered during Clojure-themed hackaton (<a href="https://solovyov.net/blog/2013/clojurecup/">Clojure Cup 2013</a>) that CLJS and React are a great match. What’s so good about React though? To me, the main selling point is that it composes well.</p>
<p>When you use predecessors like jQuery or Backbone or Angular or whatever after just a year of development your code is a mess of event listeners and triggers. Don’t get me started on unobtrusive JS, code locality is non-existent with jQuery. Which handler is bound where and what it does? It’s too hard to discover to be a good base for a good codebase!</p>
<p>Then I started working at <a href="https://kasta.ua">Kasta</a>, where web frontend was exactly that jQuery-ish mess. Nobody ever wanted to touch checkout, since you could spend hours, if not days, making the smallest change. Then QA would find more invalid states than you can dream of. And then users would report more bugs to our call center. It was just as awful as you can imagine.</p>
<p>So after some experiments, tests, and checks, I decided that we’re going React + ClojureScript way with server-side rendering done in Clojure.</p>
<h2 id="demise">Demise</h2>
<p>And for a while, things were looking good. But our frontend grew bigger and bigger, and while there were few attempts on keeping it performant, ultimately we failed. The application became too big, and its boot time became too long.</p>
<p>One of the main reasonings back in 2016 was that we take a hit on startup time, but in turn, get no page loads and have a rich web application with a lot of interactions. And for a while that worked! But startup time became longer and longer, leading to a shameful rating of 5/100 from Google’s PageSpeed (okay, it was sometimes up to ~25/100, whatever).</p>
<p>More than that, while doing what is described below, we’ve discovered that React also leads to some questionable practices. Like hovers in JS (rather than in CSS), drop-down menus in JS, not rendering hidden (under a hover) text (Google won’t be happy), weird complex logic (since it’s possible!), etc. You can have a React app without those problems, but apparently, you have to have better self-control than we had (nobody’s perfect!).</p>
<p>Also since then, the vast majority of our users switched to mobile apps. This made the web app the main entry point for new users. This means its main goal is rendering fast for a newcomer, because old-timers, which want more functionality, are on mobile app now. And <a href="https://web.dev/tti/">TTI</a> (time to interactive) is so much more important here.</p>
<h2 id="time-for-a-change">Time For A Change</h2>
<p>So given that circumstances have changed, what do we do? I read articles “how I survive on vanilla JS” since before React appeared and they usually don’t make sense — it’s either a pink-glassed rant about how great it is, disregarding all the problems (separation of concerns, cohesion, composability, code locality) or a project by one (or few) persons, who just keep everything in their head.</p>
<p>Somewhere back in February I stumbled upon <a href="https://intercoolerjs.org/">Intercooler.js</a>. I’m not sure if I ever saw it before — maybe I did but skimmed over — it does not matter. This time it captured my attention.</p>
<p>The idea is that all HTML is rendered on the server. And client updates parts of HTML, controlled by element’s attributes. Basically like HTML+XHR on steroids. You can’t do anything you want, but that’s partially the point: some limits are good so you won’t do crazy stuff. And you need some support from the server, so you can render partial results — just an optimization, but quite an important one.</p>
<p>There is an alternative library — <a href="https://unpoly.com/">Unpoly</a>. It has more features around layout and styling but has a little bit less thought out XHR stuff (hard to do a POST request with parameters without having a form, for example). And the library size is much bigger. And it’s written in CoffeeScript with lots of classes, <a href="https://solovyov.net/blog/2020/inheritance/">ugh</a>.</p>
<p>So I made a proof-of-concept implementation of our catalogue page in Intercooler and it worked! Except there was a dependency on jQuery and some other irritating stuff… As I was struggling to make a batch request for HTML fragments I understood one thing: when I wrote down a roadmap for catalogue the last point was “small intercooler-like thing for analytics”.</p>
<p>So why wait?</p>
<h2 id="twinspark">TwinSpark</h2>
<p>I liked Intercooler’s coherent approach to working around AJAX, so I decided to name the library after some automotive stuff as well, and TwinSpark seems like an appropriate name. So what’s the deal?</p>
<p><a href="https://github.com/kasta-ua/twinspark-js">TwinSpark</a> is a framework for declarative HTML enhancement: you put additional attributes on your element and TwinSpark does something with them. Like makes an AJAX call and replaces target with a response, or adds a class, or… well, see <a href="https://kasta-ua.github.io/twinspark-js/">examples</a>, shall you?</p>
<p>There are some differences with Intercooler, of course, because why would it exist? The most noticeable one is that there is no dependency on jQuery. It supports only modern browsers (not IE or Opera Mini) but drops that 88kb monster.</p>
<p>It also has:</p>
<ul>
<li>no inheritance — can’t stress that enough!</li>
<li>clear extension points for your directives</li>
<li>support for batching requests to a server</li>
<li>tighter attribute name convention (my own opinion, but <code>ic-get</code> and <code>ic-post</code> irritate me: do not make me change keys!)</li>
<li>much smaller payload (thanks to no jQuery!)</li>
<li>should be faster (thanks to no jQuery again)</li>
</ul>
<p>Honestly speaking, the main reasons are <a href="https://kasta-ua.github.io/twinspark-js/#batch">batching</a> and <a href="https://solovyov.net/blog/2020/inheritance/">no inheritance</a>. Inheritance is particularly painful here. In Intercooler, if you declared <code>ic-target</code> on the body, all tags inside will think it’s their target too. So you include a component somewhere in HTML tree and an attribute higher on tree changes this component behavior. I mean this is a freaking dynamic scope, I want none of that! :)</p>
<p>Funnily enough, after about a month of dabbling with TwinSpark, Intercooler’s author announced that he’s doing a jQuery-less modern version: <a href="https://htmx.org/">htmx</a>. :) It has really good extensions points, so maybe it’s possible to add batching… but inheritance is still there. :(</p>
<h2 id="why-is-that-a-good-idea">Why is that a good idea</h2>
<p>We need to look at it from two sides: if it’s good for developers and if it’s good for users. React was great at former and terrible at later.</p>
<p>TwinSpark approach is much better in most cases for the user: less JavaScript, less jitter, more common HTML-like behavior. In the worst case, we would serve you 2.5MB of minified (non-gzipped) JS and 700KB of HTML (half of it were initial data for React) for catalogue. Right now it’s 40KB of minified non-gzipped JS (TwinSpark, analytics, some behavior, IntersectionObserver polyfill) and 350KB of HTML. Two orders of magnitude difference and even HTML is smaller! This is just like Christmas in childhood!</p>
<p>On the developer side, I think React is better still, but code locality is great, composability is much better (since you are forced in a limited world of working in a simplistic model) than with jQuery. Plus there are a lot of ways to improve it.</p>
<h2 id="results">Results</h2>
<p>It took us four months since the first experiments to release. Not exactly the amount of time I imagined when we started (“should take two to three weeks at most!"), heh, but we were not exclusively doing that. It still took a lot of time and energy to remove React-isms from the code and wrangle our app to be a server-side citizen. It still could use some polishing, but we decided to release it despite that just to cut it short. And A/B test showed that we were right - especially for Android phones.</p>
<p>Google gives our catalogue 75/100 now instead of 5/100. Hurray, I guess? :)</p>              </p>
              <p class="meta"><a href="https://solovyov.net/blog/2020/a-tale-of-webpage-speed-or-throwing-away-react/">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://javahippie.net/" title="Tim Zöller">The Java Hippie (Tim Zöller)</a></h2>
              <p>
August 23, 2020 01:00 PM                <br />
                <a href="https://javahippie.net/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://javahippie.net/clojure/cloud/2020/08/23/clojurenative05.html">Cloudready Clojure Part 5</a></h2>
              <p>
<p>This is part 5 of a series in which I will show some of my approaches to a “Cloud Ready” web application with Clojure. If you are new to web apps with Clojure, you should read the first four parts first:</p>

<ul>
  <li><a href="https://javahippie.net/clojure/cloud/2020/04/20/clojurenative01.html">Cloudready Clojure Part 1</a></li>
  <li><a href="https://javahippie.net/clojure/cloud/2020/04/21/clojurenative02.html">Cloudready Clojure Part 2</a></li>
  <li><a href="https://javahippie.net/clojure/cloud/2020/05/04/clojurenative03.html">Cloudready Clojure Part 3</a></li>
  <li><a href="https://javahippie.net/clojure/cloud/2020/08/23/clojurenative04.html">Cloudready Clojure Part 4</a></li>
</ul>

<p>In these, we set up a webserver, session handling, the base for serverside HTML rendering, a configuration mechanism and database deployment mechanism which will work with cloud providers. This article will not add anything new to the application but show how to install this preliminary version to the cloud, so we can check our assumptions and mechanisms early. This is going to be heavy on text and screenshots, so if you are not interested in deploying the application in the cloud, just jump to the headline “Validating the application” to see how the concepts work in the end.</p>

<h2 id="deploying-to-the-cloud">Deploying to the cloud</h2>
<p>As promised in the last part of the series, we will deploy our application to Heroku. I enjoy using Heroku for smaller hosting projects, as it is easy to use and really transparent in displaying your expected bills for the month.</p>

<p>When we log into our Heroku account, the first thing we see is a dashboard listing our available applications (names grayed out by me):</p>

<p><img alt="Heroku Dashboard" src="https://javahippie.net/assets/20200823/Dashboard.png" /></p>

<p>To create a new application, we select the entry “Create new app” from the menu in the top right of the screen:</p>

<p><img alt="New App Menu" src="https://javahippie.net/assets/20200823/New App.png" /></p>

<p>In the following form we enter a name, select the region in which we would like are app to be hosted and click “Create App”:</p>

<p><img alt="New App Form" src="https://javahippie.net/assets/20200823/New App Form.png" /></p>

<p>The website redirects us to our apps settings. To keep the example simple, we are not creating a pipeline on Heroku, but just link our GitHub Repository to the application, to directly deploy our instance from the repository:</p>

<p><img alt="Link GitHub" src="https://javahippie.net/assets/20200823/GitHub.png" /></p>

<p>In the following	screen, we click on the button “Enable Automatic Deploys”, which will make sure that every push to our <code class="highlighter-rouge">master</code> branch will trigger a build and deployment to Heroku. This does not mean that we are ready to build and deploy our app. Before we can do this, we need to specify a build pack, which transforms our code to a runnable application. For basic Java Maven Projects and even Clojure projects with Leiningen, Heroku automatically detects the correct buildpack. But our application uses Boot as buildtool, so we need to specify the custom buildpack <code class="highlighter-rouge">https://github.com/upworthy/heroku-buildpack-boot.git</code> under “Settings” -&gt; “Add Buildpack”:</p>

<p><img alt="Buildpack" src="https://javahippie.net/assets/20200823/Buildpack.png" /></p>

<p>The buildpack makes sure, our application is properly built, but we still need to add a Heroku specific file to our projects root - the <code class="highlighter-rouge">Procfile</code>. For our project it looks like this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>web: java -Dport=$PORT -jar target/scrapbook-0.1.0-SNAPSHOT-standalone.jar
</code></pre></div></div>

<p>This tells Heroku several things:</p>

<ul>
  <li>It specifies, that we are running a web application</li>
  <li>It contains the command to start the application from the uberjar</li>
  <li>It maps the content of the environment variable <code class="highlighter-rouge">$PORT</code> and overrides the port from our <code class="highlighter-rouge">config.edn</code> file. This is necessary, because Heroku will assign a random port to our application and store it in this environment variable. Externally, our application will be available from port 80.</li>
</ul>

<p>Now, that we need to override our applications configuration with values specific to our environment, we profit from using the <code class="highlighter-rouge">yogthos/config</code> library for the first time. If we take a closer look, we would not have needed to specify that parameter, even! The environment variable <code class="highlighter-rouge">$PORT</code> would have overridden the value from <code class="highlighter-rouge">config.edn</code> due to the libraries definition, anyway! But this enabled me to showcase the mechanism in a little more detail 😉</p>

<p>If we add the <code class="highlighter-rouge">Procfile</code> to our project and push everything to GitHub, Heroku automatically starts a build. We see the buildpack working, the build being successful - and the app crashing. We forgot to provide a database.</p>

<p><img alt="Build1" src="https://javahippie.net/assets/20200823/Build1.png" /></p>

<h2 id="creating-a-database">Creating a database</h2>
<p>Adding a database to our application will require only a little configuration. We start on the applications “Overview” tab and click on “Configure Add-ons”:</p>

<p><img alt="Addons" src="https://javahippie.net/assets/20200823/Addons.png" /></p>

<p>In the next web view we search for “Postgres” and click on the result “Heroku Postgres”. A popup appears, prompting us to select a plan. For now we are good with the “free” plan. We click the “Provision” button:</p>

<p><img alt="Postgres" src="https://javahippie.net/assets/20200823/Postgres.png" /></p>

<p>The database is quickly created. We click on its name, and are redirected to data.heroku.com, where we can see the databases credentials under the “Settings” tab (no screenshot this time 😉). Note the values listed there, head back to the “Settings” tab of our Clojure application on the Heroku Dashboard and click on the “Reveal Config Vars” button. In this view we need to provide an environment variable <code class="highlighter-rouge">DB</code> which will override the values of our key <code class="highlighter-rouge">:db</code> in our <code class="highlighter-rouge">config.edn</code> file:</p>

<div class="language-clojure highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="no">:dbtype</span><span class="w"> </span><span class="s">"postgresql"</span><span class="w">
 </span><span class="no">:host</span><span class="w"> </span><span class="s">"ec2-54***************.amazonaws.com"</span><span class="w"> 
 </span><span class="no">:user</span><span class="w"> </span><span class="s">"srt******ckq"</span><span class="w"> 
 </span><span class="no">:password</span><span class="w"> </span><span class="s">"020bf473934****************52126b823611fb8c4640"</span><span class="w"> 
 </span><span class="no">:dbname</span><span class="w"> </span><span class="s">"d1ko********o9rj"</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>We restart the application via the top-right menu “More” -&gt; “Restart all Dynos”, and now, the logs look much more promising. We see our migratus output, and also, finnally, the following message: <code class="highlighter-rouge">2020-08-23T19:28:41.716277+00:00 heroku[web.1]: State changed from starting to up</code>. A click on the button “Open app” in the top right corner shows our applications welcome screen. We are live! 💪🤘</p>

<h2 id="validating-the-application">Validating the application</h2>
<p>In the previous steps we already validated that our application config works in a “Cloud Ready” way. We can specify default values for our apps config in the <code class="highlighter-rouge">config.edn</code> file, and override them with the environment variables in the Heroku console. This enables us to use the randomly assigned port for our app, and connect with the specific database of our environment. When we connect to the database (either with the Heroku console, or directly with a tool like DBeaver and the connection credentials fromn the previous step), we can also see that the session and migratus tables were created, and there is even a session in it:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>session_id                          |idle_timeout|absolute_timeout|value                                                                                                                                                                                                      |
------------------------------------|------------|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
1d4eea57-ee71-4db4-a9f7-8c34be50051c|  1598211404|                |NPY p j usernamei Timj,ring.middleware.session-timeout/idle-timeoutf_BºLj/ring.middleware.anti-forgery/anti-forgery-tokeniPzSpIpaZI4JteLvvWJDEoa2UMPslTXQF5BKj8jFhNiF5PepzKBU/eEysHpt4Gp4ePPqaf43DV5kWwxTEH|
</code></pre></div></div>

<p>So both our config and migratus work as expected. Now we remember, that we introduced the session table to support clustering over multiple nodes of the same applications. We can try this, too. In the Heroku console, navigate to the “Overview” tab of our application and click on “Configure Dynos” to change the machine behind our app. On the next web view, we click on “Change Dyno Type” and select “Standard 1X/2X”. They support scaling multiple instances (starting from 25$ a month).</p>

<p><img alt="Dyno" src="https://javahippie.net/assets/20200823/Dyno.png" /></p>

<p>We then scale the Dyno count to 5 instances and click “Confirm”.</p>

<p><img alt="Scale" src="https://javahippie.net/assets/20200823/Scale.png" /></p>

<p>After waiting one or two minutes for the nodes to scale up, we go back to the web interface and refresh the page several times. We can observe, that the cookie we receive from the web server stays the same, and in the database there is still only one session. We are now distributing the “load” of the application to 5 instances, and the user doesn’t have a clue. Our assumptions were right, the application works flawlessly in a scaled environment. We can scale the Dynos back to “0” instances now, to save money 😉</p>

<h2 id="next-steps">Next steps</h2>
<p>Now that we are able to deploy to a cloud provider and migrate database schemas to our desired versions, we will integrate a user login with Google via OAuth2.0 in the next episode of this blog series.</p>              </p>
              <p class="meta"><a href="https://javahippie.net/clojure/cloud/2020/08/23/clojurenative05.html">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://javahippie.net/" title="Tim Zöller">The Java Hippie (Tim Zöller)</a></h2>
              <p>
August 23, 2020 05:00 AM                <br />
                <a href="https://javahippie.net/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://javahippie.net/clojure/cloud/2020/08/23/clojurenative04.html">Cloudready Clojure Part 4</a></h2>
              <p>
<p>This is part 4 of a series in which I will show some of my approaches to a “Cloud Ready” web application with Clojure. If you are new to web apps with Clojure, you should read the first three parts, <a href="https://javahippie.net/clojure/cloud/2020/04/20/clojurenative01.html">Cloudready Clojure Part 1</a>, <a href="https://javahippie.net/clojure/cloud/2020/04/21/clojurenative02.html">Cloudready Clojure Part 2</a>, <a href="https://javahippie.net/clojure/cloud/2020/05/04/clojurenative03.html">Cloudready Clojure Part 3</a> first, where we set up a webserver, session handling, the base for serverside HTML rendering and a configuration mechanism which will work with cloud providers. I would like to apologize for the long delay since the last part. Time has been a little tight in the last weeks, <a href="https://javahippie.net/work/freelancing/2020/08/19/self-employment.html">as I am starting self employment</a> and need to prepare a lot of things until next year.</p>

<h2 id="cloud-ready-database-deployments">Cloud Ready database deployments</h2>
<p>In the last part of this blog series we created a database connection and our first table, so we we could store our HTTP sessions in the database. This was necessary, because we wanted the session not to be limited to an instance of our application and use sticky sessions. Now that the session is looked up from the database, any request can be sent to any instance, and will still know the session. Making all instances share one database is a common pattern to share all available information between them. Every feature, which is dependent on values in memory will make scaling of the application more complicated.</p>

<p>There is one thing, however, which gets much harder if all instances share the same database: Deployment. Before introducing the database connection, all our instances were independent, which is a good thing if we want to use zero-downtime-deployments: If, e.g., three instances of our application are running in parallel, we can install new deployments for each instance at a time, keeping the other ones online. To the user, our application is available all the time, there is no maintenance window at all. The application is able to run zero-downtime deployments. This procedure can be used with on-premise installations, tailored cloud solutions like Heroku, or provider-agnostic environments like Kubernetes or OpenShift.</p>

<p>In our little example application, there are now two components to deploy: The database schema and the application itself. We want to be able to install the application in an automated way on any of our environments (dev, test, staging, prod) without having to worry about the version previously installed.</p>

<h2 id="database-deployments-in-different-environments">Database deployments in different environments</h2>
<p>To understand why this can be complicated, I would like to tell you a story from my first project as an IT consultant for a bank in 2014. We were working in a regulated environment, so the developers did not have access to the two(!) staging environments and production. We did have access to a dev server and three(!) test servers with different versions, so the application had seven environments: Dev, Test1, Test2, Test3, Staging1, Staging2, Prod.</p>

<p>One of our team members was the best database developer I have ever met. He did nothing else than create or database model, fine tune and index the application and the statements - and make sure, every version of our model was deployed in the right environment (and he also did not have access to three environments). For every software change he would create a migration script which needed to be run to lift the model from version x to version y. These needed to be executed in the exactly right order exactly once per environment and version. After nearly every deployment failed, because somebody forgot to execute the migration script, or missed some of the scripts that were needed for the next version, he decided to automate the process. He created a PL/SQL script, which created a version table in the database. All migration scripts were put into a single folder, with a sortable, ascending naming pattern. When the script was executed on an environment, it checked the version table to determine which scripts had already been executed and which scripts needed to be run. When a script was executed without errors, it was added to the table, and never executed on that environment again. This PL/SQL Script could be included into our build pipelines, the database deployment was completely automated now.</p>

<h2 id="versioned-database-schemas-in-clojure">Versioned database schemas in Clojure</h2>
<p>The pattern described above was made popular for Java applications by the Library <a href="https://flywaydb.org">Flyway</a>. It contains multiple tools, to include the database deployment into the startup phase of an application. This means, that our application is responsible for pulling the database model to the exact version that it needs. This is even more comfortable than the mechanism we used in our 2014 project - you just deploy the application and it takes care of the database deployment itself. We keep deploying only one artifact to our environments and it takes care of the rest. Luckily, we are not required to glue a Java library into our codebase with interop code, because there is an excellent Clojure library doing a similar thing: <a href="https://github.com/yogthos/migratus">Migratus</a>. In the following paragraphs we will include migratus into our application. I won’t show every Migratus feature (check the excellent documentation if you want to know more), but just a single usecase that has proven to work well with a different Clojure project. Properly used, Migratus can help you migrate and roll back (!) database changes to certain versions.</p>

<h2 id="migrate-all-the-things">Migrate all the things!</h2>
<p>The first thing we need to do is dropping the table from the last part of this blog series. We don’t want any manual work on the database anymore, we will automate everything now, like sophisticated developers: <code class="highlighter-rouge">DROP TABLE session_store</code>.</p>

<p>The first step of automating it, as always, is to include the dependency in our <code class="highlighter-rouge">build.boot</code> file:</p>

<div class="language-clojure highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nf">set-env!</span><span class="w"> </span><span class="no">:resource-paths</span><span class="w"> </span><span class="o">#</span><span class="p">{</span><span class="s">"resources"</span><span class="w"> </span><span class="s">"src"</span><span class="p">}</span><span class="w">
          </span><span class="no">:source-paths</span><span class="w">   </span><span class="o">#</span><span class="p">{</span><span class="s">"test"</span><span class="p">}</span><span class="w">
          </span><span class="no">:dependencies</span><span class="w">   </span><span class="o">'</span><span class="p">[[</span><span class="n">org.clojure/clojure</span><span class="w"> </span><span class="s">"1.10.0"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">adzerk/boot-test</span><span class="w"> </span><span class="s">"1.2.0"</span><span class="w"> </span><span class="no">:scope</span><span class="w"> </span><span class="s">"test"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">ring</span><span class="w"> </span><span class="s">"1.8.0"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">rum</span><span class="w"> </span><span class="s">"0.11.4"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">yogthos/config</span><span class="w"> </span><span class="s">"1.1.7"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">ring/ring-defaults</span><span class="w"> </span><span class="s">"0.3.2"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">org.postgresql/postgresql</span><span class="w"> </span><span class="s">"42.2.11"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">jdbc-ring-session</span><span class="w"> </span><span class="s">"1.3"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">ring/ring-session-timeout</span><span class="w"> </span><span class="s">"0.2.0"</span><span class="p">]</span><span class="w">
                            </span><span class="p">[</span><span class="n">migratus</span><span class="w"> </span><span class="s">"1.2.8"</span><span class="p">]])</span><span class="w">
</span></code></pre></div></div>

<p>We want to run the databse migration every time the application is started (which might not be the ideal way to do it for every type of application), so we require <code class="highlighter-rouge">[migratus.core :as migratus]</code> into our namespace and add the function call to Migratus to our code:</p>

<div class="language-clojure highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">defn</span><span class="w"> </span><span class="n">init-db</span><span class="w"> </span><span class="p">[</span><span class="n">db-conf</span><span class="p">]</span><span class="w">
  </span><span class="p">(</span><span class="nf">migratus/migrate</span><span class="w"> </span><span class="p">{</span><span class="no">:store</span><span class="w">                </span><span class="no">:database</span><span class="w">
                     </span><span class="no">:migration-dir</span><span class="w">        </span><span class="s">"migrations/"</span><span class="w">
                     </span><span class="no">:init-in-transaction?</span><span class="w"> </span><span class="n">false</span><span class="w">
                     </span><span class="no">:migration-table-name</span><span class="w"> </span><span class="s">"migratus_table"</span><span class="w">
                     </span><span class="no">:db</span><span class="w"> </span><span class="n">db-conf</span><span class="p">}))</span><span class="w">
</span></code></pre></div></div>

<p>Let’s have a closer look at these properties:</p>

<ul>
  <li><code class="highlighter-rouge">:store</code> defines the store against which we want to run our migrations. We want to do database migrations, so the value is set to <code class="highlighter-rouge">:database</code></li>
  <li><code class="highlighter-rouge">:migration-dir</code> specifies the directory which holds our migration scripts. In our case, the files will be put into the <code class="highlighter-rouge">migrations</code> folder in our <code class="highlighter-rouge">resources</code>.</li>
  <li><code class="highlighter-rouge">:init-in-transaction?</code> configures if the database schema initialization should be performed in a transaction. As not every DDL script can be run transactionally in PostgreSQL, we set the value to false</li>
  <li><code class="highlighter-rouge">:migration-table-name</code> specifies the name of our versioning table, which keeps track on the installed scripts</li>
  <li><code class="highlighter-rouge">:db</code> accepts a database configuration. Lucky for us, this accepts the exact db config which is already stored in our environment configuration!</li>
</ul>

<p>The next step for us is to put our first migration script into our <code class="highlighter-rouge">resources/migrations</code> folder. We already now the script from the last part of this blog-series, and put it into the file <code class="highlighter-rouge">20200823093500-create-session-table.up.sql</code>:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">session_store</span>
<span class="p">(</span>
  <span class="n">session_id</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">36</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
  <span class="n">idle_timeout</span> <span class="nb">BIGINT</span><span class="p">,</span>
  <span class="n">absolute_timeout</span> <span class="nb">BIGINT</span><span class="p">,</span>
  <span class="n">value</span> <span class="n">BYTEA</span>
<span class="p">)</span>
</code></pre></div></div>
<p>The filename needs to follow a certain pattern. It begins with a time-pattern which is best described by the Migratus documentation:</p>

<blockquote>
  <p>Each file should be named with the following pattern [id]-[name].[direction].sql where id is a unique integer id (ideally it should be a timestamp) for the migration, name is some human readable description of the migration, and direction is either up or down.</p>
</blockquote>

<p>I am using Flyway for two years in a Java project now, and using a date pattern for the <code class="highlighter-rouge">id</code> part has proven as a good practice when working in a distributed team. This is also true, when using Migratus. You need to avoid having the same ID twice, and using a time pattern which includes seconds is a good way of reducing the likelihood of this happening. The name should define in a readable way what the script does. We append <code class="highlighter-rouge">up</code> to the name, as it is an up-migration which should be executed when migrating from a lower version to this one. A matching down-migration would have the name <code class="highlighter-rouge">20200823093500-create-session-table.down.sql</code> and would look like this:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">session_store</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="running-our-first-migration">Running our first migration</h2>
<p>All we need to do now is including the function call <code class="highlighter-rouge">(init-db db-conf)</code> function into our <code class="highlighter-rouge">-main</code> function:</p>

<div class="language-clojure highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">defn</span><span class="w"> </span><span class="n">-main</span><span class="w">
  </span><span class="s">"Starts the web server and the application"</span><span class="w">
  </span><span class="p">[</span><span class="o">&amp;</span><span class="w"> </span><span class="n">args</span><span class="p">]</span><span class="w">
  </span><span class="p">(</span><span class="k">let</span><span class="w"> </span><span class="p">[</span><span class="n">db-conf</span><span class="w"> </span><span class="p">(</span><span class="no">:db</span><span class="w"> </span><span class="n">env</span><span class="p">)</span><span class="w">
        </span><span class="n">session-store</span><span class="w"> </span><span class="p">(</span><span class="nf">jdbc-store</span><span class="w"> </span><span class="n">db-conf</span><span class="p">)</span><span class="w">
        </span><span class="n">port</span><span class="w"> </span><span class="p">(</span><span class="no">:port</span><span class="w"> </span><span class="n">env</span><span class="p">)</span><span class="w">
        </span><span class="n">session-expiry-in-minutes</span><span class="w"> </span><span class="mi">5</span><span class="p">]</span><span class="w">
    </span><span class="p">(</span><span class="nf">init-db</span><span class="w"> </span><span class="n">db-conf</span><span class="p">)</span><span class="w">
    </span><span class="p">(</span><span class="nf">start-cleaner</span><span class="w"> </span><span class="n">db-conf</span><span class="p">)</span><span class="w">
    </span><span class="p">(</span><span class="nf">run-jetty</span><span class="w"> 
     </span><span class="p">(</span><span class="nb">-&gt;</span><span class="w"> </span><span class="n">app-handler</span><span class="w">
         </span><span class="p">(</span><span class="nf">wrap-idle-session-timeout</span><span class="w"> </span><span class="p">{</span><span class="no">:timeout</span><span class="w"> </span><span class="p">(</span><span class="nb">*</span><span class="w"> </span><span class="n">session-expiry-in-minutes</span><span class="w"> </span><span class="mi">60</span><span class="p">)</span><span class="w">
                                     </span><span class="no">:timeout-response</span><span class="w"> </span><span class="p">{</span><span class="no">:status</span><span class="w"> </span><span class="mi">200</span><span class="w">
                                                        </span><span class="no">:body</span><span class="w"> </span><span class="s">"Session timed out"</span><span class="p">}})</span><span class="w">
         </span><span class="p">(</span><span class="nf">wrap-defaults</span><span class="w"> </span><span class="p">(</span><span class="nb">-&gt;</span><span class="w"> </span><span class="n">site-defaults</span><span class="w"> 
                            </span><span class="p">(</span><span class="nf">assoc-in</span><span class="w"> </span><span class="p">[</span><span class="no">:session</span><span class="w"> </span><span class="no">:store</span><span class="p">]</span><span class="w"> </span><span class="n">session-store</span><span class="p">))))</span><span class="w"> 
     </span><span class="p">{</span><span class="no">:port</span><span class="w"> </span><span class="n">port</span><span class="p">})))</span><span class="w">
</span></code></pre></div></div>

<p>If we execute <code class="highlighter-rouge">boot run</code> now, we can see in the logfiles, that a migration was executed and all scripts were applied to the database without errors:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Aug 23, 2020 10:02:54 AM clojure.tools.logging$eval4746$fn__4749 invoke
INFORMATION: Starting migrations
Aug 23, 2020 10:02:54 AM clojure.tools.logging$eval4746$fn__4749 invoke
INFORMATION: creating migration table 'migratus_table'
Aug 23, 2020 10:02:54 AM clojure.tools.logging$eval4746$fn__4749 invoke
INFORMATION: Running up for [20200823093500]
Aug 23, 2020 10:02:54 AM clojure.tools.logging$eval4746$fn__4749 invoke
INFORMATION: Up 20200823093500-create-session-table
Aug 23, 2020 10:02:54 AM clojure.tools.logging$eval4746$fn__4749 invoke
INFORMATION: Ending migrations
</code></pre></div></div>

<p>Double checking our database, we can see that the <code class="highlighter-rouge">session_store</code> and <code class="highlighter-rouge">migratus_table</code> tables were created. The data of <code class="highlighter-rouge">migratus_table</code> should look like this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>id            |applied            |description         |
--------------|-------------------|--------------------|
20200823093500|2020-08-23 10:02:54|create-session-table|
</code></pre></div></div>

<h2 id="next-steps">Next steps</h2>
<p>Now that our application is set up to bring its own database schema into the cloud, we are ready to deploy it to a cloud provider. In the next part of this blog series we will set up a simple deployment to Heroku, a cloud platform I like to use because of its simplicity. Thank you for reading on!</p>              </p>
              <p class="meta"><a href="https://javahippie.net/clojure/cloud/2020/08/23/clojurenative04.html">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://dev.to" title="DEV Community">The Practical Dev</a></h2>
              <p>
August 23, 2020 12:29 AM                <br />
                <a href="https://dev.to">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://dev.to/tretuna/visual-code-extensions-not-just-the-top-10-4gnk">Visual Code Extensions, not just the top 10...</a></h2>
              <p>
<p>It's no secret that Visual Studio Code has become one of (if not <em>the</em>) most popular code editors in the world today. It's everywhere, and people are extending it to do nearly anything that deals with text! When you boot it up for the first time, it already has a lot of power, but it truly gets to spread its wings with its fantastic extension system. Sure, extensions are no new thing in the world of code editors, but I think that the community around VSCode has hit a stride that is hard to match.</p>

<p>However, it can be perhaps daunting or time-intensive for someone new to sort through and know what extensions can help them when they first get started. I can't count how many times people have asked me about useful extension recommendations. I've always ended up answering this by taking a screenshot of my extension panel and sending that to the person with a few recommendations, suggestions scratches the surface of them as I only really get to talk about a few core ones. I've tried to look for some good posts on recommended extensions. There are tons of "Top 10/20" posts and even a few "Top 50", but never a comprehensive list that approaches making a cohesive development environment. There's always the good ol' <a href="https://github.com/viatsko/awesome-vscode">Awesome VSCode</a> list, but that list doesn't go into things in a coherent manner of building a development space, it's more of a brain dump of everything (as it should be). While this is also basically a brain dump of my extensions, I tried to give it a little extra organization.</p>

<p>In this post, we're going to dive into all the extensions I have installed and use regularly and a few that I just know to be good. Now, a couple of things here before we get started:</p>

<p>First, I don't always have <em>all</em> of these enabled, some I just have installed so that they are quickly accessed when I need them.</p>

<p>VSCode will enable/disable extensions on a global, and project/workspace scale, which is fantastic! So we can do things like only activating those C++ extensions when we're working in C++ projects—or merely having the <em>full gamut</em> of Markdown extensions when I'm in my notes/writing workspace.</p>

<p>Second, I'm in no way claiming these are <em>the best</em> extensions out there (though you will see many that you may recognize from those "Top extensions" posts out there). Some of these extensions have 5-10 million installs, one of them has less than 200. These are simply the ones that I've found very useful in my own experience, and that fit my workflow well. There are thousands of extensions out there to explore! If you don't see one of your favorites, let me know! I'd love to check it out! As you can tell, I <em>kind of</em> like them.</p>

<p>Alright, let's get to it then and learn about some excellent extensions!</p>

<ul>
<li><a href="https://dev.to/feed#first-and-foremost">First and Foremost</a></li>
<li><a href="https://dev.to/feed#visual">Visual</a></li>
<li><a href="https://dev.to/feed#language-and-file-support">Language and file support</a></li>
<li><a href="https://dev.to/feed#code-navigation">Code navigation</a></li>
<li><a href="https://dev.to/feed#vim-emulation">VIM Emulation</a></li>
<li><a href="https://dev.to/feed#code-quality">Code quality</a></li>
<li><a href="https://dev.to/feed#debugging">Debugging</a></li>
<li><a href="https://dev.to/feed#intellisense-autocompletion-and-snippets">IntelliSense, Autocompletion, and Snippets</a></li>
<li><a href="https://dev.to/feed#file-management-and-search-tools">File management and search tools</a></li>
<li><a href="https://dev.to/feed#javascript">JavaScript</a></li>
<li><a href="https://dev.to/feed#live-share">Live share</a></li>
<li><a href="https://dev.to/feed#remote-development">Remote development</a></li>
<li>
<a href="https://dev.to/feed#code-execution">Code execution</a>

<ul>
<li><a href="https://dev.to/feed#paid">PAID</a></li>
</ul>


</li>
<li><a href="https://dev.to/feed#git">Git</a></li>
<li>
<a href="https://dev.to/feed#markdown">Markdown</a>

<ul>
<li><a href="https://dev.to/feed#extensions-by-matt-bierner">Extensions by Matt Bierner</a></li>
</ul>


</li>
<li><a href="https://dev.to/feed#working-with-images-and-colors">Working with Images and colors</a></li>
<li><a href="https://dev.to/feed#showing-off">Showing off</a></li>
<li><a href="https://dev.to/feed#other-utilities">Other utilities</a></li>
<li><a href="https://dev.to/feed#there-you-have-it">There you have it</a></li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#first-and-foremost">
  </a>
  First and Foremost
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync">Settings Sync</a> - This is the first install for me on any new instance of VSCode. Why? Because as you may be able to guess, this is a way to sync your VSCode settings between machines using GitHub Gists. Giving you an easy way to store and restore all of your VSCode settings (preferences, snippets, keybindings, and extension settings) for use on any machine you use. You can even share your settings with other people through public Gists. It's great to be able to tweak some settings on my work computer, upload them, then have them available when I boot up my personal computer. The VSCode team has also implemented its native version of syncing settings, and it's pretty good. It saves the UI state and allows time-traveling; however, I like to have my information in more than 1-2 places for safety, so this one will be sticking around.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#visual">
  </a>
  Visual
</h2>

<p>Time to make the editor look beautiful (and helpful too)!</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl">Night Owl</a> - VSCode comes with some great built-in themes, but there's a reason this has become one of the most popular in the community. <a href="https://twitter.com/sarah_edo">Sarah Drasner</a> is a fantastic person, and she created this as a highly accessible theme for readability during the night/low-light circumstances, especially for people with colorblindness. I've gone through many themes in the three years I've been using VSCode, but since it's release, I keep coming back to this one. It also has a light theme that is great, and I use it often during the daytime, and I try to keep my screens matching the light around me.

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=EliverLara.andromeda">Andromeda</a> - Another theme that I like as well. It's a little higher contrast with a darker and brighter text, but I still keep going back to Night Owl.</li>
<li>If you have a favorite theme from another editor, I would suggest searching for it as there's probably a version for VSCode!</li>
<li>If these aren't for you, I would suggest looking at <a href="https://dev.to/thegeoffstevens/50-vs-code-themes-for-2020-45cc">Best VSCode Themes: 50 VS Code themes for 2020</a>
</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=tusaeff.vscode-iterm2-theme-sync">iTerm Theme Sync</a> - Automatically syncs your VSCode theme to iTerm! ?? It's relatively new, having been released in June 2020, but I still can't believe it has less than 200 installs as of the date of writing this!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Material Icon Theme</a> - So, we've got some good colors going for your editor, let's get some better visual cues on your file tree. That's where icon themes come in, of which, Material Icons are my favorite. There's an icon for nearly every file type you can hope for, they are colored, and even some icons for folders as well. This makes it easy to look through the file tree and see precisely what format a file is or what types of files a folder contains.

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons">VSCode Icons</a> - Is the most popular one in the marketplace at the time of writing this, so that's also another great option you can check out.</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock">Peacock</a> - Alright, going back to another visual extension. Peacock makes it easy to distinguish which project is open in each window. It stores a color theme for the activity bar, title bar, status bar, and borders on a per-project basis. Making it super easy to switch between open projects and know which one you are looking at just by the color scheme.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2">Bracket Pair Colorizer 2</a> - Colors matched brackets (<code>(){}[]</code>) for easier visual matching. You can set it up with custom colors, and it has a few different modes for rotating through those colors. There are also options to display brackets in the gutter or the ruler. If you haven't realized yet, I love visual cues for what's going on in the code. Note: This is version 2 of this extension, make sure you are getting this one and not the original as the former is no longer maintained.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vincaslt.highlight-matching-tag">Highlight Matching Tag</a> - Highlights matching opening and closing tags in HTML and JSX and can add the path down the tree to the status bar. Defaults to a yellow underline, but has lots of options for customization.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight">Color Highlight</a> - Highlights color values in the color they represent.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow">Indent Rainbow</a> - Adds color to the indentions to the left of your code. Through the settings, you can adjust an array of colors that you want to use for depths of indentation. I use very muted greys for this:
</li>
</ul>

<div class="highlight"><pre class="highlight json"><code><span class="w">  </span><span class="nl">"indentRainbow.colors"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.05)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.1)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.15)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.2)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.25)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.3)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.35)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.4)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.45)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.5)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.55)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.6)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.65)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.7)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.75)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.8)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.85)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.9)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,0.95)"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"rgba(50,50,50,1.0)"</span><span class="w">
  </span><span class="p">]</span><span class="err">,</span><span class="w">
  </span><span class="nl">"indentRainbow.errorColor"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rgba(128,32,32, .6)"</span><span class="err">,</span><span class="w">
</span></code></pre></div>



<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview">Image Preview</a> - Shows a tiny version of a linked image in the gutter of the file. Excellent to quickly ensure you are using the right image.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=IBM.output-colorizer">Output Colorizer</a> - Adds syntax highlighting to output/debug/extensions panels and <code>*.log</code> files.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments">Better Comments</a> - Helps categorize comments into Alerts, Queries, TODOs, highlights, and other tags that you can set yourself. Using these tags, you can set it to highlight these comment blocks with text effects (color, background color, strikethrough, underline, bold, italic)</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=cliffordfajardo.highlight-line-vscode">Highlight Line</a> - I've been going back and forth with this one. The concept is simple; it underlines your cursor's current line in the editor to make it stand out and easier to find. Finding the right color and opacity to go with your theme is the main thing here. I like it, but it can be too distracting at times.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=byi8220.indented-block-highlighting">Indented Block Highlighting</a> - Another one I've gone back and forth with that also has a simple concept. It adds a background highlight your cursor's current block scope. Once again, finding the right color and opacity is key to this one.</li>
</ul>

<p>One more thing to add here, if you don't already have a beautiful coding font, that's important as well. I highly recommend downloading one from <a href="https://www.nerdfonts.com/font-downloads">Nerd Font</a> as they patch them all with TONS of icons for your terminal as well. My personal favorite is Victor Mono!</p>

<p>Alright, things are looking good. Now, let's get into some extra functionality.</p>

<h2>
  <a class="anchor" href="https://dev.to/feed#language-and-file-support">
  </a>
  Language and file support
</h2>

<p>There's LOTS of language support in VSCode with extensions. I'm only listing the ones here that I currently have installed as I only keep ones for languages I'm routinely working within.</p>

<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python">Python</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">C/C++</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml">YAML</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=DotJoshJohnson.xml">XML Tools</a></li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.lit-html">lit-html</a> - Syntax highlighting and IntelliSense for html inside of JavaScript and TypeScript tagged template strings.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker">Docker</a> - Create, manage, deploy, and debug Docker containers from inside VSCode.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-kubernetes-tools.vscode-kubernetes-tools">Kubernetes</a> - Kind of like the Docker extension, but for Kubernetes. You can develop, deploy, and debug form in the editor.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.vscode-arduino">Arduino</a> - If you do any Arduino programming, you know their code editor SUUUUUUUCKS... This extension adds support to flash to Arduino devices right from VSCode. So much nicer.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=mikestead.dotenv">DotENV</a> - Syntax highlighting for <code>.env</code> files. This is a port from the popular SublimeText package of the same name.</li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=silvenon.mdx">MDX</a></li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig">EditorConfig for VSCode</a> - <code>.editorconfig</code> is a configuration file you can include in your repo that attempts to bridge the gap of editor settings between different editors. If you work with any codebases that use this, you can use this installation to work with those files.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=Wscats.eno">Sass/Less/Scss/Typescript/Javascript/Jade/Pug Compile Hero Pro</a> - This gives you a nice option to "compile on save" for several superset languages for HTML/CSS/JS. With Compile Hero Pro, you can write using those formats without all the setup involved in the normal compilers. A perfect match for prototyping things out.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#code-navigation">
  </a>
  Code navigation
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=lucax88x.codeacejumper">Code Ace Jumper</a> - VSCode implementation of Ace Jump. I just saw this one recently via a recommendation by <a href="https://twitter.com/johnlindquist">John Lindquist</a>, who build the original Ace Jumper for the JetBrains family of editors. I'm still getting used to it, but it's an excellent concept, and I can already see benefits!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks">Bookmarks</a> - Create, name, and navigate between bookmarks in your code. This extension will add icons in the gutter and a side panel showing bookmarks, either in the file or in the whole project.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=albert.TabOut">TabOut</a> - This is one I found while writing this, but solves an annoyance I've had for a while. It's a simple concept; since VSCode, by default, automatically adds a closing bracket/parenthesis/quotation mark, you always have to get out of it at the end somehow, right? Sure... I could just hit the right arrow (or <code>l</code> for you VIMers), but this lets me use the <code>tab</code> key instead, which seems more natural and requires less finger movement. It's only been two days since I've installed it, so we'll see if it sticks around, but it's here for now.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#vim-emulation">
  </a>
  VIM Emulation
</h2>

<p>Disclaimer: I am not an avid VIM user, but I have dabbled a few times, and I talk to many that are. I include this because of those people; these are the ones they recommend.</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim">vscodevim.vim</a> - The most popular VIM emulator for VSCode.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=auiworks.amvim">amVim</a> - This is the next one that I hear excellent things about from people that were dissatisfied with the top installed vscodevim.vim.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim">Neo Vim</a> - This one uses a full embedded instance of Neovim as the backend for VSCode editing.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#code-quality">
  </a>
  Code quality
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">ESLint</a> - Linting with the most popular linting package there is.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-tslint-plugin">TSLint</a> - For the Typescripters!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ghmcadams.lintlens">LintLens</a> - Never lookup an ESLint rule again. Get inline annotations of each rule in your configuration, including plugins!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Prettier</a> - Opinionated code formatter, you either love it (like I do) or hate it.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint">Stylelint</a> - Lets round out the liners with one for CSS/SCSS/Less!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Code Spell Checker</a> - Pretty good spell checker for code. It lets you build up a dictionary of your own words both globally and on a per-workspace configuration.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=tombonnike.vscode-status-bar-format-toggle">Format Toggle</a> - Quick on/off toggle for automatic formatting without having to go into your settings. For those times you just <em>don't</em> want your editor to format your code on save automatically.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#debugging">
  </a>
  Debugging
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ChakrounAnas.turbo-console-log">Turbo Console Log</a> - This is perhaps the most invoked extension I've ever had. We spend a lot of our time debugging code, and while many people have their methods, I love my good ol' <code>console.log</code>. I have another snippet I will share in another post for a unique logging line, but I use the hotkeys from this extension more than that. It has four hotkeys for working with <code>console.log</code> statements that have become integral in my work.

<ul>
<li>
<code>ctrl+option+L</code>: select one or more variables then hit this hotkey to build a <code>console.log</code> on the next line of each variable with a custom prefix, the parent scope, the variable name, and the value. The prefix is <code>TCL:</code> by default, but you can set this to whatever you want in the settings. I have mine set to <code>????&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>. You can also have it set to wrap the log in two other logs, which helps identify it in your console by setting it apart from other things for readability.</li>
<li>
<code>option+shift+c</code>: Comment out all <code>console.log</code> statements inserted by the extension from the current document.</li>
<li>
<code>option+shift+u</code>: Uncomment all <code>console.log</code> statements inserted by the extension from the current document.</li>
<li>
<code>option+shift+d</code>: Delete all <code>console.log</code> statements inserted by the extension from the current document.</li>
</ul>


</li>
<li>Debugger for <a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome">Chrome</a>/<a href="https://marketplace.visualstudio.com/items?itemName=firefox-devtools.vscode-firefox-debug">Firefox</a>/<a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-edge">Edge</a> - VSCode comes with a powerful JavaScript debugger built-in. These two extensions allow you to target the respective browser with that debugger. Letting you run your code in the browser, set breakpoints and watch variables, and the call stack inside VSCode's debugger. Combine this with Turbo Console Log, and you've got some great debugging tools at your disposal right off the bat!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-edgedevtools.vscode-edge-devtools">Microsoft Edge (Chromium) Tools for VSCode</a> - Now we're in Microsoft's browser with Microsoft's editor, so you know there's gotta be a little extra. With this one, you can see browser elements, the network tool, and even screencast your browser right inside the VSCode editor! Honestly, I switched entirely over to Chromium Edge as my daily driver about six weeks ago, and I have no regrets.......... I never thought I'd say that.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#intellisense-autocompletion-and-snippets">
  </a>
  IntelliSense, Autocompletion, and Snippets
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.emojisense">Emojisense</a> - Autocompletion for emojis, do I <em>really</em> need to say anymore? You <em>know</em> your code needs more emojis. ????????</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode">Visual Studio IntelliCode</a> - Microsoft's AI-assisted Intellisense for Python, TypeScript/JavaScript and Java. Shows you recommended completion items while you are coding with consideration to your code context.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion">IntelliSense for CSS class names in HTML</a> - IntelliSense for your CSS class names that are in the workspace, even from external stylesheets brought in through <code>&lt;link&gt;</code> tags!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense">npm IntelliSense</a> - Intellisense for your npm modules in import statements.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense">Path Intellisense</a> - Intellisense for filenames</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag">Auto Rename Tag</a> - When you are renaming one HTML/JSX/XML tag, this extension will rename the other one for you. Simple, efficient, so lovely.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets">ES7 React/Redux/GraphQL/React-Native snippets</a> - Awesome snippets for a lot of FE libraries. It even has full file template snippets!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=andrew-codes.cypress-snippets">Cypress Snippets</a> - Do you write a lot of Cypress integration/e2e tests? Then you need this extension. If you don't, you need to start, which means you need this extension as well.</li>
</ul>

<p>I always recommend looking for extensions for your favorite libraries (there are tons out there), or making your own! One of the posts I have planned is about precisely this. Look out for that one coming up (I'll add the link here for it once it's finished).</p>

<h2>
  <a class="anchor" href="https://dev.to/feed#file-management-and-search-tools">
  </a>
  File management and search tools
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=patbenatar.advanced-new-file">Advanced-New-File</a> - Do you hate taking your hands off the keyboard? Yeah, me too... Sure, it's easy to start a new file with <code>cmd + n</code>, but when you go to save that file, it's a P.I.T.A. to keep it where you want it without your mouse. Why not create it in the right place, to begin with? That's where this one comes in. Either activate from the Command Palette or do what I did, replace the <code>cmd + n</code> hotkey with this! Once activated, you just select what folder and then type out the filename and extension you want, and it makes it. Easy peasy lemon squeezy...</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils">File Utils</a> - This adds file management commands to the command palette such as rename, move, duplicate, delete, copy the name of the active file, and several commands to add new files in different directories (though I'd recommend using Advanced New File for this)</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ee92.folderize">Folderize</a> - With this extension, you can take a file and turn it into a directory with that file, an <code>index.js</code> file that exports it, and optionally a test file and a CSS module file. I've used Folderize on several projects I've adopted in the past when reworking the folder structure. More of one of those that I generally leave disabled or uninstalled until I need it, but when I need it, it's nice to know about it.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=jasonnutter.search-node-modules">Search node_modules</a> - Ever need to reference the code inside one of your install packages? Well, this extension's got your back. VSCode's built-in search doesn't include <code>node_modules</code> for a good reason, leave it out of there and use it to look inside your installed packages quickly.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#javascript">
  </a>
  JavaScript
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost">Import Cost</a> - Puts an annotation next to any package imports with how much you are adding to the bundle when you import some code. It utilizes Webpack to figure this out and isn't going to be 100% accurate, but it does get close enough to give you an idea when you might want to guess that shiny new JS package second.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=cmstead.jsrefactor">JS Refactor</a> - Some handy commands when you are refactoring JS code. Here are some of the common ones I use:

<ul>
<li>Extract Method</li>
<li>Extract Variable</li>
<li>Convert To Arrow Function</li>
<li>Convert To Function Declaration</li>
<li>Convert To Template Literal</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=sallar.json-to-js-object">JSON to JS Object</a> - Select some JSON, activate, now you have a JS object!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=MariusAlchimavicius.json-to-ts">JSON to TS</a> - Select some JSON, activate, now you have TypeScript types!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype">Paste JSON as Code</a> - Another JSON manipulation extension, but this one goes a little further than the previous. Here you don't just get a matching TypeScript <code>interface</code>, but you also have options for:

<ul>
<li>inferMaps</li>
<li>inferEnums</li>
<li>inferDateTimes</li>
<li>inferUuids</li>
<li>inferBoolStrings</li>
<li>inferIntegerStrings</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.aws-toolkit-vscode">AWS Toolkit</a> - This is a <em>new to me</em> one as I have only recently started to work with the internals of AWS since I now work for them. This Toolkit adds a side panel with all kinds of AWS goodies. Access to services like Lambdas and CloudFormation, a CDK (Cloud Development Kit) explorer, and many AWS commands in your command palette. I'm still getting my workflow down with this one, but I'm working with a lot of the CDK this upcoming week, so maybe you'll hear more from me on it soon.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode">Jira and Bitbucket (Official)</a> - This is the only way I ever want to interact with Jira ever again. I don't like their interface, but it is what it is. With this extension, you can look at any of your tickets, make new tickets, and more all without a browser. The workflow of it feels more like it's built for developers than the web interface, most likely because it is. Admittedly, I've never used the Bitbucket side of things, but if it's anything like the Jira integration, it's probably pretty good. I don't work at a place that uses Jira anymore, but if you do, I highly recommend taking a look at this.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#live-share">
  </a>
  Live share
</h2>

<p>Visual Studio Code's Live Share features have been impressive since release, but in today's crazy pandemic world, with most tech companies working from home, this has become one of the best pair programming tools. Through this, you can have multiple people working on your code at the same time. Share a project, co-edit, co-debug, share a server, and share a terminal! It includes a voice call and chats with the session as well. Use it to show the new dev on the team through your codebase, give remote technical interviews, present a new feature to your team, and so much more!</p>

<p><a href="https://docs.microsoft.com/en-us/visualstudio/liveshare/">Official docs here</a></p>

<p>Note: One thing I would highly recommend looking over is the <a href="https://docs.microsoft.com/en-us/visualstudio/liveshare/reference/security#invitations-and-join-access">invitations and join access</a> docs to prevent the chance of unwanted visitors into your session. You can also check out the Live Share Gatekeeper extension I talk about below.</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack">Live Share Extension Pack</a> - Extension pack that includes the following extensions:

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare">Live Share</a> - Primary extension</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-audio">Live Share Audio</a> - Adds audio calling capability to Live Share sessions</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gatekeeper">Live Share Gatekeeper</a> - If you are having sessions about your proprietary codebases, there's a good chance your company doesn't want just anyone to be able to join in. Gatekeeper locks a live share session to only people that share the same domain/AAD tenant. Effectively preventing people from outside of your organization from joining your session even if they somehow got your session URL. You set a list of domains that are allowed, and it blocks everyone else.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#remote-development">
  </a>
  Remote development
</h2>

<p>Now you have this fantastic VSCode setup, but then you have to remote into a server or container to do your work. Or perhaps your company does all of its work on deployed servers (Google, Facebook, Amazon do a LOT of this). Well... Damn, there's no GUI there, you can't install VSCode onto a command line. I guess it's back to vim or emacs right?............... Not anymore! This has become one of my FAVORITE things in VSCode. With the following extensions, you can use VSCode to remotely develop inside containers, remote servers, or the Windows Subsystem Linux with <em>no source code</em> on your machine! For my work at Amazon, I have a remote server that I do my development work on, and I use this to SSH into it and use all the power of VSCode for working on my team's code. This effectively offloads all the computing stress from my computer and keeps our code safer as well. It's been a great experience so far! <a href="https://www.zdnet.com/article/facebook-microsofts-visual-studio-code-is-now-our-default-development-platform/">Facebook has gone all-in on it too</a>, which means they are also working with Microsoft to make it a great experience.</p>

<p><a href="https://code.visualstudio.com/docs/remote/remote-overview">Official docs here</a></p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack">Remote Development</a> - This is the main extension pack. It includes the following three extensions:

<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote - SSH</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers">Remote - Containers</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">Remote - WSL</a></li>
</ul>


</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#code-execution">
  </a>
  Code execution
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">Code Runner</a> - Just going to let this one speak for itself from its description, but TL:DR is, "Run code from LOTS of languages."
&gt; Run code snippet or code file for multiple languages: C, C++, Java, JavaScript, PHP, Python, Perl, Perl 6, Ruby, Go, Lua, Groovy, PowerShell, BAT/CMD, BASH/SH, F# Script, F# (.NET Core), C# Script, C# (.NET Core), VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml Script, R, AppleScript, Elixir, Visual Basic .NET, Clojure, Haxe, Objective-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Free Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, and custom commands.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest">Jest</a> - This is a plugin that runs your tests in the background and gives you live feedback. It's pretty nice, but I prefer <a href="https://dev.to/feed#wallaby">Wallaby</a>, which is listed as the inspiration for this extension and is much more comprehensive but also costs money (more about that next!). This extension also adds syntax highlighting to snapshot files.</li>
</ul>

<h3>
  <a class="anchor" href="https://dev.to/feed#paid">
  </a>
  PAID
</h3>

<p>I know, I know, paid extensions?! But seriously, hear me out on this. These have paid for themselves MANY times over in time savings for me! The same company makes both of these, and they are great. After the first year, you get a DEEP discount on renewal.</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.wallaby-vscode">Wallaby</a> - <a href="https://wallabyjs.com/">https://wallabyjs.com/</a> - $120 individual/$240 company the first year, renewals get a discount (more about that below) - Wallaby is a fantastic extension for testing. It continuously runs your tests in the background and gives you immediate feedback as you type (either your tests or the code you are testing) in the gutter next to your code! If you practice TDD, this is a near MUST HAVE. It also adds:

<ul>
<li>Time travel debugging</li>
<li>Inline runtime values (see what the result of your code from your tests is)</li>
<li>Inline error reporting</li>
<li>Inline code coverage</li>
<li>A hosted web application with a test and coverage explorer</li>
<li>Interactive test output</li>
<li>Runtime value explorer, and better diffs and snapshots.</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode">Quokka</a> - <a href="https://quokkajs.com/"></a><a href="https://quokkajs.com/">https://quokkajs.com/</a> - Community edition is Free, Pro version is $50 individual/$100 company per year, renewals get a discount (more about that below) - While Wallaby concentrates on tests, Quokka is a live scratchpad for your code. In the free community version, runtime values are displayed inline with your code, a basic value explorer, code coverage, live logging/compare, and live share integration. With the Pro version, you add a live value display, more extensive value explorer, live comments, project files, import quick package install, performance testing, and the ability to run only on save or a single time. Quokka is a phenomenal tool for prototyping, and I've used it a LOT in teaching people how to code.</li>
</ul>

<p>You can also bundle these two together for $150 for the first year for individuals. Renewal discounts are 50% for Wallaby, 30% for Quokka, and I believe it's around 40% for the bundle (I paid $89 + tax this past year).</p>

<p>If your company pays for it, it's more of course, but your company is paying, so not as much of a big deal, right?</p>

<h2>
  <a class="anchor" href="https://dev.to/feed#git">
  </a>
  Git
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=xyz.local-history">Local History</a> - Ok, this doesn't <em>really</em> have anything to do with Git, but it's local version control for every time you modify any file. Ever had that time when you wished you could time travel to that idea you had an hour ago that you didn't commit and ended up wiping out? Yeah, this extension has got your back! This has genuinely saved my ass so many times. It's one of those you think you probably don't need until you do, and you are cursing yourself for not installing. Just be sure to add <code>.history</code> to your <code>.gitignore</code>, preferably globally.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github">GitHub Pull Requests and Issues</a> - Connects with GitHub and allows you to do PR reviews straight from VSCode without ever having to open a browser! Awesome, right?!?! You can create PRs, see any active ones, see which ones are assigned to you, comment, review, check out PR branches to test them, approve, merge, and close PRs right from your editor! You also get all the benefits of your editor. Code highlighting, search, all the power of VSCode, and the other amazing extensions you are installing! I use this all of the time for PR review. It's been one of my favorites.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits">VSCode Conventional Commits</a> - If you use Conventional Commits, this is the extension for you. It allows you to go through the same prompt as the Commitizen tool has on the CLI (except it also adds Gitmoji!!!! ????????) right in your editor. There's also a Commitizen extension out there, but it doesn't have Gitmoji, sooooooooooo... I now use this one.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ziyasal.vscode-open-in-github">Open in GitHub, Bitbucket, Gitlab, VisualStudio.com!</a> - Goto a line in your project and activate this to either navigate right to the line of code in GitHub or copy the link to your clipboard to post out to a teammate.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">GitLens</a> - The most powerful extension in VSCode for looking at git history. It started mainly as an extension with git blame annotations, but has added SO MUCH MORE! I've been using it for three years and haven't <em>really</em> tapped into the power of this extension to it's fullest. Here's a list of just <em>some</em> of its features

<ul>
<li>Current line blame</li>
<li>Code block blame - With how many authors have edited the block</li>
<li>Status bar blame</li>
<li>Hovers</li>
<li>blame</li>
<li>details</li>
<li>changes</li>
<li>annotations</li>
<li>Side bar views</li>
<li>Repository information</li>
<li>File history</li>
<li>Line history</li>
<li>Commit comparison</li>
<li>Commit search</li>
<li>Gutter blame</li>
<li>Gutter heatmap</li>
<li>Recent changes annotations</li>
<li>And a WHOLE LOT MORE!</li>
</ul>


</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#markdown">
  </a>
  Markdown
</h2>

<p>Alright, I had to give Markdown its own section, because I have a LOT going on with Markdown. In fact, I'm writing this entire thing in Markdown, in VSCode, using these extensions. I use VSCode and Markdown for all my writing, note-taking, and my personal website/blog/digital garden development (which is currently in development, I'll add a link here when it's published). Through extensions, VSCode becomes a <em>very</em> robust environment for all of this work. You get all the text editing power of VSCode itself and can customize your own writing experience through extensions to be whatever you want it to be. There's so much you can do here, so let's dig into things.</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=foam.foam-vscode">Foam</a> - Note-taking concepts like Networked thought, <a href="https://www.buildingasecondbrain.com/">Second Brain</a>, and <a href="https://zettelkasten.de/">Zettelkasten</a> are all the rage right now. Perhaps you've heard of the note-taking phenomenon that is <a href="https://roamresearch.com/">Roam</a>. Foam is inspired by Roam, built inside VSCode, and uses Markdown files stored on your computer, not somewhere up in the cloud where you have no control over it. Created by <a href="https://twitter.com/jevakallio">Jani Eväkallio</a>, it's a fast-growing system of intertwining different Markdown extensions together with some extra functionality to give you an excellent networked thought note-taking environment.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">Markdown All in One</a> - If you're going to have any Markdown extensions, at least have this one. As its name suggests, it is an all-in-one gathering of functionality. This extension adds keyboard shortcuts for creating/updating a table of contents, list editing, table formatter, printing to HTML, math, auto completions, and more.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=kortina.vscode-markdown-notes">Markdown Notes</a> - Mainly for all my notes, this adds the ability to use [[wiki-links]], backlinks, and #tags in Markdown for quick navigation.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=tchayen.markdown-links">Markdown Links</a> - Another one is mainly for Foam and my notes. It takes all those links between local Markdown files and creates a graph showing how they are interlinked to each other.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint">MarkdownLint</a> - Linting for Markdown?! Yep! It has a pretty extensive set of <a href="https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md">rules</a> you can configure how you would like to in your preferences.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=goessner.mdmath">LaTeX Math for Markdown</a> - To be honest, I don't use this, but I do seem to know a lot of people that do, so I wanted to include it here.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=znck.grammarly">Grammarly (unofficial)</a> - Grammarly in VSCode?! Yep! I just found this while working on this post, and it does a pretty good job!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=hancel.markdown-image">Markdown Image</a> - Paste an image directly into your Markdown file and it will generate the Markdown code and save the image either to a local folder (default) or you a hosting service like Imgur.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf">Markdown PDF</a> - Convert your nice Markdown file to a PDF.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.wordcount">Word Count</a> - Adds a word count in the status bar when editing Markdown files. All my writing is in Markdown files, and I challenge myself to write 1000+ words per day, so this helps me keep track.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=sissel.shopify-liquid">Liquid</a> - Syntax highlighting for the Liquid template language. I put this here rather than languages because Markdown is the only place I use them. Dev.to uses Liquid tags for many features, so when I'm writing in VSCode with these tags, it's nice to have some syntactic highlighting in my editor.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=xyc.vscode-mdx-preview">MDC Preview</a> - Preview panel for MDX as well!</li>
</ul>

<h3>
  <a class="anchor" href="https://dev.to/feed#extensions-by-matt-bierner">
  </a>
  Extensions by Matt Bierner
</h3>

<p>If there's anyone that I recommend following to learn more about VSCode, it's <a href="https://blog.mattbierner.com/">Matt Bierner</a>. He's actually on the VSCode dev team, so he kind of knows his way around it. Not only does he make great extensions, but he <a href="https://twitter.com/mattbierner">tweets out a VSCode tip every day</a> and just started a <a href="https://www.youtube.com/playlist?list=PLvKOuwv1u7bFsBC2ONDLk9LfDHklSW6xR">Code 0 to 20 video series on YouTube!</a> So, let's go over his extensions because they are all pretty great!</p>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=skn0tt.markdown-link-expander">markdown-link-expander</a> - Let's start with one of my favorites. Highlight a link, activate this plugin, and grab the title from the page of the link and generate the filled Markdown link tag for you!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=darkriszty.markdown-table-prettify">Markdown Table Prettifier</a> - Simple table formatting</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=mdickin.markdown-shortcuts">Markdown Shortcuts</a> - Keyboard shortcuts for common markdown commands. A little more of an extensive list than Markdown All in One has.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.github-markdown-preview">GitHub Markdown Preview</a> - Extension pack to make the Markdown preview window look like the one on Github

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles">Markdown Preview GitHub Styling</a> - Core styles for the preview window to match Github. Note: With this extension, the markdown preview will have a white theme even if you have a dark theme set overall.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-emoji">Markdown Emoji</a> - MOAR EMOJI!!! ????????</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-checkbox">Markdown Checkboxes</a> - Add checkbox/task list support to the preview window. Great for making todo lists in your notes!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-yaml-preamble">Markdown YAML Preamble</a> - If you use the YAML front matter style heading in your Markdown, this will render it as a table at the top of the preview window.</li>
</ul>


</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid">Markdown Preview Mermaid Support</a> - Mermaid is a library for making diagrams and flowcharts. This extension adds support for it in the preview window!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-footnotes">Markdown Footnotes</a> - Footnote syntax support in preview</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-image-size">Markdown Image Size</a> - Gives the ability to add size to image tags in Markdown and render the match in the preview.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.jsdoc-markdown-highlighting">JSDoc Markdown Highlighting</a> - Markdown syntax highlighting to JSDoc comments</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=bierner.gif-player">Gif Player</a> - Play/pause/scrub animated gifs in the editor!</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#working-with-images-and-colors">
  </a>
  Working with Images and colors
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=jock.svg">SVG</a> - This one's a little more involved than the simple viewer. This is a self-proclaimed SVG Language Extension. It adds auto-completes, a document symbol tree, live preview, PNG export, MDN reference, color pickers, and SVGO integration for code formating and minification. It's an SVG toolbox for the really digging in.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio">Draw.io Integration</a> - Unofficial integration of Draw.io directly into VSCode. This puts the entire Draw.io editor right in your code editor!</li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=bierner.color-info">Color Info</a></li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#showing-off">
  </a>
  Showing off
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour">CodeTour</a> - Code tour is an excellent extension that does something pretty unique. It allows you to create guided <em>tours</em> through a repo inside VSCode by recording steps that a user can follow through. Navigate files, call shell commands, run tasks, export different tours for different situations, it even has it's own version control for your tours! CodeTour is one of the ultimate onboarding documentation extensions, but can be used for any situation where you want to show someone through some bits of code, but can't do so in person.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=CodeRoad.coderoad">CodeRoad</a> - <a href="https://coderoad.github.io/">https://coderoad.github.io/</a> - Ok, so this is another unique one that just came on my radar while writing this. It's a lot like CodeTour, but the difference here is that CodeRoad is more for making interactive tutorials. I honestly have not tried this one out yet, but it looks promising, and I can't wait to dig in with it!</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ericadamski.carbon-now-sh">Carbon-now-sh</a> - Do you take a lot of screenshots of code? Do you use Carbon to make those look nice? Well, this is here for you to make that easy. Highlight the code you want, activate the extension, and take you to carbon.now.sh with your code already input. Tweak the style, export, done.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#other-utilities">
  </a>
  Other utilities
</h2>

<ul>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">Live Server</a> - If you work on a lot of static sites, this is a great little extension that starts up a quick server for you to serve those files up to the browser.</li>
<li>
<a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client">REST Client</a> - Do you like Postman but don't <em>really</em> use all of its fancy features? This is another extension that could replace another open application on your computer (isn't it beautiful clearing out RAM?). It doesn't have the <em>real</em> fancy stuff that Postman does, but don't let that fool you, it's got the goods where it counts. Send HTTP requests, GraphQL queries, cURL commands with request history, authentication support, env variable support, Cookie support, and more.</li>
</ul>

<h2>
  <a class="anchor" href="https://dev.to/feed#there-you-have-it">
  </a>
  There you have it
</h2>

<p>Alllllllllright! That's it! One BIG 'OL list of extensions with some brief intros into them! I hope you found some that you like and can use! As I said earlier, if you have an extension you have found instrumental to your work, please, leave a comment and let me know! I would love to check it out, and even if it's not the right one for me, maybe it is for someone else reading this!</p>

<p>Coming up soon in this series, I'm going to start taking sections of these extensions and breaking down how you can optimize your experience in VSCode. We're going to go through how to set them up and use them in more depth so you can get a better taste of the workflows that I've come to depend on while working in my applications.</p>              </p>
              <p class="meta"><a href="https://dev.to/tretuna/visual-code-extensions-not-just-the-top-10-4gnk">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="http://blog.bonnieeisenman.com" title="Bonnie Eisenman">Bonnie Eisenman</a></h2>
              <p>
August 21, 2020 12:00 AM                <br />
                <a href="http://blog.bonnieeisenman.com">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="http://blog.bonnieeisenman.com/blog/what-is-processing/">Is Processing Java?</a></h2>
              <p>
<p>If you’ve delved into programming-for-art before, chances are that you’ve encountered Processing. It’s a phenomenally successful tool for coding for visual art.</p>

<p>Processing describes itself as “<a href="https://processing.org/">a flexible software sketchbook and a language for learning how to code within the context of the visual arts</a>”. It’s based loosely on Java, but it ships with its own development environment and code editor (the Processing “sketchbook”) and its syntax is not-quite-Java. These changes are primarily aimed at making Processing simpler and more accessible; the target audience has little to no prior programming experience. There’s no need to puzzle over the arcane incantation of <code class="language-plaintext highlighter-rouge">public static void main(String[] args)</code> in Processing. Instead, there’s a <code class="language-plaintext highlighter-rouge">draw()</code> function that somehow gets magically invoked when you run your “sketch.”</p>

<p><img src="https://blog.bonnieeisenman.com/images/processing-gameoflife.png" /></p>

<p>Another simplification: if you use the Processing IDE, you don’t have to deal with imports. All of the files in a given “sketch” directory are somehow available to use. This makes it easy to introduce newcomers to Processing. However, as a programmer, I want to know what’s happening under the hood.</p>

<p>There’s some light documentation around this (see: <a href="https://github.com/processing/processing/wiki/FAQ#i-know-java-is-this-java-how-do-i-use-it-that-way">Is this Java?</a> from the FAQ) but not a ton of technical detail. For a while, I was still confused – is Processing a separate programming language in its own right, or is it just Java? Can I use a normal Java IDE to write Processing, or do I need to use the Processing IDE?</p>

<p>As far as I can tell, Processing actually consists of three pieces:</p>
<ul>
  <li>a Java library</li>
  <li>a Java pre-processor, which compiles the Processing language into normal Java</li>
  <li>a coding environment (the “sketchbook” / Processing IDE)</li>
</ul>

<p>The pre-processor does some interesting things. Most dramatically, imo, it takes all of the code in a single sketch and shoves it into a single class. Any classes you declare in your .pde files are now <em>inner classes</em>. Also, your files will be concatenated in alphabetical order – so you can end up with e.g. conflicting definitions of variables. All of that content then gets wrapped in more boilerplate, which takes care of things like creating that nice PApplet popup window, running the drawing loop, and importing some classes like PConstants by default. This is neat on some levels (no worrying about imports! You always have access to a PApplet instance!) but can be a real headache if you need to debug something related to the pre-processor’s invisible magic.</p>

<p>In order to invoke the pre-processor, it seems like you need to either use the Processing IDE, or use one of the existing command-line tools like <a href="https://github.com/processing/processing/wiki/Command-Line">processing-java</a>. There is also a support <a href="https://py.processing.org/">Python “mode”</a> but honestly I don’t know much about how it’s implemented.</p>

<p>Another option is to use the standalone Java library from any other JVM environment, which means that you could use something like Kotlin, Clojure, or Scala. The tricky bit is that you’ll be missing any magic from the pre-processor or the IDE. Some considerations if you want to use Processing as a standalone library:</p>

<ul>
  <li>You’ll need to subclass the <a href="https://processing.github.io/processing-javadocs/core/processing/core/PApplet.html">PApplet</a> class.</li>
  <li>Some of the syntax is slightly different.</li>
  <li>You’ll need to handle imports on your own. There are magical constants like <code class="language-plaintext highlighter-rouge">PI</code> that are available in Processing without needing to specify any imports; these are located in the <a href="https://processing.github.io/processing-javadocs/core/processing/core/PConstants.html">PConstants</a> class.</li>
  <li>The Processing IDE handles a lot of Java classpath issues for you. Processing uses its own version of Java, not whatever Java you have installed on your system. Also, if you want to use the Processing library you’ll need to <a href="http://pages.cs.wisc.edu/~cs302/labs/EclipseTutorial_Processing/Step_02.html">add the core.jar file to your classpath</a>.
<a href="https://github.com/processing/processing/wiki/Supported-Platforms#java-versions">Processing 3.x doesn’t support Java 9 or later.</a> It doesn’t support all Java 8 features, either.</li>
</ul>

<p>None of these are insurmountable issues. The most difficult part is that the Processing docs all assume that you’re using the “full” Processing experience of library, pre-processor, and IDE. Luckily, the source code itself is fairly straightforward and well-commented.</p>

<p>Personally, now that I have a better understanding of the different abstraction layers at play, I’ve really been enjoying using Processing with Scala, using IntelliJ as my IDE and SBT for my build tool. I have a very small and poorly-tested <a href="https://github.com/bonniee/ProcessingSBTTemplate">template project</a> demonstrating this.</p>

<p>Using Processing outside of the standard “sketchbook” environment means that I can use all of my usual tools. I can write tests for my code, I can organize my code into many classes and files, I can use a full-fledged IDE where I’ve already memorized the keyboard shortcuts. I like using Scala because I already use it at work, so it’s a natural language to think in. You could also use Processing from other JVM languages, like Kotlin or Clojure. As an example, <a href="https://tylerxhobbs.com/essays">Tyler Hobbs</a> uses a Clojure library called <a href="http://quil.info/">Quil</a> for interacting with Processing.</p>

<p>So, in summary – Processing isn’t Java. It’s a Java library, and some tools on top of that. If you’d rather treat it like a Java library, then as a programmer, we can do that!</p>

<p><em>Thank you to Michael Noronha and Akiva Leffert for commenting on an early draft of this post.</em></p>

  <p><a href="http://blog.bonnieeisenman.com/blog/what-is-processing/">Is Processing Java?</a> was originally published by Bonnie Eisenman at <a href="http://blog.bonnieeisenman.com">Bonnie Eisenman</a> on August 21, 2020.</p>              </p>
              <p class="meta"><a href="http://blog.bonnieeisenman.com/blog/what-is-processing/">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="http://dev.solita.fi" title="/dev/solita">Solita developer blog</a></h2>
              <p>
August 20, 2020 12:00 AM                <br />
                <a href="http://dev.solita.fi">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="http://dev.solita.fi/2020/08/20/react-native-experiences.html">Two Years With React Native: Practical Experiences On Android Development</a></h2>
              <p>
<p>There are many ways to write software for mobile devices. When I started teaching myself mobile application development sometime in 2013, typical options were writing a native application separately for each mobile platform, or by creating a program with web technologies and possibly embedding it into a downloadable “hybrid” application. Both options have their pros and cons, so I decided to learn the essentials of both methods.</p>

<p>React Native entered the field in 2015. It introduced a new “hybrid native” development approach: creating truly native mobile applications by using a single JavaScript codebase that runs on multiple platforms (Android and iOS). Despite using JavaScript, the big difference compared to embedded web applications is that the user interface layer uses platform-specific native components. This makes the user interface of React Native apps feel truly native - because it is! Application logic layer can also use platform-specific native APIs via a large collection of open-source JavaScript libraries. All of this changed my thinking of how mobile applications could be created because in theory, it makes multi-platform mobile application development much easier and faster than before.</p>

<h2 id="jumping-aboard">Jumping Aboard</h2>

<p>I have been working in the software industry for more than five years now. Most of that time I have spent in Clojure projects, writing code for both servers and web browsers. Still, I am also familiar with more common web technologies, such as JavaScript, React and Redux. My first experience with React Native happened two years ago when I started working in a new project. The project consisted of a Clojure web application, and a separate mobile application for giving users a better offline experience. When I entered the project, the mobile application had been under development for half a year already and it had reached closed beta testing phase.</p>

<p>Along with React Native itself, there were some important software libraries in use, such as <strong>Realm</strong> for providing a client-side mobile database, <strong>Redux Form</strong> for implementing forms, <strong>React Native Navigation</strong> for navigating between screens (not to be confused with React Navigation), and <strong>Native Base</strong> for additional user interface components. Even though these technologies are cross-platform, our mobile application targeted only Android devices in the beginning, since the user base consisted mostly of Android users.</p>

<h2 id="entering-react-native">Entering React Native</h2>

<p>Code written for React Native looks pretty familiar to anyone who has done web development with React. The user interface is built around React components, which have lifecycle methods and rendering logic. The main difference between regular React and React Native is that we do not use HTML and CSS. Instead, we make use of the user interface components provided by React Native and Native Base. The component tree is written in JSX and looks pretty much the same as in React for the web. CSS is not present, but styles are written as JavaScript objects that use CSS-like properties. Layout is created with Flexbox, which also works the same way as it does in CSS on the web with some minor exceptions.</p>

<p>Here is an example of a React Native component:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">GeneralStyles</span> <span class="o">=</span> <span class="nx">StyleSheet</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span>
  <span class="c1">// Style maps look a lot like CSS</span>
  <span class="na">MainContent</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">padding</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="c1">// Values are unitless</span>
    <span class="na">marginTop</span><span class="p">:</span> <span class="mi">10</span>
  <span class="p">},</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nx">HelpSection</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="cm">/* Instead of div, span and other HTML elements, we use native elements,
     * which map to their native iOS and Android counterparts.
     * There are also some platform-specific components. */</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">Layout</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Content</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">GeneralStyles</span><span class="p">.</span><span class="nx">MainContent</span><span class="p">}</span><span class="o">&gt;</span>
          <span class="o">&lt;</span><span class="nx">HelpCard</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Workflow</span><span class="dl">"</span><span class="o">&gt;</span>
            <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">React</span> <span class="nx">Native</span> <span class="nx">looks</span> <span class="nx">familiar</span><span class="p">.</span><span class="o">&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>          <span class="o">&lt;</span><span class="sr">/HelpCard</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="sr">/Content</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/Layout</span><span class="err">&gt;
</span>    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Coming from the web perspective, React Native code looked pretty familiar to me from day one on the project. Still, the big difference is that the code does not run in a web browser, but in an emulator during the development and finally in a physical mobile device. This was different, but not necessarily a difficult thing to manage. The experience of using the app in an emulator was mostly identical to running it on a physical device. There were some problems that raised only on a physical device though, so I do recommend always testing on a physical device before shipping the app to the customers.</p>

<h2 id="development-experience-with-react-native">Development Experience with React Native</h2>

<p>Past experience with React helped me a lot to start working on the project. Most of the time, there was not much of a difference coding React Native compared to React, which was a positive thing to me. I also enjoyed the simplicity of JavaScript much more than Java for writing Android applications - although it has been years the last time I did that. Unfortunately, when the development continued for a longer time, some problems started to rise too.</p>

<p>In web development, I like that my frontend code is automatically reloaded into the browser. In React Native, there was a similar hot reload functionality, but it did not always work as expected. Way too often the changes I made were simply not hot-reloaded into the emulator at all, or required me to restart the application. Debugging the user interface was also difficult. Modern browsers have comprehensive built-in tools for this type of work, but React Native contained only a basic inspector. I realized it was easier to debug UI by manually including red borders around elements to see how the layout was rendered. Fortunately, debugging application logic was possible via console logging, but for some reason React Native logging tool was unable to log big objects to the console. The log was simply cut off if the object to be logged was too big. We also had problems using some open-source libraries together, for example toast messages could not be shown on top of React Native Navigation modals for some reason.</p>

<p><img alt="React Native" src="https://dev.solita.fi/img/react-native-experiences/reactnative.jpg" />
<em>React Native’s built-in debugging tools are pretty basic</em></p>

<p>Many little issues like these slightly lowered my expectations on easy mobile development with React Native - it seemed that the single codebase approach worked much better in theory than in practice. Even if we were able to build working software, the development process and tools occasionally felt like web development in the 2000s. Luckily new versions of React Native were introduced during the project that could potentially make the development experience better. The problem, however, was that upgrading React Native and related libraries turned out to be intensely difficult.</p>

<h2 id="working-with-outdated-software">Working With Outdated Software</h2>

<p>When I started working on the project, React Native and some of the related libraries were already lagging behind in development (we started with React Native 0.51). Despite this, we were able to deliver a working application to closed beta testing. After this, however, the project entered a period in which we did not do much new development. Critical issues were fixed, but new features were not implemented for a long time, not to mention updating the outdated libraries.</p>

<p>When the development continued again, I noted that we had to try to upgrade React Native and libraries to ensure maintainability and smoother development experience. Furthermore, starting from August 2019, Google requires that all new Play Store applications and their updates have to support 64-bit architecture. The outdated React Native was unable to meet this requirement, so we would have had to make the upgrade anyway.</p>

<h3 id="beginning-upgrade">Beginning Upgrade</h3>

<p>In theory, the upgrade process should be painless. For instance, there is <a href="https://react-native-community.github.io/upgrade-helper/">React Native Upgrade Helper tool</a>, which shows the changes you need to make in your code in order to upgrade. You can also try to upgrade React Native automatically by running <code class="language-plaintext highlighter-rouge">npx react-native upgrade</code>. Nice and simple - or isn’t it?</p>

<p>In practice, the upgrade process is way more difficult. React Native and Android evolve rapidly, and some libraries depend on specific React Native version. Virtually this means that when a big React Native upgrade is ahead, we cannot simply upgrade React Native without upgrading the majority of the libraries at the same time. This not only makes the upgrading process arduous, but in case of problems the root cause might be difficult to clarify since so many things change at once. Also, since the whole React Native ecosystem is still relatively new, the APIs of libraries are also evolving, and not always in backwards-compatible way.</p>

<h3 id="upgrade-process">Upgrade Process</h3>

<p>I began the upgrade process by first trying the automatic upgrade. It did not work very well, so I then used the upgrade helper tool to manually make all the needed changes. Still, I was far away from software that could even be compiled again. Compiling raised a lot of not-so-developer-friendly errors, which I then googled and resolved one by one (many of these were related to BabelJS and linking native libraries). It also helped to download a working template project from GitHub and compare my configuration to it to spot potentially breaking differences. At some point, the software compiled again, but it was still far from usable as the screen was literally full of warnings and errors.</p>

<p>For instance, I realised that the version of React Native Navigation we used was so old that I did not even find a changelog for it. It turned out that the API of the library had changed completely, so a big part of the upgrade process was to rewrite almost all the navigation logic of our application.</p>

<p>Another mystical problem was caused by Realm, which we use to provide an easy to use offline database. After the upgrade, all database queries simply crashed with a mystical error. Downgrading was not an option, since the problem also occurred with the previous Realm version after upgrading React Native. The problem was reported in GitHub, but it took almost a month until a working workaround was found. A few months later, the problem was reported to be fixed.</p>

<p>Finally, after over 50 hours of work, the upgrade to React Native 0.62 was complete. It was clearly the most tedious software library upgrade I had ever done. Luckily, it turned out that the upgrade was worth the effort. Hot Reload worked more reliable (and it was renamed to Fast Refresh) and many minor issues were fixed. The upgrade also meant that we were able to use the latest version of <a href="https://github.com/jhen0409/react-native-debugger">React Native Debugger</a>.</p>

<h2 id="notes-to-self-and-others">Notes To Self And Others</h2>

<p>After working with React Native for two years, the experience has been mixed. Many minor issues with development tools and lack of proper debugging tools made the development process a bit painful, especially at the beginning. However, the framework and the related libraries evolve rapidly, and even if the upgrade process has been tedious, the updates have improved the ecosystem a lot. The fact that writing React Native code feels like writing a regular web application with React, but using native elements under the hood, has been a positive experience for me. The cross-platform functionality remains to be seen though as there is no iOS version of our application (yet).</p>

<p>All in all, despite the mentioned challenges, I have a positive attitude towards React Native. Writing separate applications for each mobile platform is not an option for many, and embedded web applications simply cannot meet the native feel that React Native provides. Thus, I think it’s safe to say that React Native and other similar frameworks are here to stay, and I’m looking forward to how they will evolve in the coming years. I just hope that future upgrades of React Native are not as tedious and time-consuming as what we have experienced.</p>              </p>
              <p class="meta"><a href="http://dev.solita.fi/2020/08/20/react-native-experiences.html">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://stuartsierra.com" title="Digital Digressions by Stuart Sierra">Stuart Sierra</a></h2>
              <p>
August 19, 2020 08:40 PM                <br />
                <a href="https://stuartsierra.com">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="http://feedproxy.google.com/~r/StuartSierra/~3/g7tUtDCYKes/sequential-consequences">Sequential Consequences</a></h2>
              <p>
There comes a point in a programming career — at least one as peripatetic as mine — at which learning a new programming language barely registers as an obstacle. I’m not talking about mind-meltingly different languages like APL, just your run-of-the-mainstream object/imperative mishmash. Grab a syntax cheat-sheet, skim the standard library docs, and off you go. Recently,… <p><a class="moretag" href="https://stuartsierra.com/2020/08/19/sequential-consequences">Read the full article</a></p><img alt="" height="1" src="http://feeds.feedburner.com/~r/StuartSierra/~4/g7tUtDCYKes" width="1" />              </p>
              <p class="meta"><a href="http://feedproxy.google.com/~r/StuartSierra/~3/g7tUtDCYKes/sequential-consequences">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://camsaul.com/" title="camsaul.com">Cam Saul</a></h2>
              <p>
August 19, 2020 08:07 PM                <br />
                <a href="https://camsaul.com/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://camsaul.com/methodical/2020/08/19/my-clojure-north-2020-talk-about-methodical-is-up.html">My Clojure/north 2020 talk about Methodical is now available on YouTube</a></h2>
              <p>
<p><a href="https://clojurenorth.com/cam-saul.html">I gave a talk about a library I wrote called Methodical at Clojure/north
2020.</a> <a href="https://github.com/camsaul/methodical">Methodical</a> ports the “generic
method” parts of the Common Lisp Object System (CLOS) to Clojure in a Clojurey way. As far as I can tell, it’s the
best/most complete port of the CLOS to Clojure out there, even though it only ports a subset of CLOS.</p>

<p>This talk is now available to watch on YouTube:</p>

<p><a href="https://youtu.be/If3GT8zSHfE"><img src="https://img.youtube.com/vi/If3GT8zSHfE/maxresdefault.jpg" /></a></p>

<p>If you enjoyed the talk and have money burning a hole in your pocket, consider buying me a cup of coffee at <a href="https://github.com/sponsors/camsaul">GitHub
Sponsors</a>.</p>              </p>
              <p class="meta"><a href="https://camsaul.com/methodical/2020/08/19/my-clojure-north-2020-talk-about-methodical-is-up.html">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://dev.to" title="DEV Community">The Practical Dev</a></h2>
              <p>
August 18, 2020 06:51 PM                <br />
                <a href="https://dev.to">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://dev.to/educative/7-coding-tools-that-will-maximize-your-effectiveness-5g47">7 coding tools that will maximize your effectiveness</a></h2>
              <p>
<p>When learning to code, developers-to-be are usually taught to code vanilla software. In the workplace, however, developers use many tools to speed up their coding. Common tasks like testing, running various scripts, and programming environment control are just a few examples of when an extra tool comes in handy.</p>

<p>The trouble is, there are many of these tools on the market, and it’s hard to know which are best. It often takes years of trial and error to discover which tools are the most helpful. To save you that effort, we asked some experienced developers about the tools that have helped them become better coders and maximize their efficiency on the job.</p>



<p><strong>Today, we'll look into these 7 tools:</strong></p>

<ul>
<li><a href="https://dev.to/feed#I3">I3 Window Manager</a></li>
<li><a href="https://dev.to/feed#vim">Vim</a></li>
<li><a href="https://dev.to/feed#bash">Bash</a></li>
<li><a href="https://dev.to/feed#functional-programming">Functional programming</a></li>
<li><a href="https://dev.to/feed#reflect">Reflect</a></li>
<li><a href="https://dev.to/feed#regex">Regex</a></li>
<li><a href="https://dev.to/feed#regexr">RegExr</a></li>
</ul>






<h3> <b> Stuck at home? Get 6 front-end courses for free </b>

</h3>
<p>Educative is providing 6 free front-end development courses for people whose life or livelihood has been interrupted by Covid-19. Build new skill sets and increase your hireability at the same time.</p>

<p><b><a href="https://www.educative.io/covid-scholarship">Covid-Relief Scholarship</a></b></p>



<p><a></a></p>
<h2>
  <a class="anchor" href="https://dev.to/feed#1-linux-i3-window-manager">
  </a>
  1.  Linux I3 Window Manager
</h2>

<p>Developers have long used Linux for its flexibility and customization options. I3 furthers these options to provide near-complete control over your programming environment.</p>

<p>I3 is a lightweight open-source tiling window manager for Linux. Window managers are used to control the appearance and placement of windows on a screen. Tiling window managers take this a step further by automatically resizing and rearranging windows to always use the full-screen space without overlapping. This tiling works over the top of your operating systems graphical user interface (GUI) to make changes directly.</p>

<p>Here are some ways I3 Window Manager (i3wm) stands out:</p>

<ul>
<li><p><strong>Lightweight:</strong> I3 is simple and efficient. It contains only essential functions without extra fluff and is specially designed for developers to use minimal processing power.</p></li>
<li><p><strong>Keyboard Controlled:</strong> I3 has extensive keyboard shortcuts built-in for any desired behavior. You can also add additional shortcuts directly to your <code>config</code> file. You can move tiles, open the terminal, change layouts, and more, all without touching the mouse.</p></li>
<li><p><strong>Total Screen Usage:</strong> By using tiling, I3 ensures you never have to search a pile of tabs for a single window. You can have as many tiles open as you want while minimizing eye strain with bigger windows. This kind of tiling system is perfect for system administrators who need multiple terminals or anyone who needs test and draft terminals.</p></li>
<li><p><strong>Custom Themes:</strong> I3’s appearance is fully customizable to fit your aesthetic. Operating systems like Windows or macOS have certain visual elements set as unchangeable. With I3, every inch of the screen is yours to customize. Fine tune your background, window appearance/behavior, notification appearance, and more.</p></li>
</ul>


<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-workspaces-with-i3">
  </a>
  Expert tip: Workspaces with I3
</h3>

<p>One of I3’s most useful tools is the ability to group windows into numbered workspaces. Developers often set workspaces for different parts of their workflow. You can quickly switch between workspaces by pressing <code>super</code> and the index of the workspace. This will hide all current windows and position the windows of the selected workspace.</p>

<p>Optimal use of workspaces speeds up productivity. They’re also useful for dual-monitor setups as you have a workspace open on each monitor and quickly switch which monitor a workspace is currently on in just one keypress.</p>





<p><a></a></p>



<p><a class="article-body-image-wrapper" href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIbp76AN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h0aqulypmmybsxb35ry7.png"><img alt="Alt Text" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIbp76AN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h0aqulypmmybsxb35ry7.png" /></a></p>


<h2>
  <a class="anchor" href="https://dev.to/feed#2-vim">
  </a>
  2. Vim
</h2>

<p>Vim is a text editor for most programming languages. This developer-focused text editor focuses on key binding customization and coding efficiency. </p>

<p>It’s a modal text editor, meaning it can have multiple modes that are each optimized by the user for a specific task. For example, you may have one mode set up for Python and one for C++. These modes allow one keystroke to have different behavior depending on the language, such as language-specific shortcuts. </p>

<p>Like I3, Vim is entirely keyboard controlled. By cutting mouse use, you can reduce downtime and reduce workflow interruptions. Vim is also designed to work on nearly any major platform, which is ideal for team collaboration. </p>

<p>Finally, Vim’s shortcuts are all configured in a sharable <code>.vimrc.</code> file. Many developers post their tested files on Github. Starting with one of these files allows you to benefit from your peers’ experiences while leaving your personal version available for individual editing.</p>


<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-setup-vim-shortcuts-using-the-dry-principle">
  </a>
  Expert tip: Setup Vim shortcuts using the DRY principle
</h3>

<p>One of the most core paradigms held by programmers is DRY: Don’t Repeat Yourself.</p>

<p>We see this in code as the ability to recognize and extract repeated code behavior into a modular method. This modular thinking allows you to type each behavior only once and then simply call the method whenever you need that behavior later.</p>

<p>Use this same paradigm to set up your Vim shortcuts for efficiency. For example, if you notice that your work frequently requires you to implement a binary search tree in Java, you can set up a shortcut to paste a binary search tree template. </p>



<p><a></a></p>



<p><a class="article-body-image-wrapper" href="https://res.cloudinary.com/practicaldev/image/fetch/s--93Fjtw8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jeqoorreecx4n1xb8lz4.jpg"><img alt="Alt Text" src="https://res.cloudinary.com/practicaldev/image/fetch/s--93Fjtw8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jeqoorreecx4n1xb8lz4.jpg" /></a></p>


<h2>
  <a class="anchor" href="https://dev.to/feed#3-bash">
  </a>
  3. Bash
</h2>

<p><a href="https://www.educative.io/blog/bash-shell-command-cheat-sheet">Bash</a> is a free Unix shell developed for the GNU Project. It has long been used as the default login shell for Linux, and more recently, MacOS and Windows 10. Other than logins, Bash supports hundreds of commands that can be called from within the application.</p>

<p>Bash is known for its scriptability. Rather than typing in a set of commands each time you want them, you can instead save one shell script file that contains all those commands. Each command will execute in the order that they’re entered.</p>

<p>Bash acts at a near-bottom level, meaning these commands can manipulate files and memory all without opening a desktop app medium. For example, you could create a shell script that systematically transfers the full contents of a hard drive to another device without ever opening a file manager like File Explorer.</p>

<p>By bypassing desktop applications, Bash can work more efficiently and often allows for more specialized tasks. </p>

<blockquote>
<p><em>See Educative’s article on <a href="https://www.educative.io/blog/bash-shell-command-cheat-sheet">Top 25 commands and creating custom commands</a> for a cheat sheet of all the best commands for developers.</em></p>
</blockquote>


<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-use-your-bash-history">
  </a>
  Expert tip: Use your Bash history
</h3>

<p>Effective use of Bash history can make the difference between competency and mastery. To make sure you’re getting all you can out of your history, here are a few helpful commands you won’t want to forget:</p>

<p><strong>Multi-Window Enabled History</strong></p>

<p>By default, Bash only records history from the first instance opened while all subsequent windows have their histories lost. The following command enables all active Bash windows to write to the history, so you never lose a command again.<br />
</p>

<p><code>shopt -s histappend</code><br />
</p>

<p><strong>Repeat Last Command</strong></p>

<p>Repeating the last command executed is a common function in Bash. You can enter any of the following 4 commands:</p>

<ul>
<li>Press up on the arrow keys to view the last command and <code>enter</code> to execute it</li>
<li>Press <code>ctrl+p</code> to view the last command and <code>enter</code> to execute it</li>
<li>Type <code>!!</code> in the command line</li>
<li>Type <code>1-!</code> in the command line</li>
</ul>

<blockquote>
<p>You can add additional elements to commands repeated with <code>!!</code> by including them before or after: <code>sudo !!</code></p>
</blockquote>

<p><strong>Reverse Search History</strong></p>

<p>You can search Bash’s history for past commands. Simply press <code>ctrl-r</code> and begin typing your search to have Bash autofill with matching lines. If multiple lines match, press <code>ctrl-r</code> again to cycle through them.</p>



<p><a></a></p>

<h2>
  <a class="anchor" href="https://dev.to/feed#4-functional-programming">
  </a>
  4. Functional programming
</h2>

<p>Functional programming is a declarative programming. Programs are constructed through single or combinations of small first-class functions that do not have side effects. Declarative programming focuses on building solutions to follow <em>what</em> is to be done rather than <em>how</em> it will be done. You can easily design declarative programs thanks to the mathematical, logical roots of the paradigm.</p>

<p>Functional programming is more modular than other approaches. Splitting your program into smaller functions allows you to reuse them across your program. Larger problems can be solved by combining these smaller modular functions. This allows you to reuse any part of your solution individually.</p>

<p>Finally, functional programming functions do not have side effects. This means that data is never changed in functional programming. </p>

<p>For example, say I wanted to make a program that starts with <code>n</code>, then passes <code>n</code> to <code>function1</code>, and finally passes the result of <code>function1</code> into <code>function2</code>. Let’s see how this differs in pseudo-code:</p>

<p><strong>Block Approach</strong><br />
</p>

<div class="highlight"><pre class="highlight plaintext"><code>int n = 5;
n = function1(n);
n = function2(n);
return n; 
</code></pre></div>



<p><strong>Functional Approach</strong><br />
</p>

<div class="highlight"><pre class="highlight plaintext"><code>int n = 5;
return function2(function1(n));
</code></pre></div>



<p>In the functional approach, there are no side effects to our function as <code>n</code>’s value is used but never changed. By passing <code>function1(n)</code> directly into <code>function2</code> rather than an augmented <code>n</code>, we have solved the problem declaratively. </p>



<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-functional-mindset-not-language">
  </a>
  Expert tip: Functional mindset, not language
</h3>

<p>There are functional programming languages that enforce this paradigm, such as Clojure, <a href="https://www.educative.io/blog/scala-101-a-beginners-guide">Scala</a>, or Haskell. While these have great capabilities, they can be a difficult transition if you’re unused to functional programming.</p>

<p>To start out, try programming in your current language using a functional mindset. Here are a few ways to do that:</p>

<ul>
<li>Use <code>map</code>, <code>reduce</code> and similar operations over counters and loops to shift your thinking away from block programming</li>
<li>Use local scope variables and functions to practice cutting downside effects. Try to notice and reduce the side effects each time you code.</li>
<li>Prioritize recursive solutions as recursive solutions require functional thinking to create. This will give effective practice before moving to fully functional.</li>
</ul>



<p><a></a></p>




<p><a class="article-body-image-wrapper" href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDvpxl01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxewm8m4c9jb17uoxi4v.PNG"><img alt="Alt Text" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDvpxl01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxewm8m4c9jb17uoxi4v.PNG" /></a></p>




<h2>
  <a class="anchor" href="https://dev.to/feed#5-reflect">
  </a>
  5. Reflect
</h2>

<p>Regression testing is the act of confirming that developed software still functions after an update. This is an important part of a developer’s life, as updates are so common. Unfortunately, the process can be highly tedious when we have to cover all possible error conditions.</p>

<p>Reflect solves this problem by creating automated regression tests for any website. This software doesn’t require any installation and can be used with any JavaScript framework.</p>

<p><strong>Here's how it works:</strong></p>

<ol>
<li>Enter the “record a test” mode</li>
<li>Load up your site’s current, working page</li>
<li>Click through the functionality that you wish to be tested</li>
<li>Stop recording the test; this will generate a test script to replicate your clicks</li>
<li>Enter the URL of your site’s test version</li>
<li>Activate the test script</li>
<li>View recorded site results.</li>
</ol>

<p>The results of the test will be a video of what happened as well as prints of network requests and the JavaScript console. Getting all this info at once allows you to diagnose the problem quickly and at its source.</p>

<p>You can create the test case once and repeat it an unlimited number of times across a site's lifetime. Not only will this save you countless hours of manual testing, but it also automatically generates video recordings of each test to document the exact error case. </p>

<p>In short, Reflect is becoming popular with developers because of its simplicity, repeatability, and accuracy.</p>



<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-reflects-advanced-functions">
  </a>
  Expert tip: Reflect’s advanced functions
</h3>

<p>What we covered above is just the tip of the iceberg for what Reflect can do. Here’s a list of some other helpful functions you can use with Reflect:</p>

<ul>
<li>Schedule tests to be completed at any interval to ensure your site is functioning properly even when you’re not around.</li>
<li>Combine scheduled tests with failure notifications to decrease response time to site outages</li>
<li>If you need to change a test, you can edit and re-record individual clicks or multiple sections within a Reflect test rather than re-recording the entire process</li>
<li>Use the automated visual detection tool when changing site appearance to detect malfunctioning elements too different than the input expected case</li>
</ul>



<p><a></a></p>

<h2>
  <a class="anchor" href="https://dev.to/feed#6-regex">
  </a>
  6. Regex
</h2>

<p>Regular expressions, or regex, are a set of characters that describe the behavior of a search pattern. They’re often used for string-search algorithms to find sections matching the pattern.</p>

<p>Bash has a unique regex operator <code>=~</code> which searches for matches of the given regex pattern. For example, <code>if [[ $digit =~ [0-9] ]]; then</code> would search a string for any instance of a digit.</p>

<p>Other than Bash, both Python and Java support regex parameters.</p>

<p>These are great for data validation and other text processing tasks because they can implement very complex search parameters with just a few characters. They’re also recognizable by developers across the world as they’re part of <em>regular language</em> established by computer language theorists.</p>

<p>Overall, they’re quick to pick up, widely understood, and have great complexity potential. Learning regex is a great way to widen your skillset and give you access to a powerful tool on Bash, Java, or Python.</p>



<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-web-scraping-with-regex">
  </a>
  Expert tip: Web scraping with regex
</h3>

<p>One of the most common uses of regex today is web scraping, a process of extracting select information from a mass collection of websites. This is because you can use regex to extract substrings matching the parameters from the greater searched string. </p>

<p>There are many applications of this, for example, you could search a competitors site for their prices on a given product:<br />
</p>

<div class="highlight"><pre class="highlight javascript"><code>    <span class="nx">$</span><span class="p">:</span><span class="err">\</span><span class="nx">s</span><span class="o">+</span><span class="p">([</span><span class="o">^</span><span class="err">\</span><span class="nx">s</span><span class="p">]</span><span class="o">+</span><span class="p">)</span>
</code></pre></div>



<p>This regex searches for anything that comes after a dollar sign and extracts it to a separate file. Once complete, this file would allow your company full access to compare prices across dozens of products.</p>

<p>The above is just one example using only a single expression. Web scraping is a powerful tool for modern companies and will continue to grow in popularity. Learning regex for web scraping can give you a competitive advantage in more analytical development positions.</p>



<p><a></a></p>




<p><a class="article-body-image-wrapper" href="https://res.cloudinary.com/practicaldev/image/fetch/s--5_2vo5tB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2xhqs1jlduxswz56k6k4.png"><img alt="Alt Text" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5_2vo5tB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2xhqs1jlduxswz56k6k4.png" /></a></p>




<h2>
  <a class="anchor" href="https://dev.to/feed#7-regexr">
  </a>
  7. RegExr
</h2>

<p>While regex starts off easy, they can quickly get very complicated. Look no further than this regex to match specific types of URL.<br />
</p>

<div class="highlight"><pre class="highlight plaintext"><code>^(http|https|ftp):[\/]{2}([a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,4})(:[0-9]+)?\/?([a-zA-Z0-9\-\._\?\,\'\/\\\+&amp;amp;%\$#\=~]*)
</code></pre></div>



<p>You can clearly see just how complicated they can get.</p>

<p>RegExr is a free regex visualization and testing tool that aims to make it easier to understand complex regex functions. As regex is standardized, RegExr simply parses all sections of the regex and translates their meaning into an explanatory sentence form. You can also hover over these explanations to see highlights of exactly where in the expression it was found. </p>

<p>Below, I input the complex example used above and used the explain function. See how the explanation is color-coded with the given section highlighted:</p>

<p><a class="article-body-image-wrapper" href="https://res.cloudinary.com/practicaldev/image/fetch/s--SDP0mLFs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uo2izl0tzgznmfkc5zal.PNG"><img alt="Alt Text" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SDP0mLFs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uo2izl0tzgznmfkc5zal.PNG" /></a></p>

<p>RegExr saves you time of working with longer regular expressions. It also removes the need for library memorization. On the site’s side, you can find a full bank of regex formula and their uses. Simply clicking them inserts these formulas into your expression.</p>

<p>Finally, RegExr can be used to test your expressions by filling the “test” area with example text. RegExr will apply the drafted regex to search the example text to highlight any matches. You can hover over these matches to get more information on them, like what section of the expression caused this to be picked up.</p>



<h3>
  <a class="anchor" href="https://dev.to/feed#expert-tip-avoid-long-regex">
  </a>
  Expert tip: Avoid long regex
</h3>

<p>While RegExr can help to explain long regexes, they’ll always be harder to understand than shorter expressions. Prioritizing shorter expressions will allow you and your team a better shot at understanding the expression at a glance. Further, getting a single expression to complete all search parameters is a time-consuming process that becomes more prone to error.</p>

<p>Try applying multiple smaller expressions that each search for one or two things. This not only fixes the problems stated above but allows you to reuse some or all of the expressions in later projects.</p>



<p><a></a></p>

<h2>
  <a class="anchor" href="https://dev.to/feed#wrapping-up-and-more-resources">
  </a>
  Wrapping up and more resources
</h2>

<p>With that, we’ve completed our look at 7 tools and software to help you be a more efficient programmer. From Vim, to Reflect, to RegExr, we explored some of the most used and beloved tools suggested by developers, for developers.</p>

<p>While some of these tools have a learning curve, I assure you that you’ll ultimately save hours of time and thousands of keystrokes by mastering them.</p>

<p><strong>Do you have any other pro tips or tools that have helped you? Leave a comment below!</strong></p>



<h3>
  <a class="anchor" href="https://dev.to/feed#continue-reading-about-productivity">
  </a>
  Continue reading about productivity
</h3>

<ul>
<li><a href="https://www.educative.io/blog/10-tips-for-managing-time-estimations-on-coding-projects">10 tips for managing time estimations on coding projects</a></li>
<li><a href="https://www.educative.io/blog/work-from-home-devices-for-developers">COVID-19 Work from Home Series</a></li>
<li><a href="https://www.educative.io/blog/javascript-tips-simplify-code">15 JavaScript Tips: best practices to simplify your code
</a></li>
</ul>              </p>
              <p class="meta"><a href="https://dev.to/educative/7-coding-tools-that-will-maximize-your-effectiveness-5g47">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://purelyfunctional.tv" title="PurelyFunctional.tv">PurelyFunctional.tv Clojure articles</a></h2>
              <p>
August 17, 2020 10:00 AM                <br />
                <a href="https://purelyfunctional.tv">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-391-the-immediacy-interval/">PurelyFunctional.tv Newsletter 391: the immediacy interval</a></h2>
              <p>
<div class=" reset">
<p><em>Issue 391 – August 17, 2020 · <a href="https://purelyfunctional.tv/newsletter-archives/">Archives</a> · <a href="https://purelyfunctional.tv/newsletter/" title="Thanks, Jeff!">Subscribe</a></em></p>
<h2>Clojure Tip 💡</h2>
<p><em>the immediacy interval</em></p>
<p>How fast is instantaneous? How alive is your live coding? How far are you from seeing the effect of a change in code? If it is easy and fast to run our code, we will run it more. This leads to faster, more stable progress toward working code.</p>
<p>When I’m doing REPL-driven development well, things feel instantaneous. I make a change to a function, I hit a few keystrokes, and I see the effect of the change. Yes, it feels nice that things are fast. And speed in development is good. But that’s just the first-order effect. The magic of it comes in the second-order effects.</p>
<p>The magic is that, now that it’s faster, I can do it more times. I can do it more frequently. I can know sooner and with more confidence whether I’m on the right track. I can relax more easily, knowing that the code is behaving as expected. I make fewer mistakes and spend less time figuring out where a mistake is.</p>
<p>I’ve programmed in some systems that were very fast to see the changes. But somehow, they weren’t fast enough to encourage me to do it more. For example, I can remember times where I wanted to try just one more thing. But I didn’t try it because I anticipated too much time and pain to do it. We want to be so fast that we will surely try just one more thing.</p>
<p>REPL-driven development is work to get right. It’s work from the language and it’s work from you, the programmer. Clojure does a huge amount of lifting to get RDD working. The rest is up to you. But even in Clojure, it’s not automatic.</p>
<p>In my <a href="https://purelyfunctional.tv/courses/repl-driven-development-in-clojure/" title="">REPL-driven development course</a>, I break down the development process into a series of steps. Then we systematically address each one to make it fast and easy. You can see the map of the development process <a href="https://purelyfunctional.tv/lesson/a-map-of-the-repl-driven-development-territory/" title="">here</a>. I’ve made that lesson temporarily free to everyone. Here is the breakdown:</p>
<ol>
<li>Write/modify code</li>
<li>Compile</li>
<li>Test</li>
<li>Check if it works; if yes, work on the next thing; if no, analyze and go back to Step 1</li>
</ol>
<p>Much of the course is structured around this breakdown. There are lessons showing how to write and modify code faster and easier (Step 1). There are lessons about how to test code quickly (Step 3). There are lessons about printing values to check them more easily (Step 4). And there is a lesson teaching the 3 commands you need for compiling code (Step 2). I’d like to talk about those next week.</p>
<h2>Quarantine update 😷</h2>
<p>I know a lot of people are going through tougher times than I am. If you, for any reason, can’t afford my courses, and you think the courses will help you, please hit reply and I will set you up. It’s a small gesture I can make, but it might help.</p>
<p>I don’t want to shame you or anybody that we should be using this time to work on our skills. The number one priority is your health and safety. I know I haven’t been able to work very much, let alone learn some new skill. But if learning Clojure is important to you, and you can’t afford it, just hit reply and I’ll set you up. Keeping busy can keep us sane.</p>
<p>Also, if you just want to subscribe for a paid membership, I have opened them back up for the moment. Register <a href="https://purelyfunctional.tv/register/" title="">here</a>.</p>
<p>Stay healthy. Wash your hands. Stay at home. Wear a mask. Take care of loved ones.</p>
<h2>Clojure Challenge 🤔</h2>
<h3>Last week’s challenge</h3>
<p>The challenge in <a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-390-the-elements-of-flow-in-a-repl-environment/" title="">Issue 390</a> was to create expressions to express the prime factorization of a number. You can find the submissions <a href="https://gist.github.com/ericnormand/e7cedc7c528505af54072cb39ca77fb9" title="">here</a>.</p>
<p>Please do participate in the discussion on the <a href="https://gist.github.com/ericnormand/e7cedc7c528505af54072cb39ca77fb9" title="">gist where the submissions are hosted</a>. It’s active and it’s a great way to get comments on your code.</p>
<h3>This week’s challenge</h3>
<p><strong>Powers in range</strong></p>
<p>Let’s say you have an inclusive range of integers <code>[a, b]</code>. You also have an exponent <code>n</code>. What numbers <code>k^n</code> (integer <code>k</code> raised to the <code>n</code>th power) occur in that range? Write a function that takes <code>a</code>, <code>b</code>, and <code>n</code> and returns the numbers <code>k^n</code>.</p>
<p>Examples</p>
<pre><code>;; n = 2, [a, b] = [49, 65]
(powers-in-range 2 49 65) ;=&gt; [49 64] ;; that is, 7^2 and 8^2
;; n = 3, [a, b] = [1, 27]
(powers-in-range 3 1 27) ;=&gt; [1 8 27] ;; 1^3, 2^3, and 3^3
;; n = 10, [a, b] = [1, 5]
(powers-in-range 10 1 5) ;=&gt; [1] ;; 1^10
</code></pre>
<p>Thanks to <a href="https://edabit.com/challenge/abdsaD6gwjgAgevsG" title="">this site</a> for the challenge idea where it is considered Hard level in Python.</p>
<p>You can also find these same instructions <a href="https://gist.github.com/ericnormand/1524630ea3d4cadb84c588a19fccea89" title="">here</a>. I might update them to correct errors and clarify the descriptions. That’s also where submissions will be posted. And there’s a great discussion!</p>
<p>As usual, please reply to this email and let me know what you tried. I’ll collect them up and share them in the next issue. If you don’t want me to share your submission, let me know.</p>
<p>Rock on!<br />Eric Normand</p>
</div>
<p>The post <a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-391-the-immediacy-interval/" rel="nofollow">PurelyFunctional.tv Newsletter 391: the immediacy interval</a> appeared first on <a href="https://purelyfunctional.tv" rel="nofollow">PurelyFunctional.tv</a>.</p>              </p>
              <p class="meta"><a href="https://purelyfunctional.tv/issues/purelyfunctional-tv-newsletter-391-the-immediacy-interval/">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://functional.works-hub.com/learn/" title="Functional Works">Functional Works</a></h2>
              <p>
August 16, 2020 06:31 PM                <br />
                <a href="https://functional.works-hub.com/learn/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://functional.works-hub.com/learn/the-essence-of-data-oriented-programming-31fe6?utm_source=rss&amp;utm_medium=automation&amp;utm_content=31fe6">The essence of Data Oriented Programming</a></h2>
              <p>
<p>After many years of suffering in C++ and Java, many years of enlightenment in Clojure, I have realised that what brings joy to me when I code in Clojure is the fact that Clojure is a Data Oriented programming language.Over the last  couple of months, I have discussed with some Clojure friends about the essence of Data Oriented (DO) Programming.Of course, one  cannot really grasp the essence of DO. DO is as profound as the TAO from Tao Te Ching, whose first sentence is: Tao  that can be spoken of is not the Tao We cannot grasp its essence but we can get closer to an understanding of DO by comparing it with a quite different programming paradigm, namely: Object Oriented (OO) Program...</p><p>Tags: Java, Javascript, Clojure, Scala</p><a href="https://functional.works-hub.com/learn/the-essence-of-data-oriented-programming-31fe6?utm_source=rss&amp;utm_medium=automation&amp;utm_content=31fe6">Continue reading</a>              </p>
              <p class="meta"><a href="https://functional.works-hub.com/learn/the-essence-of-data-oriented-programming-31fe6?utm_source=rss&amp;utm_medium=automation&amp;utm_content=31fe6">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="http://reactiveclojure.blogspot.com/" title="Clojure Reactive Programming">Clojure Reactive Programming</a></h2>
              <p>
August 15, 2020 01:47 PM                <br />
                <a href="http://reactiveclojure.blogspot.com/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="http://reactiveclojure.blogspot.com/2020/08/microservices-in-clojure.html">Microservices in Clojure</a></h2>
              <p>
<h2 style="height: 0px; text-align: left;">Microservices in Clojure</h2><div><br /></div><div>I was falling again in the trap. Java with Spring Boot has a very unique appeal... With configuration you can easily solve problems that requires actual code.</div><div><ul style="text-align: left;"><li>Service Registration</li><li>OpenApi</li><li>Service Discovery</li><li>Persistence </li></ul><div>All these critical things for a micro-service are just some annotations away if you use Spring. But I have to admit that, because I always start thinking that I don't want to risk too much, I always fall back in creating an hybrid Java -Spring/Clojure service, and then I never created a full micro-service in Clojure.</div></div><div><br /></div><div>This time is different. I will study <a href="https://amzn.to/3asnnMp" target="_blank">Microservices with Clojure</a>. (That I will review as soon as I can, normally I find that these books are not so useful, I hope this time will be different. But I will write about it later.</div><div><br /></div><div>I will follow the book and after I will have completed I will use the same approach for  Hierarchy Property Service using the things I will build during the book study.</div><div><br /></div><div>Because I see that there are a lot of people interested in the Topic, I will post as many information as I can as soon as I proceed in my journey to a working Clojure Microservice.</div><div>I will provide to you a full recap of the main points explained in the book with my impressions.</div><div><br /></div><div>Have a good Mid-August everyone :), here in Italy is like your birthday or Christmas :D</div><div><br /></div>              </p>
              <p class="meta"><a href="http://reactiveclojure.blogspot.com/2020/08/microservices-in-clojure.html">Permalink</a></p>
            </article>
          </section>
          <section class="entry">
            <aside class="aside">
              <!-- <img src="static/i/favicon.gif" alt="Name of the Site" /> -->
              <h2><a href="https://tobyloxy.com/tags/clojure/" title="clojure | Tobias Locsei">Tobias Locsei</a></h2>
              <p>
August 15, 2020 10:55 AM                <br />
                <a href="https://tobyloxy.com/tags/clojure/">Feed URL</a>
              </p>
            </aside>
            <article class="article">
              <h2><a href="https://tobyloxy.com/post/deploy-clojure-web-app/">How to Deploy Your Clojure Web App Painlessly</a></h2>
              <p>
<p>I’m assuming you’ve written a Clojure web app and you want to get it into production with a minimum of pain, expense and “incidental complexity”. You don’t want DevOps to suck up your time. You’d rather spend your time coding or lying in a hammock thinking about your next Clojure project.</p>
<p>This post is NOT for you if you’re a command line purist or someone who wants fine level control over every detail of your server.</p>
<br />
<h2 id="clojure-web-app-hosting">Clojure web app hosting</h2>
<p>We’re going to use a PaaS called
<a href="https://jelastic.com/paas-cloud-hosting/" rel="noopener" target="_blank">Jelastic</a>, which stands for “Java Elastic Cloud”.</p>
<p>Here’s what I like about Jelastic:</p>
<ul>
<li>All the DevOps are taken care of for you. You just make your Uberjar and upload it.</li>
<li>It’s free for apps with small RAM &amp; CPU usage. You can spin up new servers for hobby projects without worrying about the expense.</li>
<li>Automatic vertical scaling (RAM &amp; CPU) and horizontal scaling (multiple servers) means that if your app gets traction it will be able to cope with the load.</li>
<li>You pay only for what you use. If your app is mostly idle 95% of the time and has a huge load for 5% of the time, you only pay for the 5% of the time that you’re using RAM/CPU/bandwidth.</li>
<li>It’s been around since 2011, so it’s hopefully going to be around for a while longer.</li>
</ul>
<p>Also, it comes with the
<a href="https://www.youtube.com/watch?v=GEwnMuIlwN8" rel="noopener" target="_blank">blessing of James Gosling</a> (the father of Java), which seems like a pretty strong endorsement. He’s actually on the
<a href="https://jelastic.com/blog/java-rock-stars-james-gosling-and-bruno-souza-join-the-jelastic-team/" rel="noopener" target="_blank">advisory team</a>.</p>
<p>Jelastic is not tied to any one hosting provider. It’s a sort of virtualisation layer that lots of different hosting providers use. So, really you’re using Jelastic + Hosting Provider.</p>
<p>I personally use
<a href="https://mirhosting.com/en/cloud" rel="noopener" target="_blank">MIRhosting</a>, because they have a generous free level in their plan, but you can choose from
<a href="https://jelastic.cloud/" rel="noopener" target="_blank">dozens of different Jelastic hosting providers</a>. They all have slightly different pricing.</p>
<br />
<h2 id="step-by-step-should-take-15-min">Step by step (should take 15 min)</h2>
<h3 id="create-an-account">Create an account</h3>
<p>Sign up for the 2 weeks free trial at
<a href="https://mirhosting.com/en/cloud" rel="noopener" target="_blank">MIRhosting</a> (they offer Jelastic PaaS). You don’t need to enter any payment details to try it out.</p>
<p>Confirm your email address and sign into the MIRcloud dashboard.</p>
<h3 id="create-a-java-environment">Create a Java environment</h3>
<p>Click the “NEW ENVIRONMENT” button near the top-left of the dashboard.</p>
<p>Choose Java.
<img alt="Choose java" src="https://tobyloxy.com/tags/clojure/image1.png" />
<br /></p>
<p>Click the SSL icon and enable SSL
<img alt="Enable SSL" src="https://tobyloxy.com/tags/clojure/image2.png" />
<br /></p>
<p>Click the Application Server button, which presently shows a picture of a cat (for Tomcat). From the dropdown menu choose “Java Engine”
<img alt="Choose Java Engine" src="https://tobyloxy.com/tags/clojure/image3.png" />
<br /></p>
<p>Click the dropdown menu next to “Oracle OpenJDK” and choose Eclipse OpenJ9 | 0.20.0-11.07, assuming you want to use Java 11. If you want to use Java 8 then choose Eclipse OpenJ9 | 0.20.0-8u252-b09. I recommend using OpenJ9 because it uses
<a href="https://www.royvanrijn.com/blog/2018/05/openj9-jvm-shootout/" rel="noopener" target="_blank">less RAM than other JDK implementations</a>, which means your hosting bill will be cheaper (or free).
<img alt="Choose OpenJ9" src="https://tobyloxy.com/tags/clojure/image4.png" />
<br /></p>
<p>Set the number of reserved cloudlets to 0, and the scaling limit to 5 cloudlets. You can change these later if you want. Even if you set the scaling limit high, you’ll only pay for what you actually use. The first two cloudlets are free, and an app with low load will probably stay below two cloudlets, so hosting hobby apps is free in practice.
<img alt="Set cloudlet limits" src="https://tobyloxy.com/tags/clojure/image5.png" />
<br /></p>
<p>Click “{…} Variables”. This is where we’ll set environment variables.
<img alt="Click variables" src="https://tobyloxy.com/tags/clojure/image6.png" />
<br /></p>
<p>Add any environment variables that your web app needs. If you’re running a Luminus web app you’ll need to set the PORT environment variable to 8080. That will
<a href="https://luminusweb.com/docs/deployment.html" rel="noopener" target="_blank">make the Luminus app listen on port 8080</a>, which is the port that Jelastic will send web requests too. Otherwise a Luminus app would by default listen on port 3000.</p>
<p>If you want to enable
<a href="https://luminusweb.com/docs/deployment.html" rel="noopener" target="_blank">nREPL support for a Luminus web app</a> then also set the NREPL_PORT variable to 7001.
<img alt="Set environment variables" src="https://tobyloxy.com/tags/clojure/image7.png" />
<br /></p>
<p>Choose the datacenter location for your app. It makes sense to choose one close to where your users are.
<img alt="Choose data center" src="https://tobyloxy.com/tags/clojure/image8.png" />
<br /></p>
<p>Enter a name for your environment, then click “Create”. It will take 2 minutes or so for the environment to be created.
<img alt="Name the environment" src="https://tobyloxy.com/tags/clojure/image9.png" />
<br /></p>
<h3 id="upload-your-app">Upload your app</h3>
<p>Create an uberjar of your web app. If you’re using the Luminus template then do this by running <code>lein uberjar</code>.</p>
<p>Click the “deploy archive” icon in the environment you created.
<img alt="Deploy archive" src="https://tobyloxy.com/tags/clojure/image10.png" />
<br /></p>
<p>Choose “Local File”, select the uberjar for your web app, and click Deploy.
<img alt="Upload uberjar" src="https://tobyloxy.com/tags/clojure/image11.png" />
<br /></p>
<p>Once your app has deployed, click the “open in browser” icon to view it live.
<img alt="Open in browser" src="https://tobyloxy.com/tags/clojure/image12.png" />
<img alt="Live app" src="https://tobyloxy.com/tags/clojure/image13.png" /></p>
<h3 id="checking-resource-usage">Checking resource usage</h3>
<p>You can see at a glance how many “cloudlets” your app is using from the icon next to the environment. The first two cloudlets are free.
<img alt="Cloudlet usage" src="https://tobyloxy.com/tags/clojure/image14.png" />
<br /></p>
<p>Click the “statistics” icon to view detailed graphs of RAM, CPU, disk space etc usage.
<img alt="Statistics icon" src="https://tobyloxy.com/tags/clojure/image15.png" />
<br /></p>
<p>For low load the RAM usage typically stays at 150-200 MB, which is below the 256 MB 2-cloudlet free limit, meaning that hosting the app is free.
<img alt="RAM usage" src="https://tobyloxy.com/tags/clojure/image16.png" /></p>
<h3 id="changing-the-server-configuration">Changing the server configuration</h3>
<p>If you want to change the resource usage limits, environment variables, Java version, or any other details of the configuration, click the “change environment topology” icon next to your environment, and you can change anything you like and re-deploy your app.</p>
<p><img alt="Change topology" src="https://tobyloxy.com/tags/clojure/image17.png" /></p>
<h3 id="automating-future-deploys">Automating future deploys</h3>
<p>If you deploy frequently you’ll want a way to automate deploys rather than using the Jelastic GUI. Luckily
<a href="https://docs.jelastic.com/cli/" rel="noopener" target="_blank">Jelastic has a CLI</a> and also you have
<a href="https://docs.jelastic.com/ssh-access/" rel="noopener" target="_blank">ssh access to your Jelastic environment</a>. Here’s a very basic shell-script to automate deployment of a web app, intended to be run from the root directory of a Luminus app. You’ll need to change the script’s variables to suit your app.</p>
<pre><code>#!/bin/bash
# Change to the directory from which the script is being run
cd "$(dirname "$BASH_SOURCE")" || {
echo "Error getting script directory" &gt;&amp;2
exit 1
}
JAR_NAME=my-luminus-app.jar
ENV_NAME=my-app
USER_AND_HOST=11111-2222@gate.mircloud.host
NODE_ID=11111
lein uberjar &amp;&amp;\
scp -P 3022 target/uberjar/${JAR_NAME} ${USER_AND_HOST}:/home/jelastic/APP &amp;&amp;\
~/jelastic/environment/control/restartnodebyid --envname $ENV_NAME --nodeid $NODE_ID
</code></pre>
<h3 id="connecting-to-a-repl-on-your-live-app">Connecting to a REPL on your live app</h3>
<p>To connect to a REPL running on your app you’ll need to ssh tunnel (aka ssh port forwarding) into the server. Unfortunately, that’s disabled by default in Jelastic. To work around this, you can use an alternative method of port forwarding. See my other post
<a href="https://tobyloxy.com/post/ssh-tunnel-bypass-allowtcpforwarding/" rel="noopener" target="_blank">How to Set Up SSH Port Forwarding (Tunneling) When AllowTcpForwarding is Disabled</a>.</p>
<br />
<h2 id="but-doesnt-it-get-really-expensive-like-heroku">But doesn’t it get really expensive, like Heroku?</h2>
<p>“I wonder if it could get as expensive as, say, heroku, real quick?” asked someone on
<a href="https://www.reddit.com/r/Clojure/comments/ia63t0/blog_post_how_to_deploy_your_clojure_web_app/" rel="noopener" target="_blank">r/Clojure</a>. Good question!</p>
<p>The
<a href="https://jelastic.com/pay-per-use/#cloud-pricing-calculator" rel="noopener" target="_blank">Jelastic pricing calculator</a> is a little confusing, so to help make things clearer here’s an example of an environment that scales up to <strong>1GB RAM and 3.2 GHz CPU</strong>. The price is capped at <strong>$12.50 / mo</strong>, and it’s obviously cheaper (or even free) if your app’s resource usage is lower than the limits you set.</p>
<p><img alt="Jelastic pricing calculator" src="https://tobyloxy.com/tags/clojure/pricing-jelastic.png" />
<br /></p>
<p>The equivalent on
<a href="https://www.heroku.com/pricing" rel="noopener" target="_blank">Heroku</a> would cost <strong>$50 / mo</strong> regardless of resource usage, I think.
<img alt="Heroku price" src="https://tobyloxy.com/tags/clojure/pricing-heroku.png" />
<br /></p>
<p>On Digital Ocean for equivalent RAM you’d pay <strong>$5 / mo</strong> regardless of resource usage:
<img alt="Digital ocean pricing" src="https://tobyloxy.com/tags/clojure/pricing-digital-ocean.png" />
<br /></p>
<p>In terms of Jelastic vs Digital Ocean pricing, it depends on whether your resource usage is intermittent or continuous, and how close you are to full resource utilisation.</p>
<p>Once you include a bit of a “safety factor” in your server resources, Jelastic &amp; Digital Ocean probably come out about he same price. For instance, if you were consistently using 900 MB of RAM, you’d want the next size up of Digital Ocean droplet (2 GB RAM) to cope with any fluctuations, and that would take the Digital Ocean price to $10 / mo.</p>
<br />
<h2 id="alternative-approaches">Alternative approaches</h2>
<p>I hope you found my Clojure web app deployment guide helpful. I hope it saved you some time helped you avoid some headaches. If you’re looking for other approaches to deploying Clojure apps, then check out</p>
<ul>
<li>
<a href="https://luminusweb.com/docs/deployment.html" rel="noopener" target="_blank">Luminus web framework deployment docs</a></li>
<li>
<a href="https://yogthos.net/posts/2019-01-19-LuminusOnDokku.html" rel="noopener" target="_blank">Running Luminus On Dokku</a></li>
<li>
<a href="https://purelyfunctional.tv/article/jvm-deployment-options/" rel="noopener" target="_blank">Eric Normand’s article on JVM Deployment Options (PurelyFunctional.tv)</a></li>
<li>
<a href="https://www.braveclojure.com/quests/deploy/" rel="noopener" target="_blank">Deploying Your First Clojure App… From the Shadows (Braveclojure.com)</a></li>
</ul>              </p>
              <p class="meta"><a href="https://tobyloxy.com/post/deploy-clojure-web-app/">Permalink</a></p>
            </article>
          </section>
          
          <footer id="footer">
            <p>
              Copyright &copy; 2009, Planet Clojure. No rights reserved.
              <br />
              Planet Clojure is maintained by <a href="http://freegeek.in/">Baishamapayan Ghose</a>.
              <br />
              Clojure and the Clojure logo are Copyright &copy; 2008-2009, Rich Hickey.
              <br />
              Theme by <a href="http://brajeshwar.com/">Brajeshwar</a>.
            </p>
          </footer>

        </div>
      </div>

      <div id="sidebar">
        <div id="sidebar-content">
          <section id="search">
	    <form action="http://www.google.com/cse" id="cse-search-box"> 
              <input type="hidden" name="cx" value="013940287744875509343:60ybe0lrjm4" /> 
              <input type="hidden" name="ie" value="UTF-8" /> 
              <input type="text" name="q" class="input-txt" /> 
              <input type="submit" name="sa" value="Search" /> 
            </form> 
          </section>

          <section id="about" class="sidebar-list">
            <h3>About</h3>
            <p>Planet Clojure is a meta blog that collects posts from the blogs of various <a href="http://clojure.org/">Clojure</a> hackers and contributors.</p>
            <p>It is edited by <a href="http://freegeek.in/">Baishampayan Ghose</a> and <a href="http://alexott.net/en/index.html">Alex Ott</a>. Please <a href="http://github.com/ghoseb/planet.clojure">send them a patch</a> if you want your blog to be syndicated here.</p>
          </section>
          
          <section class="sidebar-list">
            <h3>Subscriptions</h3>
            <ul>
                <li>
                  <a href="https://oli.me.uk/" title="Oliver Caldwell's blog">"(ollie {:on :parens})"</a>
                </li>
                <li>
                  <a href="https://corfield.org/" title="Category: Clojure | An Architect's View">"An Architect's View"</a>
                </li>
                <li>
                  <a href="https://cbds.netlify.app/tags/clojure/" title="Clojure on Carsten's blog">"Carsten's data science blog"</a>
                </li>
                <li>
                  <a href="http://clojurelx.blogspot.com/" title="Clojure &amp; lx">"Clojure & lx"</a>
                </li>
                <li>
                  <a href="http://dhruvp.github.io/" title="Dhruv's Blog">"Dhruv's Blog"</a>
                </li>
                <li>
                  <a href="http://digitheadslabnotebook.blogspot.com/search/label/clojure" title="Digithead's Lab Notebook">"Digithead's Lab Notebook"</a>
                </li>
                <li>
                  <a href="http://fdatamining.blogspot.com/search/label/clojure" title="F# and Data Mining">"F# and Data Mining"</a>
                </li>
                <li>
                  <a href="http://gigasquid.github.io//github/" title="Hitchhiker's Guide to Clojure">"Hitchhiker's Guide to Clojure"</a>
                </li>
                <li>
                  <a title="Jack Rusher's Internet Homestead">"Jack Rusher's Journal"</a>
                </li>
                <li>
                  <a href="https://jacobobryant.com" title="Clojure articles from Jacob O'Bryant">"Jacob O'Bryant"</a>
                </li>
                <li>
                  <a href="https://hypirion.com" title="Polymatheia">"Jean Niklas L'orange"</a>
                </li>
                <li>
                  <a href="https://metaljoe.wordpress.com" title="Clojure – John's Reflections">"John's Coding Reflections"</a>
                </li>
                <li>
                  <a href="https://www.oreilly.com/radar" title="Radar">"O'Reilly Radar"</a>
                </li>
                <li>
                  <a class="message" title="internal server error">"O'Reilly blogs"</a>
                </li>
                <li>
                  <a href="http://philcalcado.com/" title="Phil Calçado">"Phil Calçado"</a>
                </li>
                <li>
                  <a href="http://emekamicro.blogspot.com/search/label/Clojure" class="message" title="internal server error">"Programmer[:world]"</a>
                </li>
                <li>
                  <a href="http://thinkrelevance.com/blog/" title="Relevance Blog">"Relevance Inc.'s blog"</a>
                </li>
                <li>
                  <a href="http://blog.remvee.net/" title="remvee blog">"Remco van 't Veer"</a>
                </li>
                <li>
                  <a href="https://medium.swirrl.com?source=rss----26e0e03e444f---4" title="Swirrl's Blog - Medium">"Swirrl's blog"</a>
                </li>
                <li>
                  <a href="http://techblog.zenrobotics.com/search/label/clojure" title="ZenRobotics R&amp;D Blog">"ZenRobotics R&D Blog"</a>
                </li>
                <li>
                  <a href="http://clojure-and-me.blogspot.com/" title="(+ Clojure me)">(+ clojure me)</a>
                </li>
                <li>
                  <a title="(blog)">(paren)</a>
                </li>
                <li>
                  <a class="message" title="404: not found">040 Code. A developers blog</a>
                </li>
                <li>
                  <a href="https://8thlight.com/blog/" title="8th Light Blog">8thlight Inc.</a>
                </li>
                <li>
                  <a href="https://medium.com/@dave.d.dixon?source=rss-8c37337a7ac1------2" title="Stories by Spark Of Reason on Medium">A Spark of Reason (Dave Dixon)</a>
                </li>
                <li>
                  <a href="https://aws.amazon.com/blogs/compute/" title="AWS Compute Blog">AWS Compute Blog</a>
                </li>
                <li>
                  <a href="http://aaroniba.net/feed/" title="Aaron Iba's Blog">Aaron Iba</a>
                </li>
                <li>
                  <a href="https://www.activestate.com" title="ActiveState">ActiveState</a>
                </li>
                <li>
                  <a href="https://medium.com/adstage-engineering?source=rss----b4e2fd62f213---4" title="AdStage Engineering - Medium">AdStage Engineering @ Medium</a>
                </li>
                <li>
                  <a href="http://tech.adstage.io/" title="AdStage Engineering Blog">AdStage Engineering Blog</a>
                </li>
                <li>
                  <a href="https://adambard.com/blog/" class="message" title="internal server error">Adam Bard</a>
                </li>
                <li>
                  <a href="http://adamsolove.com/" title="Document Function Model - Clojure">Adam C.M. Solove</a>
                </li>
                <li>
                  <a href="https://adamclements.github.io/feed.xml" title="AdamClements">Adam Clements</a>
                </li>
                <li>
                  <a href="http://adam.pohorecki.pl/" title="Category: clojure | Adam Pohorecki">Adam Pohorecki</a>
                </li>
                <li>
                  <a href="http://tankthinks.net" title="Tank Thinks">Adam Tankanow</a>
                </li>
                <li>
                  <a href="http://www.adrianmouat.com/bit-bucket" title="Feeding the Bit Bucket">Adrian Mouat</a>
                </li>
                <li>
                  <a href="http://mowat27.blogspot.com/search/label/clojure" title="coding@mowat27">Adrian Mowat</a>
                </li>
                <li>
                  <a href="https://medium.com/@sfyire?source=rss-c9c34e60b464------2" title="Stories by adrian smith on Medium">Adrian Smith</a>
                </li>
                <li>
                  <a href="https://adzerk.com" title="">Adzerk Blog</a>
                </li>
                <li>
                  <a href="https://agiliway.com" title="Agiliway">Agiliway</a>
                </li>
                <li>
                  <a title="">Aidan Finn</a>
                </li>
                <li>
                  <a href="https://medium.com/@akiroz?source=rss-fb8418b3b76c------2" title="Stories by akiroz on Medium">Akiroz</a>
                </li>
                <li>
                  <a href="http://www.thebusby.com/" title="TheBusby">Alan Busby</a>
                </li>
                <li>
                  <a href="https://alanmarazzi.gitlab.io" title="Alan Marazzi">Alan Marazzi</a>
                </li>
                <li>
                  <a href="https://alejandro.run/" title="(run alejandro)">Alejandro Gómez</a>
                </li>
                <li>
                  <a href="http://AlexBaranosky.github.io/" title="Category: clojure | (elegant coding from a more civilized age)">Alex Baranosky</a>
                </li>
                <li>
                  <a href="https://medium.com/@alexdixon?source=rss-3e5cbb19de3c------2" title="Stories by Alex Dixon on Medium">Alex Dixon</a>
                </li>
                <li>
                  <a href="https://alexeberts.com" title="ClojureScript – Alex Eberts">Alex Eberts</a>
                </li>
                <li>
                  <a href="http://aheusingfeld.github.io/" title="goldstift's blog">Alex Heusingfeld</a>
                </li>
                <li>
                  <a title="">Alex Miller</a>
                </li>
                <li>
                  <a href="http://alexott.blogspot.com/search/label/clojure" title="Alex Ott's blog">Alex Ott</a>
                </li>
                <li>
                  <a href="http://www.bytopia.org" title="Bytopia.org">Alex Yakushev</a>
                </li>
                <li>
                  <a href="https://alexanderoloo.com/" title="Alexander Oloo">Alexander Oloo</a>
                </li>
                <li>
                  <a href="https://medium.com/@alwxdev?source=rss-e1056ae9964------2" title="Stories by Alexander Pantyukhov on Medium">Alexander Pantyukhov</a>
                </li>
                <li>
                  <a href="https://solovyov.net/blog.atom" title="solovyov.net">Alexander Solovyov</a>
                </li>
                <li>
                  <a href="http://blog.alex-turok.com/search/label/clojure" title="Courage">Alexander Turok</a>
                </li>
                <li>
                  <a href="https://grison.me/" title="Stuff and Thoughts on IT Stuff">Alexandre Grison</a>
                </li>
                <li>
                  <a href="https://alfredodinapoli.wordpress.com" title="clojure – Web life between Python and lambda calculus">Alfredo Di Napoli</a>
                </li>
                <li>
                  <a href="http://arohner.blogspot.com/search/label/clojure" title="/dev/rohner">Allen Rohner</a>
                </li>
                <li>
                  <a href="http://blagrants.blogspot.com/search/label/Clojure" title="Blag's bag of rants">Alvaro "Blag" Tejada Galindo</a>
                </li>
                <li>
                  <a href="http://videlalvaro.github.com/" title="Alvaro Videla">Alvaro Videla</a>
                </li>
                <li>
                  <a href="https://blog.ambrosebs.com" title="dissoc">Ambrose Bonnaire-Sergeant</a>
                </li>
                <li>
                  <a href="https://s-expressions.com" title="clojure – s-expressions">Amit Rathore</a>
                </li>
                <li>
                  <a href="http://amsclj.nl" title="Amsterdam Clojurians Meetup">Amsterdam Clojurians Meetup</a>
                </li>
                <li>
                  <a href="https://andrearichiardi.com/" title="Programming Clojure, ClojureScript and Node.js.">Andrea Richiardi</a>
                </li>
                <li>
                  <a href="http://andrewberls.com" title="Andrew Berls">Andrew Berls</a>
                </li>
                <li>
                  <a href="https://brehaut.net" title="A Lazy Sequence">Andrew Brehaut</a>
                </li>
                <li>
                  <a href="https://blog.andrewvc.com/" title="Andrew Cholakian’s Blog">Andrew Cholakian</a>
                </li>
                <li>
                  <a href="http://git.slothrop.net" title="Some Clojure Projects">Andrew Cowper</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Andrew Gwozdziewycz</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Andrew Hobden</a>
                </li>
                <li>
                  <a href="https://amontalenti.com" title="Andrew Montalenti">Andrew Montalenti</a>
                </li>
                <li>
                  <a href="http://www.theatticlight.net/" title="Andrews Website Feed">Andrew Stine</a>
                </li>
                <li>
                  <a href="http://blog.mishkovskyi.net/" title="(into blog (filter tech? thoughts))">Andrii Mishkovskyi</a>
                </li>
                <li>
                  <a href="https://grumpyhacker.com/" title="Grumpy Hacker">Andy Chambers</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Anna Pawlicka</a>
                </li>
                <li>
                  <a href="https://www.anthony-galea.com/categories/clojure/" title="clojure on Anthony Galea">Anthony Galea</a>
                </li>
                <li>
                  <a href="http://astashov.github.io/" title="Anton Astashov's blog">Anton Astashov</a>
                </li>
                <li>
                  <a href="https://programmingzen.com" title="Programming Zen">Antonio Cangiano</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Antonio Terreno</a>
                </li>
                <li>
                  <a href="http://github.com/dylang/node-rss" title="anmonteiro">António Nuno Monteiro</a>
                </li>
                <li>
                  <a href="http://appliedscience.studio/articles" title="Applied Science">Applied Science blog</a>
                </li>
                <li>
                  <a href="https://medium.com/appsflyer?source=rss----2736d8c2498d---4" title="AppsFlyer - Medium">AppsFlyer</a>
                </li>
                <li>
                  <a href="http://arachne-framework.org/posts" title="Arachne">Arachne Framework</a>
                </li>
                <li>
                  <a href="https://arcadia-unity.tumblr.com/" title="Arcadia">Arcadia</a>
                </li>
                <li>
                  <a href="http://arcanesentiment.blogspot.com/" title="Arcane Sentiment">Arcane Sentiment</a>
                </li>
                <li>
                  <a href="http://aria42.com" title="">Aria Haghighi</a>
                </li>
                <li>
                  <a href="http://loganis-data-science.blogspot.com/search/label/Clojure" title="Loganis - Data Science - Λογανυς">Arnold Matyasi</a>
                </li>
                <li>
                  <a href="https://endlessparentheses.com/?source=rss" title="Endless Parentheses">Artur Malabarba</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Ashton Kemerling</a>
                </li>
                <li>
                  <a href="https://asimjalis.github.io/" title="Asim Jalis">Asim Jalis</a>
                </li>
                <li>
                  <a href="http://astrecipes.net/" title="AstRecipes">AstRecipes</a>
                </li>
                <li>
                  <a href="https://kaygun.tumblr.com/" title="Atabey Kaygun">Atabey Kaygun</a>
                </li>
                <li>
                  <a href="http://community.ative.dk/blogs/ative/archive/tags/clojure/default.aspx" title="Ative at Work : clojure">Ative at Work</a>
                </li>
                <li>
                  <a href="https://blog.developer.atlassian.com" title="Atlassian Developer Blog">Atlassian Developers Blog</a>
                </li>
                <li>
                  <a href="https://spin.atomicobject.com" title="Atomic Spin">Atomic Spin</a>
                </li>
                <li>
                  <a title="August Lilleaas' blog">August Lilleaas</a>
                </li>
                <li>
                  <a href="https://blog.avisi.nl" title="Avisi Blog">Avisi</a>
                </li>
                <li>
                  <a href="https://bfontaine.net/blog/" title="Baptiste Fontaine’s Blog">Baptiste Fontaine</a>
                </li>
                <li>
                  <a href="https://blog.beanstalkapp.com/" title="Beanstalk">Beanstalk</a>
                </li>
                <li>
                  <a href="https://benatkin.com" title="clojure – Benjamin Atkin">Ben Atkin</a>
                </li>
                <li>
                  <a href="http://pixelmachine.org" title="pixelmachine: clojure desk">Ben Hughes</a>
                </li>
                <li>
                  <a title="">Ben Kamphaus</a>
                </li>
                <li>
                  <a href="https://www.benrady.com/" title="Radyology">Ben Rady</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Ben Sima</a>
                </li>
                <li>
                  <a href="https://bsless.github.io/" title="bsless">Ben Sless</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Bendyworks</a>
                </li>
                <li>
                  <a href="http://benedekfazekas.github.io" title="Of Herbs and Stewed Rabbit">Benedek Fazekas</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=bbrinck&amp;postID=133112722153" class="message" title="http status 503">Benjamin Brinckerhoff</a>
                </li>
                <li>
                  <a href="https://betweentwoparens.com" title="Between Two Parens RSS Feed">Between Two Parens</a>
                </li>
                <li>
                  <a title="">Big Astronaut</a>
                </li>
                <li>
                  <a href="http://1034.node7.isx.dk" title="BIG SAFARI">Big Safari</a>
                </li>
                <li>
                  <a href="https://blog.bigml.com" title="The Official Blog of BigML.com">BigML.com</a>
                </li>
                <li>
                  <a href="https://www.birkey.co/" title="BirkeyCo">Birkey Consulting</a>
                </li>
                <li>
                  <a href="http://blakesmith.me" title="create. code. learn.">Blake Smith</a>
                </li>
                <li>
                  <a href="https://bleu-barbeau.com/" title="Bleu Barbeau - The world in an atom">Bleu Barbeau - The world in an atom</a>
                </li>
                <li>
                  <a href="http://bobnadler.com/" title="Bob Nadler, Jr.">Bob Nadler</a>
                </li>
                <li>
                  <a href="https://medium.com/@puppybits?source=rss-dc239c658997------2" title="Stories by Bobby @ fiskal.app on Medium">Bobby Schultz</a>
                </li>
                <li>
                  <a href="http://blog.bonnieeisenman.com" title="Bonnie Eisenman">Bonnie Eisenman</a>
                </li>
                <li>
                  <a href="https://bcbio.wordpress.com" title="clojure – Blue Collar Bioinformatics">Brad Chapman</a>
                </li>
                <li>
                  <a href="https://www.bradcypert.com" title="Brad Cypert">Brad Cypert</a>
                </li>
                <li>
                  <a href="http://blog.bradlucas.com/" title="Brad Lucas' Blog - Mostly about programming, Clojure and other interests">Brad Lucas</a>
                </li>
                <li>
                  <a href="http://brandonbloom.github.io/" title="You work for me, Computer.">Brandon Bloom</a>
                </li>
                <li>
                  <a href="https://jobs.braveclojure.com" title="Brave Clojure Jobs">Brave Clojure Jobs</a>
                </li>
                <li>
                  <a href="http://threebrothers.org/brendan/" title="Quod erat faciendum">Brendan Ribera</a>
                </li>
                <li>
                  <a href="http://sprungcanary.net/" title="Sprung Canary">Bret Young</a>
                </li>
                <li>
                  <a href="https://befuddled.dev/" title="BEFUDDLED·DEV">Brian Carper</a>
                </li>
                <li>
                  <a href="https://blog.mediocregopher.com/" title="Mediocre Blog">Brian Picciano</a>
                </li>
                <li>
                  <a href="http://www.50ply.com/" title="50Ply Blog">Brian Taylor</a>
                </li>
                <li>
                  <a href="http://bridgetconsulting.com" title="Clojure – Bridget">Bridget Hillyer</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Brittany Martin</a>
                </li>
                <li>
                  <a href="https://otfrom.wordpress.com" title="clojure – Wifi and Coffee">Bruce Durling</a>
                </li>
                <li>
                  <a href="http://rigsomelight.com" title="Bruce Hauman's Blog">Bruce Hauman</a>
                </li>
                <li>
                  <a href="http://blog.brunobonacci.com//" title="Bits and pieces">Bruno Bonacci</a>
                </li>
                <li>
                  <a href="http://brunov.org" title="Bruno Vecchi - Clojure">Bruno Vecchi</a>
                </li>
                <li>
                  <a title="Random.next()">Bryan Gilbert</a>
                </li>
                <li>
                  <a href="https://medium.com/building-nubank?source=rss----472303f1ec06---4" title="Building Nubank - Medium">Building Nubank</a>
                </li>
                <li>
                  <a href="http://www.ccri.com" title="CCRi">CCRi</a>
                </li>
                <li>
                  <a href="http://getctx.io/blog/" title="clojure - ctx search">CTX Blog</a>
                </li>
                <li>
                  <a href="https://camsaul.com/" title="camsaul.com">Cam Saul</a>
                </li>
                <li>
                  <a href="https://cambium.consulting/articles/" title="Articles - Cambium Consulting">Cambium Consulting</a>
                </li>
                <li>
                  <a href="https://camdez.com/tags/clojure/" title="Clojure on camdez">Cameron Desautels</a>
                </li>
                <li>
                  <a href="http://uydurmalar.blogspot.com/" title="losing and finding the donkey">Can Candan</a>
                </li>
                <li>
                  <a href="https://blog.carbonfive.com" title="Blog by Carbon Five">Carbon Five</a>
                </li>
                <li>
                  <a href="http://gigasquid.github.io/" title="Squid's Blog">Carin Meier</a>
                </li>
                <li>
                  <a href="http://localhost:4000" title="CodeHopper -- Software done right">Carlo Sciolla</a>
                </li>
                <li>
                  <a href="https://carmen.la/" title="Carmen La">Carmen La</a>
                </li>
                <li>
                  <a href="https://carouselapps.com" class="message" title="internal server error">Carousel Apps</a>
                </li>
                <li>
                  <a href="http://blog.carsoncheng.ca/search/label/Clojure" title="Propositional Content Encode">Carson Cheng</a>
                </li>
                <li>
                  <a href="http://www.cassiel.com" title="Clojure – cassiel">Cassiel</a>
                </li>
                <li>
                  <a href="http://www.chadbraunduin.com/" title="Chad Braun-Duin">Chad Braun-Duin</a>
                </li>
                <li>
                  <a href="https://chariotsolutions.com" title="Chariot Solutions">Chariot Solutions</a>
                </li>
                <li>
                  <a href="https://cemerick.com" title="Clojure – cemerick">Chas Emerick</a>
                </li>
                <li>
                  <a href="https://cheesecakelabs.com" title="Blog – Cheesecake Labs">Cheesecake Labs</a>
                </li>
                <li>
                  <a href="https://medium.com/@chris_betz?source=rss-c0e896b8c0ea------2" title="Stories by Dr. Christian Betz on Medium">Chris Betz</a>
                </li>
                <li>
                  <a href="https://cb.codes" class="message" title="404: not found">Chris Bui</a>
                </li>
                <li>
                  <a href="https://medium.com/@chrisdaviesgeek?source=rss-1dcad496b8a8------2" title="Stories by Chris Davies on Medium">Chris Davies</a>
                </li>
                <li>
                  <a href="http://literateprogrammer.blogspot.com/" title="the literate programmer">Chris Ford</a>
                </li>
                <li>
                  <a href="http://chris-granger.com/" title="chris-granger.com">Chris Granger</a>
                </li>
                <li>
                  <a href="http://mytediousblog.blogspot.com/search/label/clojure" title="My Tedious Blog">Chris Jenkins</a>
                </li>
                <li>
                  <a href="http://blog.kilosecond.com/" title="Category: clojure | Kilosecond Blog">Chris Shea</a>
                </li>
                <li>
                  <a href="https://medium.com/@chris.shellenbarger?source=rss-92f630fdce98------2" title="Stories by Chris Shellenbarger on Medium">Chris Shellenbarger</a>
                </li>
                <li>
                  <a href="http://minley.org" title="minley.org">Chris Wilson</a>
                </li>
                <li>
                  <a href="https://blog.chriswoodford.ca" title="Hacksonomy">Chris Woodford</a>
                </li>
                <li>
                  <a href="https://blog.cfelde.com" title="ClojureScript – Blog of Christian Felde">Christian Felde</a>
                </li>
                <li>
                  <a href="https://whilo.github.io/" title="(replicate thoughts)">Christian Weilbach</a>
                </li>
                <li>
                  <a href="http://clj-me.cgrand.net" title="Clojure and me">Christophe Grand</a>
                </li>
                <li>
                  <a href="http://kuriqoo.blogspot.com/search/label/clojure" title="Computing for fun">Christophe Verré</a>
                </li>
                <li>
                  <a href="http://christophermaier.name/" class="message" title="404: not found">Christopher Maier</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Christopher Small</a>
                </li>
                <li>
                  <a href="https://circleci.com/blog/" title="The CircleCI Blog Feed - CircleCI">CircleCI</a>
                </li>
                <li>
                  <a href="https://blog.doppioslash.com/" title="clojure - Recursive Thoughts">Claudia Doppioslash</a>
                </li>
                <li>
                  <a href="https://clivetong.wordpress.com" title="Thirty years tapping a keyboard">Clive Tong</a>
                </li>
                <li>
                  <a href="https://clojure-art-group.tumblr.com/" title="Untitled">Clojure Art Group Berlin</a>
                </li>
                <li>
                  <a href="http://clojure-goes-fast.com" title="Clojure Goes Fast">Clojure Goes Fast</a>
                </li>
                <li>
                  <a href="https://lispjobs.wordpress.com" title="clojure – Lispjobs">Clojure Jobs</a>
                </li>
                <li>
                  <a href="http://reactiveclojure.blogspot.com/" title="Clojure Reactive Programming">Clojure Reactive Programming</a>
                </li>
                <li>
                  <a href="https://clojuresync.com" title="Clojure SYNC">Clojure SYNC News</a>
                </li>
                <li>
                  <a href="https://clojurestudydc.wordpress.com" title="Clojure Study Group DC">Clojure Study Group DC</a>
                </li>
                <li>
                  <a href="https://us19.campaign-archive.com/feed?u=f5dea183eae58baf7428a4425&amp;id=ef5512dc35" title="Clojure Weekly Archive Feed">Clojure Weekly</a>
                </li>
                <li>
                  <a href="https://channel9.msdn.com/Tags/clojure" title="Channel 9 - Entries tagged with Clojure">Clojure at Channel9@MSDN</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Clojure at IBM developerWorks</a>
                </li>
                <li>
                  <a href="https://www.infoq.com" title="InfoQ">Clojure at InfoQ</a>
                </li>
                <li>
                  <a href="http://clojuredatascience.com/" title="Clojure for Data Science">Clojure for Data Science</a>
                </li>
                <li>
                  <a href="https://clojure-lab.tumblr.com/" class="message" title="404: not found">Clojure lab</a>
                </li>
                <li>
                  <a href="https://medium.com/clojure-on-the-beam?source=rss----4aa9efa6c524---4" title="Clojure on the BEAM - Medium">Clojure on the BEAM</a>
                </li>
                <li>
                  <a href="https://clojure.org" title="Clojure News">Clojure.org</a>
                </li>
                <li>
                  <a href="http://clojure-gsoc.org//" class="message" title="internal server error">Clojure/GSoC</a>
                </li>
                <li>
                  <a href="http://2017.clojurewest.org" title="Clojure/west">Clojure/West Conference</a>
                </li>
                <li>
                  <a href="http://clojure.com/blog/" title="Clojure/core Blog">Clojure/core</a>
                </li>
                <li>
                  <a href="http://clojureforscience.novonon.com" title="Clojure: For Science!">Clojure: For Science!</a>
                </li>
                <li>
                  <a href="https://clojure.livejournal.com/" title="clojure">Clojure@LJ</a>
                </li>
                <li>
                  <a href="http://clojureclr.blogspot.com/" title="ClojureCLR">ClojureCLR</a>
                </li>
                <li>
                  <a href="https://clojuredocs.wordpress.com" title="Clojure – The ClojureDocs Blog">ClojureDocs</a>
                </li>
                <li>
                  <a href="https://clojurescript.org" title="ClojureScript News">ClojureScript News</a>
                </li>
                <li>
                  <a href="http://clojurescriptmadeeasy.com/" title="Clojurescript Made Easy">Clojurescript Made Easy</a>
                </li>
                <li>
                  <a href="https://www.clojuriststogether.org/" title="Clojurists Together">Clojurists Together</a>
                </li>
                <li>
                  <a href="https://codahale.com//" title="codahale.com">Coda Hale</a>
                </li>
                <li>
                  <a href="http://www.codeadventurer.com/" title="Category: clojure | Code Adventurer">Code Adventurer</a>
                </li>
                <li>
                  <a href="http://blog.codeabout.info/search/label/clojure" title="Codeabout">Codeabout</a>
                </li>
                <li>
                  <a href="https://codurance.com/atom.xml" title="Codurance">Codurance</a>
                </li>
                <li>
                  <a href="https://www.cognitect.com/cognicast/" title="Cognicast">Cognicast</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Cognitect</a>
                </li>
                <li>
                  <a href="https://medium.com/@softwarecf?source=rss-b7e8637b2c32------2" title="Stories by Colin Fallon on Medium">Colin Fallon</a>
                </li>
                <li>
                  <a href="https://www.colinsteele.org/" title="Colin Steele's Blog">Colin Steele</a>
                </li>
                <li>
                  <a href="https://engineering.collbox.co/tags/clojure/" title="Clojure on CollBox Engineering">CollBox Engineering</a>
                </li>
                <li>
                  <a href="https://colourcoding.net" title="Colour Coding">Colour Coding</a>
                </li>
                <li>
                  <a href="http://conan.is/" title="Conan Is Blogging">Conan Is Blogging</a>
                </li>
                <li>
                  <a href="http://ecmendenhall.github.io/blog/" title="Category: Clojure | Connor Mendenhall">Connor Mendenhall</a>
                </li>
                <li>
                  <a href="https://www.contentreich.de" title="CONTENTREICH">Contentreich</a>
                </li>
                <li>
                  <a href="https://juliangamble.com/blog" class="message" title="internal server error">Cool Pacific</a>
                </li>
                <li>
                  <a href="https://corgibytes.com/" title="Corgibytes">Corgibytes</a>
                </li>
                <li>
                  <a href="https://epiccastle.io/blog/" title="Epiccastle Blog">Crispin Wellington</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Csaba Okrona</a>
                </li>
                <li>
                  <a href="https://curiousprogrammer.net" title="Curious (Clojure) Programmer">Curious (Clojure) Programmer</a>
                </li>
                <li>
                  <a href="http://slyrus.github.com/" title="Cyrus Harmon">Cyrus Harmon</a>
                </li>
                <li>
                  <a class="message" title="410: gone">DZone</a>
                </li>
                <li>
                  <a href="http://dailytechvideo.com" title="Clojure – Daily Tech Video">Daily Tech Video (Clojure)</a>
                </li>
                <li>
                  <a href="http://www.dalnefre.com/wp" title="Clojure – It's Actors All The Way Down">Dale Schumacher</a>
                </li>
                <li>
                  <a href="http://damionjunk.com/tags/clojure/" title="Clojure on (:damion @world-state)">Damion Junk</a>
                </li>
                <li>
                  <a href="http://danboykis.com/" title="Dan's Thoughts">Dan Boykis</a>
                </li>
                <li>
                  <a href="https://danielcompton.net" title="Daniel Compton">Daniel Compton</a>
                </li>
                <li>
                  <a href="http://nounsvsverbs.blogspot.com/search/label/clojure" title="Nouns vs. Verbs">Daniel Glauser</a>
                </li>
                <li>
                  <a href="http://www.flyingmachinestudios.com/" title="Flying Machine Studios">Daniel Higginbotham</a>
                </li>
                <li>
                  <a href="https://dpritchett.net/" title="Daniel Pritchett">Daniel J. Pritchett</a>
                </li>
                <li>
                  <a href="http://blog.danieljanus.pl" title="code · words · emotions: Daniel Janus’s blog">Daniel Janus</a>
                </li>
                <li>
                  <a href="https://medium.com/@daniel.oliver.king?source=rss-8dad49c4d059------2" title="Stories by Daniel King on Medium">Daniel King</a>
                </li>
                <li>
                  <a href="https://danlebrero.com" title="Daniel Lebrero Berna Blog">Daniel Lebrero</a>
                </li>
                <li>
                  <a href="https://metaphysicaldeveloper.wordpress.com" title="clojure – Metaphysical Developer">Daniel Ribeiro</a>
                </li>
                <li>
                  <a href="http://spector.io/atom.xml" title="Daniel Spector">Daniel Spector</a>
                </li>
                <li>
                  <a href="http://danielsz.github.io" title="Perfumed Nightmare - Clojure">Daniel Szmulewicz</a>
                </li>
                <li>
                  <a href="https://medium.com/@darioghilardi?source=rss-46f08dda19fe------2" title="Stories by Dario Ghilardi on Medium">Dario Ghilardi</a>
                </li>
                <li>
                  <a href="http://darrenknewton.com" title="Miscellanea">Darren Newton</a>
                </li>
                <li>
                  <a href="https://blog.datomic.com/" class="message" title="403: forbidden">Datomic</a>
                </li>
                <li>
                  <a href="https://blog.datopia.io/" title="Datopia">Datopia</a>
                </li>
                <li>
                  <a href="https://blog.davemartin.me/" class="message" title="duplicate subscription: https://clojure-conundrums.co.uk/index.xml">Dave Martin</a>
                </li>
                <li>
                  <a href="http://www.upgradingdave.com/" title="Upgrading Dave">Dave Paroulek</a>
                </li>
                <li>
                  <a class="message" title="404: not found">David Cabana</a>
                </li>
                <li>
                  <a href="https://clojure-conundrums.co.uk/index.xml" title="Clojure Conundrums">David Martin</a>
                </li>
                <li>
                  <a href="https://david-mcneil.com/" title="(david-mcneil.com :blog)">David McNeil</a>
                </li>
                <li>
                  <a href="https://dvcrn.github.io/" title="David Mohl">David Mohl</a>
                </li>
                <li>
                  <a href="http://swannodette.github.com" title="dosync">David Nolen</a>
                </li>
                <li>
                  <a href="http://www.coconut-palm-software.com/bliki/" title="Data in Motion blog">David Orme</a>
                </li>
                <li>
                  <a href="https://owensd.io" title="owensd.io">David Owens II</a>
                </li>
                <li>
                  <a href="https://blog.goodstuff.im" title="DPP's Blog">David Pollak</a>
                </li>
                <li>
                  <a href="https://medium.com/@davidrupp?source=rss-2b402299ecf6------2" title="Stories by David Rupp on Medium">David Rupp</a>
                </li>
                <li>
                  <a href="http://davidrupp.blogspot.com/search/label/clojure" title="David Rupp's Blog">David Rupp</a>
                </li>
                <li>
                  <a class="message" title="404: not found">David Soria Parra</a>
                </li>
                <li>
                  <a href="http://debasishg.blogspot.com/" title="Ruminations of a Programmer">Debasish Ghosh</a>
                </li>
                <li>
                  <a href="http://www.deepbluelambda.org/" title="Deep Blue Lambda">Deep Blue Lambda</a>
                </li>
                <li>
                  <a href="https://medium.com/degree9/tagged/clojure?source=rss----b6c2485247e4--clojure" title="Clojure in degree9 on Medium">Degree9</a>
                </li>
                <li>
                  <a href="https://www.democracy.works/blog/" title="Blog - Democracy Works">Democracy Works</a>
                </li>
                <li>
                  <a href="https://www.demystifyfp.com/clojure/" title="Clojures on Demystify FP">Demystify FP</a>
                </li>
                <li>
                  <a href="http://www.plusastra.com/search/label/clojure" title="Plus Astra">Denis Fuenzalida on PlusAstra</a>
                </li>
                <li>
                  <a href="http://cataclysmicmutation.com/" title="Cataclysmic Mutation">Deon Garrett</a>
                </li>
                <li>
                  <a href="https://www.deps.co/tags/clojure/" title="Clojure on Deps">Deps</a>
                </li>
                <li>
                  <a class="message" title="http status 503">Dev + Ops at Otto.de</a>
                </li>
                <li>
                  <a href="https://www.devcycle.co.uk/" title="DevCycle">DevCycle</a>
                </li>
                <li>
                  <a href="https://devender.me" title="clojure – Devender's Blog">Devender Gollapally</a>
                </li>
                <li>
                  <a href="http://blog.dhananjaynene.com/" title="/var/log/mind">Dhananjay Nene</a>
                </li>
                <li>
                  <a href="https://diegobasch.com" title="Diego Basch">Diego Basch</a>
                </li>
                <li>
                  <a href="http://www.dillonforrest.com/startup" title="Dillon's Startup Journey">Dillon Forrest</a>
                </li>
                <li>
                  <a href="https://yogthos.net/" title="(iterate think thoughts)">Dmitri Sotnikov</a>
                </li>
                <li>
                  <a href="http://blog.mitechki.net/search/label/clojure" title="Angry UNIXoid’s Humble Abode">Dmitriy Kropivnitskiy</a>
                </li>
                <li>
                  <a href="http://dimagog.github.io" title="Dimagog Blog">Dmitry Kakurin</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Dom Kiva-Meyer</a>
                </li>
                <li>
                  <a href="https://taylodl.wordpress.com" title="clojure – @taylodl's getting IT done">Don Taylor</a>
                </li>
                <li>
                  <a href="https://drknucklehead.wordpress.com" title="Clojure – Dr. Knucklehead's Blog">Dr. Knucklehead</a>
                </li>
                <li>
                  <a href="http://nils-blum-oeste.net" title="Dr. Nils Blum-Oeste">Dr. Nils Blum-Oeste</a>
                </li>
                <li>
                  <a href="http://dragan.rocks/" title="Dragan Djuric">Dragan Djuric</a>
                </li>
                <li>
                  <a class="message" title="no data">Dreamtime Circles</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Drew Olson</a>
                </li>
                <li>
                  <a href="https://drewverlee.github.io/" title="The Artificery">Drew Verlee</a>
                </li>
                <li>
                  <a href="http://carpathia.blogspot.com/" title="Carpathian Cloud">Edgar Gonçalves</a>
                </li>
                <li>
                  <a href="https://edwardkenworthy.wordpress.com" title="Clojure – edward kenworthy">Edward Kenworthy</a>
                </li>
                <li>
                  <a href="https://elangocheran.com" title="clojure – Sequenced Thoughts from C/S">Elango Cheran</a>
                </li>
                <li>
                  <a href="https://eli.thegreenplace.net/" title="Eli Bendersky's website">Eli Bendersky</a>
                </li>
                <li>
                  <a href="http://eli.naeher.name/" title="eli.naeher.name (Clojure-related posts)">Eli Naeher</a>
                </li>
                <li>
                  <a href="https://blog.engineyard.com" class="message" title="404: not found">Engine Yard</a>
                </li>
                <li>
                  <a href="http://epistemologicalengineering.blogspot.com/" title="Epistemological Engineering">Epistemological Engineering</a>
                </li>
                <li>
                  <a href="https://ericlavigne.wordpress.com" title="Eric Lavigne">Eric Lavigne</a>
                </li>
                <li>
                  <a href="http://elegoff.blogspot.com/search/label/clojure" title="Eric Le Goff's blog">Eric Le Goff</a>
                </li>
                <li>
                  <a href="http://writingcoding.blogspot.com/search/label/clojure" title="Writing/Coding">Eric Rochester</a>
                </li>
                <li>
                  <a href="http://ericsomdahl.github.io" title="(defthoughts)">Eric Somdahl</a>
                </li>
                <li>
                  <a href="http://slipset.github.io/" title="Erik Assum">Erik Assum</a>
                </li>
                <li>
                  <a href="https://medium.com/@ertu.ctn?source=rss-4a9faeeccbe4------2" title="Stories by Ertuğrul Çetin on Medium">Ertuğrul Çetin</a>
                </li>
                <li>
                  <a href="http://ethanfast.com" class="message" title="404: not found">Ethan Fast</a>
                </li>
                <li>
                  <a href="http://2017.euroclojure.org" title="EuroClojure">Euroclojure</a>
                </li>
                <li>
                  <a href="http://blog.mezeske.com" title="clojure – Mezeskedonia">Evan Mezeske</a>
                </li>
                <li>
                  <a href="https://www.exoscale.com/syslog/" title="exoscale syslog">Exoscale Blog</a>
                </li>
                <li>
                  <a href="http://www.exampler.com/blog" title="Exploration Through Example">Exploration Through Example</a>
                </li>
                <li>
                  <a href="http://kimavcrp.blogspot.com/search/label/clojure" title="Exploring the programming world">Exploring the programming world</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Factual dev blog</a>
                </li>
                <li>
                  <a href="http://www.falkoriemenschneider.de" title="Clojure">Falko Riemenschneider</a>
                </li>
                <li>
                  <a href="https://tomassetti.me" title="Federico Tomassetti – Software Architect">Federico Tomassetti</a>
                </li>
                <li>
                  <a href="http://ubercode.de" title="ubercode">Felix Dahlke</a>
                </li>
                <li>
                  <a href="http://cupofjava.de/" title="Category: clojure | Cup of Java">Felix Müller</a>
                </li>
                <li>
                  <a href="https://fenrock.wordpress.com" title="A Blog from Fenrock">Fenrock</a>
                </li>
                <li>
                  <a href="http://fhur.github.io/" title="fernandohur's blog">Fernando Hurtado</a>
                </li>
                <li>
                  <a href="http://fixitwithcode.com" title="Thoughts from the Couch">Fix it with code</a>
                </li>
                <li>
                  <a href="http://flowa.fi" class="message" title="404: not found">Flowa</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Frankie Sardo</a>
                </li>
                <li>
                  <a title="">Franklin Chen</a>
                </li>
                <li>
                  <a href="http://fgiasson.com/blog" title="Clojure – Frederick Giasson">Frederick Giasson</a>
                </li>
                <li>
                  <a href="http://www.lexicallyscoped.com/" title="Lexically scoped">Fredrik Dyrkell</a>
                </li>
                <li>
                  <a href="https://functionalbytes.nl/" title="English posts of Functional Bytes - Clojure en Java specialist">Functional Bytes</a>
                </li>
                <li>
                  <a href="https://clojuredesign.club/" title="Functional Design in Clojure">Functional Design in Clojure podcast</a>
                </li>
                <li>
                  <a href="https://www.functionalgeekery.com" title="Functional Geekery">Functional Geekery</a>
                </li>
                <li>
                  <a href="https://medium.com/@functionalhuman?source=rss-5f948efd4b3a------2" title="Stories by Functional Human on Medium">Functional Human</a>
                </li>
                <li>
                  <a href="https://functionaljobs.com/" class="message" title="internal server error">Functional Jobs</a>
                </li>
                <li>
                  <a href="http://functionaltalks.org/" title="FunctionalTalks.org">Functional Talks</a>
                </li>
                <li>
                  <a href="https://functional.works-hub.com/learn/" title="Functional Works">Functional Works</a>
                </li>
                <li>
                  <a href="https://gal.dolber.com/" title="(shuffle thoughts)">Gal Dolber</a>
                </li>
                <li>
                  <a href="http://garajeando.blogspot.com/search/label/Clojure" title="Garajeando">Garajeando</a>
                </li>
                <li>
                  <a href="https://gtrak.wordpress.com" class="message" title="410: gone">Gary Trakhman</a>
                </li>
                <li>
                  <a href="https://teamgaslight.com/blog" class="message" title="no data">Gaslight</a>
                </li>
                <li>
                  <a href="http://www.machinelake.com" title="Play with the Machine">Gavin McGovern</a>
                </li>
                <li>
                  <a href="https://itrevolution.com" title="IT Revolution">Gene Kim / IT Revolution</a>
                </li>
                <li>
                  <a href="https://funclojure.tumblr.com/" title="clojure">Gerrit Jansen van Vuuren</a>
                </li>
                <li>
                  <a href="http://fsteeg.com/tags/name" title="Geschreibsel">Geschreibsel</a>
                </li>
                <li>
                  <a href="https://thegeez.github.com/" title="thegeez blog">Gijs Stuurman</a>
                </li>
                <li>
                  <a href="http://gilesbowkett.blogspot.com/" title="Giles Bowkett">Giles Bowkett</a>
                </li>
                <li>
                  <a href="http://blog.glenjamin.co.uk" title="Coding through the Glen - clojure">Glen Mailer</a>
                </li>
                <li>
                  <a href="https://orthogonal.me" title="Clojure – The Occasional Blogger">Glen Stampoultzis</a>
                </li>
                <li>
                  <a href="https://glennengstrand.info/blog" title="clojure – Glenn Engstrand">Glenn Engstrand</a>
                </li>
                <li>
                  <a href="http://patterngazer.blogspot.com/search/label/clojure" title="Being an apprentice software craftsman">Globulon</a>
                </li>
                <li>
                  <a href="http://goose.haus/" title="Goose Haus">Goose Haus</a>
                </li>
                <li>
                  <a href="https://www.wisdomandwonder.com" title="Clojure – Wisdom And Wonder">Grant Rettke</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Greg Hawkins</a>
                </li>
                <li>
                  <a href="https://www.greghendershott.com/tags/Clojure.rss.xml" title="Posts tagged &quot;Clojure&quot;">Greg Hendershott</a>
                </li>
                <li>
                  <a href="http://gregosuri.com/" title="Greg Osuri">Greg Osuri</a>
                </li>
                <li>
                  <a href="http://gphil.net" title="gphil's blog - Posts tagged clojure">Greg Phillips</a>
                </li>
                <li>
                  <a href="https://www.taoeffect.com/blog" title="Tao Effect Blog">Greg Slepak</a>
                </li>
                <li>
                  <a href="http://guilespi.github.com/" title="Interrupted - Clojure">Guillermo Winkler</a>
                </li>
                <li>
                  <a href="https://tech.hbc.com/" title="HBC Tech">HBC Tech</a>
                </li>
                <li>
                  <a href="http://http-kit.org" class="message" title="no data">HTTP Kit</a>
                </li>
                <li>
                  <a href="https://hackaday.com" title="clojure – Hackaday">Hackaday</a>
                </li>
                <li>
                  <a href="https://www.recurse.com/blog" title="The Recurse Center Blog">Hacker School</a>
                </li>
                <li>
                  <a href="http://github.com/dylang/node-rss" class="message" title="duplicate subscription: https://anmonteiro.com/atom.xml">Hackernoon</a>
                </li>
                <li>
                  <a href="https://hamishrickerby.com" title="Hamish Rickerby">Hamish Rickerby</a>
                </li>
                <li>
                  <a href="http://netzhansa.blogspot.com/search/label/clojure" title="netzhansa">Hans Hübner</a>
                </li>
                <li>
                  <a href="https://hashrocket.com/blog.rss" title="Hashrocket">Hashrocket</a>
                </li>
                <li>
                  <a href="https://medium.com/helpshift-engineering?source=rss----3229f31ca4f4---4" title="helpshift-engineering - Medium">Helpshift Engineering Blog</a>
                </li>
                <li>
                  <a href="http://www.prodevtips.com" title="ProDevTips – Web Development Tutorials">Henrik Sarvell</a>
                </li>
                <li>
                  <a href="http://widdindustries.com/" title="Henry Widd’s Blog | Clojure">Henry Widd</a>
                </li>
                <li>
                  <a href="http://thinkrevoactevo.blogspot.com/search/label/clojure" title="Think revo, act evo">Herwig Hochleitner</a>
                </li>
                <li>
                  <a href="http://heuristic-fencepost.blogspot.com/" title="Heuristic Fencepost">Heuristic Fencepost</a>
                </li>
                <li>
                  <a href="http://blog.hdurer.net" title="Holger's Blog">Holger Durer</a>
                </li>
                <li>
                  <a href="http://blog.find-method.de/" title="Not lost but found">Holger Schauer</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Homegrown Labs</a>
                </li>
                <li>
                  <a href="https://honza.ca" title="Honza Pokorny - Thoughts on web development">Honza Pokorny</a>
                </li>
                <li>
                  <a href="https://medium.com/@hlship?source=rss-858d614db402------2" title="Stories by Howard M. Lewis Ship on Medium">Howard M. Lewis Ship</a>
                </li>
                <li>
                  <a href="http://codemeself.blogspot.com/search/label/clojure" title="code me self">Hubert Iwaniuk</a>
                </li>
                <li>
                  <a href="https://mrhaki.blogspot.com/search/label/Clojure" title="Messages from mrhaki">Hubert Klein Ikkink</a>
                </li>
                <li>
                  <a href="http://hueypetersen.com/" title="hueypetersen.com">Huey Petersen</a>
                </li>
                <li>
                  <a href="http://hugoduncan.org/tags/clojure/" title="pelure">Hugo Duncan</a>
                </li>
                <li>
                  <a href="https://labs.ig.com/blogrss.xml" title="">IG Labs</a>
                </li>
                <li>
                  <a href="https://ianeslick.com" title="clojure – Frumious Abstractions">Ian Eslick</a>
                </li>
                <li>
                  <a href="http://ianp.org/" title="Category: Clojure | Digital Magpie">Ian Phillips</a>
                </li>
                <li>
                  <a href="http://www.rumford.name/" title="An Ostler in IT">Ian Rumford</a>
                </li>
                <li>
                  <a href="http://brownsofa.org/" title="Category: clojure | Brownsofa">Ian Truslove</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Ignacio Thayer</a>
                </li>
                <li>
                  <a href="http://specious.github.io/blog/" title="A blog by Ildar Sagdejev">Ildar Sagdejev</a>
                </li>
                <li>
                  <a href="android-app://com.medium.reader/https/medium.com/ilya-sterin" title="">Ilya Sterin</a>
                </li>
                <li>
                  <a href="https://jng.imagine27.com" class="message" title="internal server error">Imagine27</a>
                </li>
                <li>
                  <a href="http://immutant.org/" title="Immutant">Immutant</a>
                </li>
                <li>
                  <a href="https://data-sorcery.org" title="Data Sorcery with Clojure">Incanter: Data Sorcery with Clojure</a>
                </li>
                <li>
                  <a href="http://increasinglyfunctional.com/" title="Increasingly Functional">Increasingly Functional - Joshua Miller</a>
                </li>
                <li>
                  <a href="http://blog.isabel-drost-fromm.de/" title="Inductive Bias (Posts about clojure)">Inductive Bias</a>
                </li>
                <li>
                  <a href="http://ingesolvoll.github.io/" title="Inge Solvoll's Blog">Inge Solvoll</a>
                </li>
                <li>
                  <a href="http://insideclojure.org" title="Inside Clojure">Inside Clojure</a>
                </li>
                <li>
                  <a href="https://inside.unbounce.com" title="clojure – Inside Unbounce">Inside Unbounce</a>
                </li>
                <li>
                  <a href="http://www.inerciasensorial.com.br" title="Clojure – Inércia Sensorial">Inércia Sensorial</a>
                </li>
                <li>
                  <a href="http://isaaccambron.com/blog" title="Isaac Cambron">Isaac Cambron</a>
                </li>
                <li>
                  <a href="http://blog.isaachodes.io" title="Notes">Isaac Hodes</a>
                </li>
                <li>
                  <a href="https://grishaev.me/" title="Ivan Grishaev's blog">Ivan Grishaev</a>
                </li>
                <li>
                  <a href="http://clojurestuff.blogspot.com/" title="Clojure stuff">Ivan Schütz</a>
                </li>
                <li>
                  <a href="https://medium.com/makimo-tech-blog/tagged/lisp?source=rss----98fc48642ba7--lisp" title="Lisp in Makimo Tech Blog on Medium">Iwo Herka @ Makimo Tech Blog</a>
                </li>
                <li>
                  <a href="https://flexpoint.tech" title="Clojure – J. Pablo Fernández">J. Pablo Fernández</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=jrheard&amp;postID=40024238467" class="message" title="http status 503">JR Heard</a>
                </li>
                <li>
                  <a href="https://medium.com/@jaceklaskowski?source=rss-df186e1cd0c2------2" title="Stories by Jacek Laskowski on Medium">Jacek Laskowski</a>
                </li>
                <li>
                  <a href="https://medium.com/@jacekschae?source=rss-17bb93fc3bc7------2" title="Stories by Jacek Schae on Medium">Jacek Schae</a>
                </li>
                <li>
                  <a href="https://jackdschultz.com" title="Jack Schultz">Jack Schultz</a>
                </li>
                <li>
                  <a href="https://chopmode.wordpress.com" title="clojure – chop-mode">Jacob Poulsgaard Tjørnholm</a>
                </li>
                <li>
                  <a href="https://jakemccrary.com/" title="Jake McCrary">Jake McCrary</a>
                </li>
                <li>
                  <a href="https://blog.jakuba.net/" class="message" title="404: not found">Jakub Arnold</a>
                </li>
                <li>
                  <a href="https://theholyjava.wordpress.com" title="clojure – Holy on Dev">Jakub Holý</a>
                </li>
                <li>
                  <a href="http://www.devstopfix.com/" title="Devstopfix">James Every</a>
                </li>
                <li>
                  <a title="Yo! Briefcase: clojure">James Hughes</a>
                </li>
                <li>
                  <a href="https://medium.com/@jamesleonis?source=rss-a158656a3960------2" title="Stories by James Leonis on Medium">James Leonis</a>
                </li>
                <li>
                  <a title="Boolean Knot - Blog">James Reeves</a>
                </li>
                <li>
                  <a href="https://www.kartar.net/" title="Kartar.Net">James Turnbull</a>
                </li>
                <li>
                  <a href="https://www.jamesward.com" class="message" title="404: not found">James Ward</a>
                </li>
                <li>
                  <a href="https://scattered-thoughts.net/" title="Scattered Thoughts">Jamie Brandon</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Jamie Ingilby</a>
                </li>
                <li>
                  <a href="https://jan.rychter.com/enblog/" title="Jan Rychter: Blog [EN]">Jan Rychter</a>
                </li>
                <li>
                  <a href="https://koodo.wordpress.com" title="Clojure – Code and stuff">Janne Lemmetti</a>
                </li>
                <li>
                  <a href="http://blog.lobberecht.com/search/label/clojure" title="Jared's WebLog">Jared Lobberecht</a>
                </li>
                <li>
                  <a href="http://jarrodctaylor.com" title="JarrodCTaylor">Jarrod C Taylor</a>
                </li>
                <li>
                  <a href="http://jasonaeschliman.blogspot.com/search/label/clojure" title="_">Jason Aeschliman</a>
                </li>
                <li>
                  <a href="https://dataissexy.wordpress.com" title="Clojure – Jason Bell">Jason Bell</a>
                </li>
                <li>
                  <a href="https://jasonrudolph.com/" title="Jason Rudolph">Jason Rudolph</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Jason Webb</a>
                </li>
                <li>
                  <a href="http://w01fe.com" title="w01fe">Jason Wolfe</a>
                </li>
                <li>
                  <a href="https://jatinpuri.com" class="message" title="internal server error">Jatin Puri</a>
                </li>
                <li>
                  <a title="Java Code Geeks">Java Code Geeks</a>
                </li>
                <li>
                  <a href="https://dzone.com/java-jdk-development-tutorials-tools-news" title="DZone Java Zone">Javalobby</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Jay Fields</a>
                </li>
                <li>
                  <a href="https://www.jayway.com/" title="Jayway">Jayway team</a>
                </li>
                <li>
                  <a href="http://jneen.net/" title="Things I Remember to Write Down">Jeanine Adkisson</a>
                </li>
                <li>
                  <a href="https://blog.jeaye.com//" title="Jeaye’s Blog">Jeaye Wilkerson</a>
                </li>
                <li>
                  <a href="http://www.fatvat.co.uk/" title="Fatvat">Jeff Foster</a>
                </li>
                <li>
                  <a href="https://toinfinity.wordpress.com" title="Clojure – Infinity: Easier Than You Think. Infinitely.">Jeff Gortatowsky</a>
                </li>
                <li>
                  <a href="http://jeroenvloothuis.blogspot.com/search/label/clojure" title="Jeroen Vloothuis">Jeroen Vloothuis</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Jessica Kerr</a>
                </li>
                <li>
                  <a href="http://www.mkrrf-it.com/blogs-of-jiawei-zhao/" title="Blogs of Jiawei Zhao | MKRRF IT">Jiawei Zhao</a>
                </li>
                <li>
                  <a href="http://www.clojure.net" title="A Clojure Story">Jim Duey</a>
                </li>
                <li>
                  <a href="http://jirka.marsik.me/" title="The Personal Blog of Jirka Maršík">Jirka Maršík</a>
                </li>
                <li>
                  <a href="https://joelholder.com" title="Joel Holder's Code Compendium">Joel Holder</a>
                </li>
                <li>
                  <a href="https://j19sch.github.io/" title="Joep Schuurkes (Posts about clojure)">Joep Schuurkes</a>
                </li>
                <li>
                  <a href="https://joeygibson.com" title="clojure – Joey Gibson's Blog">Joey Gibson</a>
                </li>
                <li>
                  <a href="https://jstaffans.github.io/" title="Johannes Staffans">Johannes Staffans</a>
                </li>
                <li>
                  <a href="https://medium.com/@biesnecker?source=rss-42c1e32960f9------2" title="Stories by John Biesnecker on Medium">John Biesnecker</a>
                </li>
                <li>
                  <a href="http://elhumidor.blogspot.com/search/label/clojure" title="El Humidor">John Hume</a>
                </li>
                <li>
                  <a href="https://www.duelinmarkers.com/" title="duelinmarkers.com">John Hume</a>
                </li>
                <li>
                  <a href="http://zerolib.com" title="John Jacobsen">John Jacobsen</a>
                </li>
                <li>
                  <a href="http://jondotcomdotorg.net" title="clojure – jon.com.org.net">Jon Bristow</a>
                </li>
                <li>
                  <a href="http://www.pitheringabout.com" class="message" title="no data">Jon Pither</a>
                </li>
                <li>
                  <a href="https://jon.is.emotionull.com/" class="message" title="404: not found">Jon Romero</a>
                </li>
                <li>
                  <a href="https://jdevuyst.blogspot.com/" title="Jonas De Vuyst’s Blog">Jonas De Vuyst</a>
                </li>
                <li>
                  <a href="http://jonase.github.io" title="nil/recur">Jonas Enlund</a>
                </li>
                <li>
                  <a href="http://blog.jonharrington.org/" title="clojure - Jonathan Harrington">Jonathan Harrington</a>
                </li>
                <li>
                  <a href="https://www.eigenbahn.com/" title="Eigenbahn blog">Jordan Besly</a>
                </li>
                <li>
                  <a href="https://jorin.me/" title="Jorin's Logbook">Jorin Vogel</a>
                </li>
                <li>
                  <a href="http://josf.info/" title="Category: clojure | josf.info">Joseph Fahey</a>
                </li>
                <li>
                  <a href="http://blog.josephwilk.net/" title="Category: clojure | Joseph Wilk">Joseph Wilk</a>
                </li>
                <li>
                  <a href="https://medium.com/@jmglov?source=rss-29ada43ee630------2" title="Stories by Josh Glover on Medium">Josh Glover</a>
                </li>
                <li>
                  <a href="https://lionfacelemonface.wordpress.com" title="clojure – jjmojojjmojo: In Effect">Josh Johnson</a>
                </li>
                <li>
                  <a href="https://joshuadavey.com/" class="message" title="404: not found">Joshua Davey</a>
                </li>
                <li>
                  <a href="http://blog.wagjo.com" title="Jozef Wagner's Blog">Jozef Wagner</a>
                </li>
                <li>
                  <a href="http://tangrammer.github.io/" title="on the clojure move">Juan Antonio Ruz</a>
                </li>
                <li>
                  <a href="http://deraen.github.io/" title="Deraen's blog">Juho Teperi</a>
                </li>
                <li>
                  <a href="https://jukkaz.wordpress.com" title="clojure – Jukka Zitting">Jukka Zitting</a>
                </li>
                <li>
                  <a href="http://justforfn.blogspot.com/" title="just for fn">Just For Fn</a>
                </li>
                <li>
                  <a href="http://justinhj.github.io/" title="Functional[Justin]">Justin Heyes-Jones</a>
                </li>
                <li>
                  <a href="https://jkkramer.wordpress.com" title="Clojure – Justin Kramer">Justin Kramer</a>
                </li>
                <li>
                  <a href="https://medium.com/@kari.marttila?source=rss-817417aca5da------2" title="Stories by Kari Marttila on Medium">Kari Marttila</a>
                </li>
                <li>
                  <a href="http://tirkarthi.github.io" title="A Technical Blog on Clojure">Karthikeyan S</a>
                </li>
                <li>
                  <a href="http://keechma.com/news/" title="Keechma News">Keechma News</a>
                </li>
                <li>
                  <a href="https://keminglabs.com/" title="Keming Labs blog">Keming Labs</a>
                </li>
                <li>
                  <a href="http://def-learn.blogspot.com/search/label/clojure" title="(def-learn something)">Kevin Hostelley</a>
                </li>
                <li>
                  <a href="https://kevinlynagh.com/" title="Kevin Lynagh's website">Kevin Lynagh</a>
                </li>
                <li>
                  <a href="http://kieranbrowne.com/" title="Kieran Browne">Kieran Browne</a>
                </li>
                <li>
                  <a href="https://malagastockholm.wordpress.com" title="clojure – A Computer Sciences Engineer living in Stockholm">Kiko Fernandez</a>
                </li>
                <li>
                  <a href="http://controlroom.blogspot.com/search/label/clojure" title="Control Room">Kirby Urner</a>
                </li>
                <li>
                  <a href="https://engineering.klarna.com/tagged/clojure?source=rss----86090d14ab52--clojure" title="Clojure in Klarna Engineering on Medium">Klarna Engineering Blog</a>
                </li>
                <li>
                  <a href="http://squirrel.pl/blog" title="Clojure – Konrad Garus">Konrad Garus</a>
                </li>
                <li>
                  <a href="http://blog.khinsen.net/index.html" title="Konrad Hinsen's Blog: Konrad Hinsen's Blog">Konrad Hinsen</a>
                </li>
                <li>
                  <a href="http://konradkuehne.com/" title="Konrad Kühne">Konrad Kühne</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Kontor Engineering Blog</a>
                </li>
                <li>
                  <a href="http://blog.korny.info" title="Korny's Blog">Kornelis Sietsma</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Kototama</a>
                </li>
                <li>
                  <a href="https://medium.com/@kovasb?source=rss-6a46aa51e2fd------2" title="Stories by Kovas Boguta on Medium">Kovas Boguta</a>
                </li>
                <li>
                  <a href="http://blog.jenkster.com" title="Kris Jenkins' Blog">Kris Jenkins</a>
                </li>
                <li>
                  <a href="https://clojure.wladyka.eu/posts/" title="Posts on Clojure Blog">Krzysztof Wladyka</a>
                </li>
                <li>
                  <a href="https://kukuruku.co/" title="Kukuruku Hub">Kukuruku</a>
                </li>
                <li>
                  <a href="http://asymmetrical-view.com/" title="Kyle Burton">Kyle Burton</a>
                </li>
                <li>
                  <a href="https://kylecordes.com" title="clojure – Kyle Cordes">Kyle Cordes</a>
                </li>
                <li>
                  <a href="http://aphyr.com/" title="Aphyr: Clojure">Kyle Kingsbury</a>
                </li>
                <li>
                  <a href="https://zirkonit.svbtle.com" title="Kyle Nowak">Kyle Nowak</a>
                </li>
                <li>
                  <a href="http://www.lab49.com" title="Lab49">Lab49</a>
                </li>
                <li>
                  <a href="https://lambdaisland.com/blog" title="Lambda Island Blog">Lambda Island Blog</a>
                </li>
                <li>
                  <a href="https://lambdaisland.com/" title="Lambda Island">Lambda Island Freebies</a>
                </li>
                <li>
                  <a href="https://www.lambdacat.com/" title="clojure - LambdaCat">LambdaCat</a>
                </li>
                <li>
                  <a class="message" title="404: not found">LambdaX Blog</a>
                </li>
                <li>
                  <a href="https://lambdaforge.io/" title="lambdaforge.io">Lambdaforge Blog</a>
                </li>
                <li>
                  <a href="https://humorless.github.io/" title="Let over map merge">Laurence Chen</a>
                </li>
                <li>
                  <a href="https://blog.laurentcharignon.com/" title="Laurent Charignon">Laurent Charignon</a>
                </li>
                <li>
                  <a href="http://www.lauripesonen.com/" title="Lauri Pesonen">Lauri Pesonen</a>
                </li>
                <li>
                  <a href="https://leandromoreira.com" title="clojure – Leandro Moreira">Leandro Moreira</a>
                </li>
                <li>
                  <a href="http://www.learningclojure.com/" title="Learning Clojure">Learning Clojure</a>
                </li>
                <li>
                  <a title="">Lee Hinman</a>
                </li>
                <li>
                  <a href="http://leeorengel.com" title="clojure – Leeor Engel">Leeor Engel</a>
                </li>
                <li>
                  <a href="http://langnostic.inaimathi.ca" title="Language Agnostic">Leo Zovic</a>
                </li>
                <li>
                  <a href="http://www.leonardoborges.com/writings/" class="message" title="404: not found">Leonardo Borges</a>
                </li>
                <li>
                  <a href="https://leonid.shevtsov.me/" title="Leonid Shevtsov">Leonid Shevtsov</a>
                </li>
                <li>
                  <a href="https://levelup.gitconnected.com?source=rss----5517fd7b58a6---4" title="Level Up Coding - Medium">Level Up Coding</a>
                </li>
                <li>
                  <a href="http://blog.licenser.net/" class="message" title="404: not found">Lice!</a>
                </li>
                <li>
                  <a href="https://lispchronicles.wordpress.com" title="Lisp Chronicles">Lisp Chronicles</a>
                </li>
                <li>
                  <a href="https://lispcast.com" title="LispCast">LispCast</a>
                </li>
                <li>
                  <a href="http://logaan.github.io" title="Logan Campbell">Logan Campbell</a>
                </li>
                <li>
                  <a href="http://loganlinn.com/" title="Category: clojure | loganlinn.log">Logan Linn</a>
                </li>
                <li>
                  <a href="http://www.eventbrite.com/org/2086345901" title="Events organized by London Clojurians">London Clojurian Events</a>
                </li>
                <li>
                  <a href="http://lbradstreet.github.io/" title="Lucas Bradstreet">Lucas Bradstreet</a>
                </li>
                <li>
                  <a href="http://highorderdysfunctions.blogspot.com/" title="High order disfunctions - Disfunzioni di ordine superiore">Luciano Capitanio</a>
                </li>
                <li>
                  <a href="http://lukevanderhart.com/" title="Luke VanderHart">Luke VanderHart</a>
                </li>
                <li>
                  <a href="https://medium.com/@lumberdev?source=rss-21ce964c0c------2" title="Stories by Lumber Dev on Medium">Lumber Dev</a>
                </li>
                <li>
                  <a href="https://www.mxmmz.nl" title="MxMMz">Maarten Metz</a>
                </li>
                <li>
                  <a href="http://analyticbastard.github.io" title="The Analytic Bastard">Machinomics</a>
                </li>
                <li>
                  <a href="http://rundis.github.io/blog" title="The Rundis Blog">Magnus Rundberget</a>
                </li>
                <li>
                  <a href="http://norgat.blogspot.com/search/label/Clojure" title="Norgat blog">Maksim Karandashov</a>
                </li>
                <li>
                  <a href="http://blog.malcolmsparks.com" class="message" title="internal server error">Malcolm Sparks</a>
                </li>
                <li>
                  <a href="https://www.lambda-land.com/" title="Λambda Λand - RSS feed">Manuel Paccagnella</a>
                </li>
                <li>
                  <a href="https://www.manueluberti.eu" title="Manuel Uberti">Manuel Uberti</a>
                </li>
                <li>
                  <a href="http://entxtech.blogspot.com/" title="Marc's Tech">Marc Limotte</a>
                </li>
                <li>
                  <a href="http://ku1ik.com/" title="Odes of the Occult">Marcin Kulik</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Marco Munizaga</a>
                </li>
                <li>
                  <a href="http://www.marcoyuen.com/" title="Marco Yuen">Marco Yuen</a>
                </li>
                <li>
                  <a href="http://xivilization.net/~marek/blog/" title="Category: Clojure | The Hyperpessimist">Marek Kubica</a>
                </li>
                <li>
                  <a href="http://mneise.github.io" title="My Dev Blog">Maria Geller</a>
                </li>
                <li>
                  <a href="http://blog.maio.cz/search/label/clojure" title="Marian Schubert">Marian Schubert</a>
                </li>
                <li>
                  <a href="https://markbastian.github.io" title="(conj community thoughts)">Mark Bastian</a>
                </li>
                <li>
                  <a href="https://www.compoundtheory.com" title="Clojure – Compound Theory">Mark Mandel</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Mark McGranaghan</a>
                </li>
                <li>
                  <a href="http://www.markhneedham.com/blog" title="Mark Needham">Mark Needham</a>
                </li>
                <li>
                  <a href="https://markhneedham.com/blog/" title="Mark Needham">Mark Needham</a>
                </li>
                <li>
                  <a href="https://clojure-yap.blogspot.com/" title="Clojure Yap">Mark Nutter</a>
                </li>
                <li>
                  <a href="http://mark.reid.name" title="Inductio Ex Machina">Mark Reid</a>
                </li>
                <li>
                  <a href="http://code-and-cocktails.heroku.com/" title="Code And Cocktails">Mark Simpson</a>
                </li>
                <li>
                  <a title="">Mark Watson</a>
                </li>
                <li>
                  <a href="https://medium.com/@mhjort?source=rss-e0b1c3aeb27d------2" title="Stories by Markus Hjort on Medium">Markus Hjort</a>
                </li>
                <li>
                  <a href="http://blog.platypope.org/" title="platypope.org / blog / syndicate">Marshall Bockrath-Vandegrift</a>
                </li>
                <li>
                  <a href="http://www.spyfoos.com/" title="The Limiting Factor">Martin Clausen</a>
                </li>
                <li>
                  <a href="http://martin.janiczek.cz" title="Martin Janiczek">Martin Janiczek</a>
                </li>
                <li>
                  <a href="https://www.martinklepsch.org/" title="Martin Klepsch">Martin Klepsch</a>
                </li>
                <li>
                  <a href="http://martintrojer.github.io" title="Martin's Blog - Clojure">Martin Trojer</a>
                </li>
                <li>
                  <a href="https://maryrosecook.com/" title="Mary Rose Cook">Mary Rose Cook</a>
                </li>
                <li>
                  <a href="http://www.mase.io/" title="mase.io">Mason Browne</a>
                </li>
                <li>
                  <a href="https://masondesu.com/" title="masondesu.com">Mason Stewart</a>
                </li>
                <li>
                  <a href="https://mcorbin.fr" title="(mcorbin.fr)">Mathieu Corbin</a>
                </li>
                <li>
                  <a href="http://adereth.github.io/" title="adereth">Matt Adereth</a>
                </li>
                <li>
                  <a href="http://notesonclojure.blogspot.com/" title="Notes on Clojure">Matt Clark</a>
                </li>
                <li>
                  <a href="http://blog.mattgauger.com/" title="Matt Gauger">Matt Gauger</a>
                </li>
                <li>
                  <a href="http://mattgreer.org" title="Matt Greer">Matt Greer</a>
                </li>
                <li>
                  <a href="http://mattyw.github.io/" title="Category: clojure | mattyw">Matt Williams</a>
                </li>
                <li>
                  <a href="https://matthewdowney.github.io/" title="Matthew Downey">Matthew Downey</a>
                </li>
                <li>
                  <a href="http://sapient-pair.com/blog/tag/clojure/" title="Sapient Pair - Tagged: clojure">Matthew Phillips</a>
                </li>
                <li>
                  <a href="https://matthiasnehlsen.com" title="Matthias Nehlsen">Matthias Nehlsen</a>
                </li>
                <li>
                  <a href="http://mattyjwilliams.blogspot.com/search/label/clojure" title="mattyw">Matty Williams</a>
                </li>
                <li>
                  <a href="https://maurits.wordpress.com" title="Clojure – Maurits thinks aloud">Maurits Rijk</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Max Gonzih</a>
                </li>
                <li>
                  <a href="http://maxprokopiev.com/" title="">Max Prokopiev</a>
                </li>
                <li>
                  <a href="https://maxweber.github.io/" title="The blog of Max Weber">Max Weber</a>
                </li>
                <li>
                  <a href="http://engineering.mayvenn.com" title="">Mayvenn Engineering blog</a>
                </li>
                <li>
                  <a href="http://diogo149.github.com/" title="Me vs NP">Me vs NP</a>
                </li>
                <li>
                  <a href="http://kotka.de/blog/index.html" title="Kotka">Meikel Brandmeyer</a>
                </li>
                <li>
                  <a href="http://metaredux.com/" title="Meta Redux">Meta Redux</a>
                </li>
                <li>
                  <a href="https://medium.com/@metabase?source=rss-d8cd1c2343d5------2" title="Stories by Metabase on Medium">Metabase</a>
                </li>
                <li>
                  <a href="http://tech.metail.com" title="Clojure – Metail Tech">Metail Tech</a>
                </li>
                <li>
                  <a href="http://metosin.fi/" title="Metosin">Metosin</a>
                </li>
                <li>
                  <a href="http://michaelalynmiller.com/" title="Michael Alyn Miller">Michael Alyn Miller</a>
                </li>
                <li>
                  <a href="http://bad-concurrency.blogspot.com/" title="Bad Concurrency">Michael Barker</a>
                </li>
                <li>
                  <a href="http://mcohen01.github.com" class="message" title="404: not found">Michael Cohen</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=michaeldrogalis&amp;postID=65274692089" class="message" title="404: not found">Michael Drogalis</a>
                </li>
                <li>
                  <a href="http://michaeldrogalis.github.io/" title="Michael Drogalis">Michael Drogalis</a>
                </li>
                <li>
                  <a href="http://mwfogleman.github.io/" title="rejoyce">Michael Fogleman</a>
                </li>
                <li>
                  <a href="http://blog.fogus.me" title="Send More Paramedics">Michael Fogus</a>
                </li>
                <li>
                  <a href="http://www.michaelharrison.ws/weblog" title="clojure – goodmike blogs here">Michael Harrison</a>
                </li>
                <li>
                  <a title="">Michael Kohl</a>
                </li>
                <li>
                  <a href="http://michakurt.blogspot.com/search/label/clojure" title="mk">Michael Krause</a>
                </li>
                <li>
                  <a href="https://michaelochurch.wordpress.com" title="Michael O. Church">Michael O. Church</a>
                </li>
                <li>
                  <a href="http://thornydev.blogspot.com/" title="ThornyDev">Michael Peterson</a>
                </li>
                <li>
                  <a href="http://michaelrbernste.in" title="michaelrbernste.in">Michael Robert Bernstein</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Michael Schneider</a>
                </li>
                <li>
                  <a href="https://cwithmichael.com/" title="Insomnia and *nix">Michael Terrell</a>
                </li>
                <li>
                  <a href="http://lewandowski.io/" title="Craftsmanship Archives">Michał Lewandowski</a>
                </li>
                <li>
                  <a href="https://hircus.wordpress.com" title="Clojure – Intuitionistically Uncertain">Michel Alexandre Salim</a>
                </li>
                <li>
                  <a href="http://blog.michielborkent.nl/" title="REPL adventures">Michiel Borkent</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Mihnea Dobrescu-Balaur</a>
                </li>
                <li>
                  <a href="http://turkia.github.io/" title="Mika's Clojure">Mika Turkia</a>
                </li>
                <li>
                  <a href="https://clojurefun.wordpress.com" title="Creative Clojure">Mike Anderson</a>
                </li>
                <li>
                  <a href="http://blog.fikesfarm.com/" title="FikesFarm Blog">Mike Fikes</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Mike Harris</a>
                </li>
                <li>
                  <a href="https://www.mikeivanov.com/" title="connecting the dots . . .">Mike Ivanov</a>
                </li>
                <li>
                  <a href="http://inchingforward.blogspot.com/search/label/clojure" title="Inching Forward">Mike Janger</a>
                </li>
                <li>
                  <a href="http://blog.mired.org/search/label/clojure" title="Mired in code">Mike Meyer</a>
                </li>
                <li>
                  <a href="https://blog.dottedmag.net/tagged/clojure?source=rss----68128df85fd5--clojure" class="message" title="404: not found">Mikhail Gusarov</a>
                </li>
                <li>
                  <a href="http://clojurewise.blogspot.com/" title="ClojureWise">Miki Tebeka</a>
                </li>
                <li>
                  <a href="http://blog.milehighcode.com/search/label/clojure" title="Mile High Code">Mile High Code</a>
                </li>
                <li>
                  <a href="https://mindbat.com" title="Mindbat">Mindbat</a>
                </li>
                <li>
                  <a href="http://www.modulolotus.net" title="Modulo Lotus">Modulo Lotus</a>
                </li>
                <li>
                  <a href="https://mooistudios.com" title="Mooi Studios">Mooi Studios</a>
                </li>
                <li>
                  <a href="http://blog.morphism.com/" title="Morphism Blog">Morphism Labs News</a>
                </li>
                <li>
                  <a href="https://mostlylazy.com" title="Mostly λazy…a Clojure podcast">Mostly λazy…a Clojure podcast</a>
                </li>
                <li>
                  <a href="http://clojurian.blogspot.com/" title="Musings on Clojure">Musings on Clojure</a>
                </li>
                <li>
                  <a href="http://clojurist.blogspot.com/" title="Welcome to Clojuric Park">Naren Arya</a>
                </li>
                <li>
                  <a href="https://blogs.oracle.com/nashorn/compendium/rss" class="message" title="internal server error">Nashorn JavaScript Project</a>
                </li>
                <li>
                  <a href="http://eigenjoy.com" class="message" title="no data">Nate Murray</a>
                </li>
                <li>
                  <a href="http://wildermuthn.github.com" title="wildermuthn">Nate Wildermuth</a>
                </li>
                <li>
                  <a href="http://nathanmarz.com/blog/" title="thoughts from the red planet">Nathan Marz</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Neale Swinnerton</a>
                </li>
                <li>
                  <a href="http://nelsonmorris.net/" title="Nelson Morris">Nelson Morris</a>
                </li>
                <li>
                  <a href="https://nervous.io" class="message" title="internal server error">Nervous Systems</a>
                </li>
                <li>
                  <a href="http://blog.ndk.io" title="Nicholas Kariniemi">Nicholas Kariniemi</a>
                </li>
                <li>
                  <a href="http://www.arachnid.co.nz/blog" title="Arachnid Studios Clojure Blog.">Nick Jones Clojure Blog</a>
                </li>
                <li>
                  <a class="message" title="403: forbidden">Nick Mudge</a>
                </li>
                <li>
                  <a href="http://www.niclas-meier.de/www.niclas-meier.de/" title="byte bohemian">Niclas Meier</a>
                </li>
                <li>
                  <a href="http://whollyweirdwyrd.blogspot.com/search/label/clojure" title="Mu">Nicolas Buduroi</a>
                </li>
                <li>
                  <a href="http://www.chaomancy.com/blog/" title="Chaomancy - Clojure">Nicolas Duchenne</a>
                </li>
                <li>
                  <a href="https://blog.frankel.ch/" title="A Java geek">Nicolas Fränkel</a>
                </li>
                <li>
                  <a href="http://blog.nberger.com.ar/" title="Category: clojure | Nico is blogging">Nicolás Berger</a>
                </li>
                <li>
                  <a href="http://nbeloglazov.com" title="nbeloglazov blog">Nikita Beloglazov</a>
                </li>
                <li>
                  <a href="https://tonsky.me/" title="tonsky.me">Nikita Prokopov</a>
                </li>
                <li>
                  <a href="https://deltadata.wordpress.com" title="clojure – Delta Data">Nikola Peric</a>
                </li>
                <li>
                  <a href="https://nikola.plejic.com/" title="Nikola Plejić">Nikola Plejić</a>
                </li>
                <li>
                  <a href="https://s01blog.wordpress.com" title="clojure">Nikos Karagiannakis</a>
                </li>
                <li>
                  <a href="http://numergent.com/" title="Numergent">Numergent</a>
                </li>
                <li>
                  <a href="http://nakkaya.com" title="An explorer's log">Nurullah Akkaya</a>
                </li>
                <li>
                  <a class="message" title="internal server error">O! Mr Speaker!</a>
                </li>
                <li>
                  <a href="http://osv-io.github.io//github/" title="Category: Clojure | OSv Blog">OSv</a>
                </li>
                <li>
                  <a href="https://olabini.se/blog" title="Ola Bini: Programming Language Synchronicity">Ola Bini</a>
                </li>
                <li>
                  <a href="https://www.olindata.com/en/404-page-not-found" class="message" title="internal server error">OlinData</a>
                </li>
                <li>
                  <a href="https://tech.labs.oliverwyman.com" title="Blog Posts – Oliver Wyman Digital: Engineering">Oliver Wyman</a>
                </li>
                <li>
                  <a href="http://onbeyondlambda.blogspot.com/" title="On Beyond Lambda">On Beyond Lambda</a>
                </li>
                <li>
                  <a href="https://blog.ona.io" title="Ona Blog">Ona Blog</a>
                </li>
                <li>
                  <a href="http://www.onyxplatform.org/" title="The Onyx Platform">Onyx Platform</a>
                </li>
                <li>
                  <a href="http://www.opensourcery.co.za/" title="Open Sourcery">Open Sourcery</a>
                </li>
                <li>
                  <a href="http://blog.oskarth.com" title="Oskar Thorén - clojure">Oskar Thorén</a>
                </li>
                <li>
                  <a href="https://oskarth.com/tags/clojure/" title="Clojure on OSKAR">Oskar Thorén</a>
                </li>
                <li>
                  <a href="https://wickstrom.tech/" title="Oskar Wickström">Oskar Wickström</a>
                </li>
                <li>
                  <a href="http://owenrh.me.ukk/" title="Owen Rees-Hayward: Software Developer, Software Architect, Spark Certified Developer, Big Data Engineer - Bristol">Owen Rees-Hayward</a>
                </li>
                <li>
                  <a href="https://oxfordknight.co.uk" title="Blog – Oxford Knight">Oxford Knight</a>
                </li>
                <li>
                  <a href="http://palletops.com/" title="Pallet, DevOps for the JVM">Pallet blog</a>
                </li>
                <li>
                  <a href="http://blog.paralleluniverse.co/" title="Parallel Universe Blog">Parallel Universe blog</a>
                </li>
                <li>
                  <a href="http://nklein.com" title="nklein software">Patrick Stein</a>
                </li>
                <li>
                  <a href="http://pmbauer.github.io" title="(def title nil)">Paul Bauer</a>
                </li>
                <li>
                  <a href="http://thesoftwaresimpleton.com" title="Paul Cowan">Paul Cowan</a>
                </li>
                <li>
                  <a href="http://gearon.blogspot.com/" title="Working notes">Paul Gearon</a>
                </li>
                <li>
                  <a href="https://www.pgrs.net/" title="Paul Gross’s Blog">Paul Gross</a>
                </li>
                <li>
                  <a href="http://oobaloo.co.uk" title="pingles">Paul Ingles</a>
                </li>
                <li>
                  <a href="https://www.quantisan.com/" title="Paul Lam. Software engineering manager for data-driven social enterprises. - clojure">Paul Lam</a>
                </li>
                <li>
                  <a href="http://www.paullegato.com" title="Paul Legato » clojure">Paul Legato</a>
                </li>
                <li>
                  <a href="http://earthly-powers.blogspot.com/search/label/clojure" title="Earthly Powers">Paul Sandoz</a>
                </li>
                <li>
                  <a href="http://paul.stadig.name/search/label/clojure" title="Paul Stadig">Paul Stadig</a>
                </li>
                <li>
                  <a href="http://www.pauldee.org/blog" class="message" title="no data">Paul deGrandis</a>
                </li>
                <li>
                  <a href="https://paulosuzart.github.io" title="Paulo Suzart">Paulo Suzart</a>
                </li>
                <li>
                  <a href="https://pawelgrzybek.com/" class="message" title="internal server error">Pawel Grzybek</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=intothewebs&amp;postID=45073028163" title="">Pedro Mendez Calção</a>
                </li>
                <li>
                  <a href="https://medium.com/@donbonifacio?source=rss-4e40e0107778------2" title="Stories by Pedro Pereira Santos on Medium">Pedro Pereira Santos</a>
                </li>
                <li>
                  <a href="http://pelle.github.com" title="Adventures in Clojure and Datomic">Pelle Brændgaard</a>
                </li>
                <li>
                  <a href="http://pepijndevos.nl/" title="Wishful Coding">Pepijn de Vos</a>
                </li>
                <li>
                  <a href="https://perkss.github.io/#/clojure" title="The Perks of Computer Science">Perkss</a>
                </li>
                <li>
                  <a href="https://pettomato.tumblr.com/" title="pettomato">Pet Tomato</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Pete Keen</a>
                </li>
                <li>
                  <a href="http://pchristensen.com/blog" title="Clojure – Peter Christensen">Peter Christensen</a>
                </li>
                <li>
                  <a href="http://blog.podsnap.com/" title="podsnap - clojure">Peter Fraenkel</a>
                </li>
                <li>
                  <a href="https://technomancy.us/" title="Technomancy">Phil Hagelberg</a>
                </li>
                <li>
                  <a href="http://philipp.meier.name/" class="message" title="internal server error">Philipp Meier</a>
                </li>
                <li>
                  <a href="http://www.russet.org.uk/blog" title="An Exercise in Irrelevance">Phillip Lord</a>
                </li>
                <li>
                  <a href="https://spootnik.org/index.xml" title="Spootnik.org">Pierre-Yves Ritschard</a>
                </li>
                <li>
                  <a href="https://medium.com/pisanoeng?source=rss----40ed638f2704---4" title="pisanoeng - Medium">Pisano Engineering</a>
                </li>
                <li>
                  <a class="message" title="http status 520">Pluralsight</a>
                </li>
                <li>
                  <a href="http://practical.li/" title="Practicalli">Practicalli</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Pramode C.E</a>
                </li>
                <li>
                  <a href="http://overtone-recipes.github.io//" title="">Programming music with Clojure</a>
                </li>
                <li>
                  <a href="https://blog.project-fifo.net" title="Project-FiFo Blog">Project-FiFo</a>
                </li>
                <li>
                  <a href="https://farenda.com" title="Clojure – Programming for fun and profit">Przemysław Wojnowski</a>
                </li>
                <li>
                  <a href="https://puppet.com" title="Puppet.com Blog RSS Feed">Puppet Labs</a>
                </li>
                <li>
                  <a href="https://purelyfunctional.tv" title="PurelyFunctional.tv">PurelyFunctional.tv Clojure articles</a>
                </li>
                <li>
                  <a href="https://www.pushtechnology.com" title="Developer Blog – Push Technology">Push Technology</a>
                </li>
                <li>
                  <a href="https://blog.rjmetrics.com" title="The Data Point">RJMetrics</a>
                </li>
                <li>
                  <a href="https://emnh.github.io/rts-blog/" title="">RTS Blog</a>
                </li>
                <li>
                  <a href="https://developer.rackspace.com" title="Rackspace Developer Portal">Rackspace Developer Blog</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=rafaelchacon&amp;postID=19069499949" class="message" title="http status 504">Rafael Chacón</a>
                </li>
                <li>
                  <a href="https://www.spacjer.com/" title="Rafal Spacjer blog">Rafal Spacjer</a>
                </li>
                <li>
                  <a href="https://rafalcieslak.svbtle.com" title="Exceptional Mirrors">Rafał Cieślak</a>
                </li>
                <li>
                  <a href="http://ragnard.github.io/" title="Ragnar Dahlén">Ragnar Dahlén</a>
                </li>
                <li>
                  <a href="http://www.railslove.com/" title="Railslove Clojure Stories">Railslove</a>
                </li>
                <li>
                  <a href="http://blog.rguha.net" title="clojure – So much to do, so little time">Rajarshi Guha</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Ralf Bensmann</a>
                </li>
                <li>
                  <a href="http://kriyative.github.com" title="clojure posts from kriyative">Ram Krishnan</a>
                </li>
                <li>
                  <a href="https://blog.raek.se/" class="message" title="404: not found">Rasmus Svensson</a>
                </li>
                <li>
                  <a href="http://ravi.pckl.me" title="Ravi Kotecha - Recent Posts">Ravi Kotecha</a>
                </li>
                <li>
                  <a href="http://blog.opengrail.com/" title="Ray McDermott - Seeking the Open Grail">Ray McDermott - Seeking the Open Grail</a>
                </li>
                <li>
                  <a href="https://www.1729.org.uk/tags/clojure/" title="clojure on 1729.org.uk">Ray Miller</a>
                </li>
                <li>
                  <a href="http://rayhightower.com/" title="RayHightower.com">Raymond T. Hightower</a>
                </li>
                <li>
                  <a href="http://read-eval-puke.blogspot.com/" title="read-eval-puke">Read-Eval-Puke</a>
                </li>
                <li>
                  <a href="http://realworldclojure.com/" title="Real World Clojure">Real World Clojure</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=reborg&amp;postID=142353808588" class="message" title="404: not found">Reblog</a>
                </li>
                <li>
                  <a href="https://tech.redplanetlabs.com" title="Tech blog">Red Planet Labs</a>
                </li>
                <li>
                  <a href="http://feeds.feedburner.com/reiddraper.com" title="Reid Draper's blog">Reid Draper</a>
                </li>
                <li>
                  <a href="https://reshmeeauckloo.wordpress.com" title="Clojure – reshmeeauckloo">Reshmee</a>
                </li>
                <li>
                  <a href="http://clojure.blogspot.com/" title="Clojure">Rich Hickey</a>
                </li>
                <li>
                  <a href="http://www.codelearningdoing.com" title="Code Learning Doing">Richard Harrington</a>
                </li>
                <li>
                  <a href="https://changearc.blog" title="Clojure – changearc">Richard West</a>
                </li>
                <li>
                  <a href="http://richardminerich.com" title="Clojure – Inviting Epiphany">Rick Minerich</a>
                </li>
                <li>
                  <a href="https://rinuboney.github.io/" title="Rinu Boney">Rinu Boney</a>
                </li>
                <li>
                  <a href="http://codeofrob.com" title="Rob Ashton's blog">Rob Ashton</a>
                </li>
                <li>
                  <a href="http://regretful.ly" title="regretful.ly - Clojure">Robert Pitts</a>
                </li>
                <li>
                  <a href="https://rrees.me" title="clojure – Echo One">Robert Rees</a>
                </li>
                <li>
                  <a href="http://www.stuttaford.me/" title="Robert Stuttaford">Robert Stuttaford</a>
                </li>
                <li>
                  <a href="https://blog.sulami.xyz" title="sulami's blog">Robin Schroer</a>
                </li>
                <li>
                  <a href="http://blog.rlmflores.me/" title="Rodrigo Flores's Corner">Rodrigo Flores</a>
                </li>
                <li>
                  <a href="https://medium.com/@roman01la?source=rss-bfc4d6ac98db------2" title="Stories by Roman Liutikov on Medium">Roman Liutikov</a>
                </li>
                <li>
                  <a href="http://defromeo.github.io/" title="Category: Clojure | defromeo">Romeo</a>
                </li>
                <li>
                  <a href="http://narkisr.com/" title="Narkisr.com">Ronen Narkis</a>
                </li>
                <li>
                  <a href="http://techblog.roomkey.com/" class="message" title="internal server error">Room Key Tech Blog</a>
                </li>
                <li>
                  <a href="https://judithmassa.wordpress.com" title="Rubberducking">Rubberducking</a>
                </li>
                <li>
                  <a href="https://blog.rubylearning.com?source=rss----1813792c5411---4" title="RubyLearning Blog - Medium">RubyLearning Blog</a>
                </li>
                <li>
                  <a href="https://ruedigergad.com" title="Clojure – ruedigergad">Ruediger Gad</a>
                </li>
                <li>
                  <a href="https://mullr.wordpress.com" title="clojure – Russell Mull">Russell Mull</a>
                </li>
                <li>
                  <a href="http://www.toomuchcode.org/" title="Too Much Code">Ryan Brush</a>
                </li>
                <li>
                  <a href="http://rycole.com/" title="Programming, Technology and Startups - rycole.com">Ryan Cole</a>
                </li>
                <li>
                  <a href="http://rkn.io/" class="message" title="internal server error">Ryan Neufeld</a>
                </li>
                <li>
                  <a href="http://stradblog.blogspot.com/search/label/Clojure" title="Functional thoughts and experiences">Ryan Stradling</a>
                </li>
                <li>
                  <a href="https://medium.com/we-are-swat?source=rss----25bf14f7a5f3---4" title="WeAreSWAT - Medium">SWAT Team</a>
                </li>
                <li>
                  <a href="http://saaientist.blogspot.com/search/label/clojure" title="Saaien Tist">Saaien Tist</a>
                </li>
                <li>
                  <a href="https://sachachua.com/blog" title="clojure – sacha chua :: living an awesome life">Sacha Chua</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Safari Books Online</a>
                </li>
                <li>
                  <a href="https://blog.magpiebrain.com" title="clojure – magpiebrain">Sam Newman</a>
                </li>
                <li>
                  <a href="https://samritchie.io/" title="Sam's Blog">Sam Ritchie</a>
                </li>
                <li>
                  <a href="http://blog.samibadawi.com/search/label/Clojure" title="Languages and Logic">Sami Badawi</a>
                </li>
                <li>
                  <a href="https://samrat.me/tags/clojure/" title="clojure on Samrat Man Singh">Samrat Man Singh</a>
                </li>
                <li>
                  <a href="https://acidwords.com/" title="#:acid 'words">Sanel Z.</a>
                </li>
                <li>
                  <a href="https://scott.mn/" title="Divagations of a graphomane">Scott Feeney</a>
                </li>
                <li>
                  <a href="https://s6.io" class="message" title="internal server error">Screen6HQ</a>
                </li>
                <li>
                  <a href="https://www.seabre.com/" title="Category: clojure | Sean Brewer">Sean Brewer</a>
                </li>
                <li>
                  <a href="http://fulldisclojure.blogspot.com/" title="Full Disclojure">Sean Devlin</a>
                </li>
                <li>
                  <a href="https://vimeo.com" title="">Sean Devlin (vimeo)</a>
                </li>
                <li>
                  <a href="http://blog.n01se.net" title="searching for signal » clojure">Searching for Signal</a>
                </li>
                <li>
                  <a href="http://www.laliluna.de/" title="Laliluna Clojure, Java, Architecture articles">Sebastian Hennebrueder</a>
                </li>
                <li>
                  <a href="https://semaphoreci.com" title="Semaphore">Semaphore</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Semaphore CI Community Tutorials</a>
                </li>
                <li>
                  <a href="http://txt.arboreus.com/tagged/clojure.html" title="*clojure*.txt">Sergey Astanin</a>
                </li>
                <li>
                  <a href="http://sbtourist.blogspot.com/search/label/clojure" title="Thoughts and Fragments">Sergio Bossa</a>
                </li>
                <li>
                  <a href="https://sevenhong.svbtle.com" title="Seven Hong">Seven Hong</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=sgeo&amp;postID=37646341234" class="message" title="http status 503">Sgeo Comet</a>
                </li>
                <li>
                  <a href="https://blog.00null.net/" title="00null Blog">Shane Kilkelly</a>
                </li>
                <li>
                  <a href="http://bitumenframework.blogspot.com/" title="Bitumen Framework">Shantanu Kumar</a>
                </li>
                <li>
                  <a href="http://charsequence.blogspot.com/" title="Char Sequence">Shantanu Kumar</a>
                </li>
                <li>
                  <a href="https://shaolang.github.io/posts/" title="Posts on Bit by bit">Shaolang Ai</a>
                </li>
                <li>
                  <a title="Shashy's Blog">Shashy Dass</a>
                </li>
                <li>
                  <a href="http://shayne.me/" title="A Blog">Shayne.me</a>
                </li>
                <li>
                  <a href="https://medium.com/@shivekkhurana?source=rss-8bbc23a01e06------2" title="Stories by Shivek Khurana on Medium">Shivek Khurana</a>
                </li>
                <li>
                  <a href="http://www.shrayas.com/" class="message" title="404: not found">Shrayas Rajagopal</a>
                </li>
                <li>
                  <a href="http://blog.shriphani.com/tags/clojure.html" title="SHRIPHANI PALAKODETY: Posts tagged 'clojure'">Shriphani Palakodety</a>
                </li>
                <li>
                  <a href="http://www.sids.in/blog" title="@ infinity, plus 1">Siddhartha Reddy</a>
                </li>
                <li>
                  <a href="http://simonb.com/" title="simonb.com">Simon Blanchard</a>
                </li>
                <li>
                  <a href="https://simonholgate.wordpress.com" title="Clojure – Simon Holgate's Blog">Simon Holgate</a>
                </li>
                <li>
                  <a title="Siscia Blog">Simone Mosciatti</a>
                </li>
                <li>
                  <a href="https://www.sitepoint.com" class="message" title="404: not found">SitePoint (Clojure)</a>
                </li>
                <li>
                  <a href="https://www.sitepoint.com" class="message" title="404: not found">SitePoint (ClojureScript)</a>
                </li>
                <li>
                  <a href="https://blog.skyliner.io?source=rss----fae7733bccbd---4" title="Skyliner - Medium">Skyliner</a>
                </li>
                <li>
                  <a href="https://sneakycode.net/rss.rss" title="SneakyCode">SneakyCode</a>
                </li>
                <li>
                  <a href="http://dev.solita.fi" title="/dev/solita">Solita developer blog</a>
                </li>
                <li>
                  <a href="http://www.snowfrog.net/" title="Sonia Hamilton - Blog">Sonia Hamilton</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Sonian</a>
                </li>
                <li>
                  <a href="https://medium.com/sparrho?source=rss----d282592d2ada---4" title="Sparrho.com - Medium">Sparrho</a>
                </li>
                <li>
                  <a href="https://clojurecljub.wordpress.com" title="Clojure Lunch Cljub">St. Louis Clojure Discussion Group</a>
                </li>
                <li>
                  <a href="https://stefan.arentz.ca/post/" title="Posts on">Stefan Arentz</a>
                </li>
                <li>
                  <a href="http://www.stefan-pfeiffer.de" title="Dr. Stefan Pfeiffer">Stefan Pfeiffer</a>
                </li>
                <li>
                  <a class="message" title="http status 401">Stefan Richter</a>
                </li>
                <li>
                  <a href="https://www.innoq.com/blog/st/index.xml" title="Stefan Tilkov’s Blog">Stefan Tilkov</a>
                </li>
                <li>
                  <a href="https://svese.dev" title="svese Engineering Blog">Stephan Schmidt</a>
                </li>
                <li>
                  <a href="https://items.sjbach.com" class="message" title="404: not found">Stephen Bach</a>
                </li>
                <li>
                  <a href="https://stevelosh.com/" title="Steve Losh">Steve Losh</a>
                </li>
                <li>
                  <a href="http://miner.github.io/" title="Conjobble">Steve Miner</a>
                </li>
                <li>
                  <a href="http://deliberate-software.com/" title="deliberate software">Steve Shogren</a>
                </li>
                <li>
                  <a href="http://steve.vinoski.net/blog" title="clojure – Steve Vinoski’s Blog">Steve Vinoski</a>
                </li>
                <li>
                  <a href="http://stevendick.github.com/" title="Category: Clojure | &lt;insert witty blog title&gt;">Steven Dick</a>
                </li>
                <li>
                  <a href="https://www.proctor-it.com" title="Clojure – Proctor It">Steven Proctor</a>
                </li>
                <li>
                  <a href="http://blog.eikeland.se" title="Twice the Mega Power">Stian Eikeland</a>
                </li>
                <li>
                  <a href="https://stuarth.github.io" title="Stuart Hinson">Stuart Hinson</a>
                </li>
                <li>
                  <a href="https://medium.com/@stuart.m.perks?source=rss-f9776c90cf16------2" class="message" title="404: not found">Stuart Perks</a>
                </li>
                <li>
                  <a href="https://stuartsierra.com" title="Digital Digressions by Stuart Sierra">Stuart Sierra</a>
                </li>
                <li>
                  <a href="https://sunng.info/blog/" title="Here comes the Sun">Sun Ning</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Sunil Mishra</a>
                </li>
                <li>
                  <a href="http://blog.suprematic.net/search/label/clojure" title="SUPREMATIC - BLOG">Suprematic</a>
                </li>
                <li>
                  <a href="https://swaroopch.com" title="clojure – Swaroop, The Dreamer">Swaroop C H</a>
                </li>
                <li>
                  <a href="https://blog.swiftkey.com" class="message" title="404: not found">SwiftKey</a>
                </li>
                <li>
                  <a href="https://swizec.com/blog" title="A geek with a hat">Swizec Teller</a>
                </li>
                <li>
                  <a href="http://www.brainshave.com" title="brainshave blog">Szymon Witamborski</a>
                </li>
                <li>
                  <a href="https://blog.overops.com" class="message" title="internal server error">Takipi Blog</a>
                </li>
                <li>
                  <a href="http://tapestryjava.blogspot.com/search/label/clojure" title="Tapestry Central">Tapestry Central</a>
                </li>
                <li>
                  <a href="https://tarnbarford.net/" title="The Journals of Tarn Barford">Tarn Barford</a>
                </li>
                <li>
                  <a href="https://tsdh.wordpress.com" title="Clojure – Tassilo's Blog">Tassilo Horn</a>
                </li>
                <li>
                  <a href="https://blog.taylorwood.io/" title="Taylor ≈ Programmer">Taylor Wood</a>
                </li>
                <li>
                  <a title="TechAscent - Blog">TechAscent</a>
                </li>
                <li>
                  <a class="message" title="internal server error">Ted Leung</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Telia TechBlog</a>
                </li>
                <li>
                  <a href="http://teropa.info/blog/tags/clojure.html" title="Tero Parviainen">Tero Parviainen</a>
                </li>
                <li>
                  <a href="https://blog.testdouble.com/" title="Test Double | Our Blog">Test Double</a>
                </li>
                <li>
                  <a href="https://thebhwgroup.com/" title="The BHW Group">The BHW Group</a>
                </li>
                <li>
                  <a href="http://beclojure.org" title="BeClojure">The Belgian Clojure Community</a>
                </li>
                <li>
                  <a href="http://engineering.bittorrent.com" title="clojure – The BitTorrent Engineering Blog">The BitTorrent Engineering Blog</a>
                </li>
                <li>
                  <a href="https://changelog.com/" title="Changelog">The Changelog</a>
                </li>
                <li>
                  <a href="https://us1.campaign-archive.com/feed?u=60763b0c4890c24bd055f32e6&amp;id=9232ef71ee" title="The Clojure Atom by Brave Clojure Archive Feed">The Clojure Atom</a>
                </li>
                <li>
                  <a href="https://scicloj.github.com" title="SciCloj">The Clojure scientific hub</a>
                </li>
                <li>
                  <a href="http://blog.clojurewerkz.org/" title="The ClojureWerkz Blog">The ClojureWerkz Blog</a>
                </li>
                <li>
                  <a href="https://blog.giantswarm.io/" class="message" title="404: not found">The Giant Swarm Blog</a>
                </li>
                <li>
                  <a href="https://juxt.pro" title="The JUXT Blog">The JUXT Blog</a>
                </li>
                <li>
                  <a href="https://javahippie.net/" title="Tim Zöller">The Java Hippie (Tim Zöller)</a>
                </li>
                <li>
                  <a href="android-app://com.medium.reader/https/medium.com/netflix-techblog" class="message" title="internal server error">The Netflix Tech Blog</a>
                </li>
                <li>
                  <a class="message" title="404: not found">The New Stack</a>
                </li>
                <li>
                  <a href="http://oblong-code.blogspot.com/search/label/clojure" title="The Oblong">The Oblong</a>
                </li>
                <li>
                  <a href="https://dev.to" title="DEV Community">The Practical Dev</a>
                </li>
                <li>
                  <a href="https://us7.campaign-archive.com/feed?u=fef380870c4a5633a21f55d8e&amp;id=b5272e542b" title="The REPL Archive Feed">The REPL</a>
                </li>
                <li>
                  <a href="https://www.therepl.net/" title="The REPL">The REPL podcast</a>
                </li>
                <li>
                  <a href="https://medium.com/swlh?source=rss----f5af2b715248---4" title="The Startup - Medium">The Startup</a>
                </li>
                <li>
                  <a href="http://weakreference.blogspot.com/search/label/clojure" title="The Weak Reference">The Weak Reference</a>
                </li>
                <li>
                  <a class="message" title="internal server error">The Yieldbot Blog</a>
                </li>
                <li>
                  <a href="https://functional.christmas" title="The functional Christmas RSS feed">The functional Christmas</a>
                </li>
                <li>
                  <a href="https://www.theserverside.com" title="">TheServerSide</a>
                </li>
                <li>
                  <a href="https://www.theoryinpractice.net/" title="Theory In Practice">Theory In Practise</a>
                </li>
                <li>
                  <a href="https://porkostomus.gitlab.io/" title="These are the Voyages of the Porkostomus">These are the Voyages of the Porkostomus</a>
                </li>
                <li>
                  <a href="http://samesake.com/log/" class="message" title="404: not found">Thom Omans</a>
                </li>
                <li>
                  <a href="https://tgoossens.wordpress.com" title="clojure – Thomas Goossens' Blog">Thomas Goossens</a>
                </li>
                <li>
                  <a href="http://tgk.github.io/" title="Clojure/tgk">Thomas Greve Kristensen</a>
                </li>
                <li>
                  <a href="https://code.thheller.com/" title="from the shadows …">Thomas Heller</a>
                </li>
                <li>
                  <a href="https://justyouraveragehacker.wordpress.com" title="clojure – just your average hacker">Thomas Karolski</a>
                </li>
                <li>
                  <a href="https://thoughtbot.com/blog" title="Giant Robots Smashing Into Other Giant Robots">Thoughtbot</a>
                </li>
                <li>
                  <a href="http://programming-puzzler.blogspot.com/" title="Thoughts on Programming">Thoughts on Programming</a>
                </li>
                <li>
                  <a href="https://medium.com/@tiensonqin?source=rss-e658b1e571e5------2" title="Stories by Tienson Qin on Medium">Tienson Qin</a>
                </li>
                <li>
                  <a href="https://timgilbert.wordpress.com" title="clojure – Tim Gilbert's Blog">Tim Gilbert</a>
                </li>
                <li>
                  <a href="http://www.brool.com/index.xml" title="Brool">Tim Lopez</a>
                </li>
                <li>
                  <a href="https://www.brainonfire.net/blog" title="Brain on Fire">Tim McCormack</a>
                </li>
                <li>
                  <a href="http://timothypratley.blogspot.com/" title="Programming">Timothy Pratley</a>
                </li>
                <li>
                  <a href="https://togototo.wordpress.com" title="Clojure – To:goto To;">To:goto To;</a>
                </li>
                <li>
                  <a href="https://tobyloxy.com/tags/clojure/" title="clojure | Tobias Locsei">Tobias Locsei</a>
                </li>
                <li>
                  <a href="http://www.toccata.io" title="Toccata">Toccata Language</a>
                </li>
                <li>
                  <a href="http://tgvashworth.com" title="tgvashworth">Tom Ashworth</a>
                </li>
                <li>
                  <a href="http://www.thattommyhall.com" title="Everything Is a Ghetto: clojure">Tom Hall</a>
                </li>
                <li>
                  <a href="http://tohono.blogspot.com/search/label/Clojure" title="Tohono Consulting">Tom Hicks</a>
                </li>
                <li>
                  <a href="https://macwright.com" title="macwright.com">Tom MacWright</a>
                </li>
                <li>
                  <a href="http://blog.tomeklipski.com/search/label/clojure" title="Tomek Lipski's blog">Tomek Lipski</a>
                </li>
                <li>
                  <a href="https://tomekw.com/" title="Tomek Wałkuski">Tomek Wałkuski</a>
                </li>
                <li>
                  <a href="http://disclojure.org" title="Disclojure, Public Disclosure of All Things Clojure">Toni Batchelli</a>
                </li>
                <li>
                  <a href="https://tonyarcieri.com" title="Tony Arcieri">Tony Arcieri</a>
                </li>
                <li>
                  <a href="http://ashenfad.blogspot.com/search/label/clojure" title="Too Many NumLumps">Too Many NumLumps</a>
                </li>
                <li>
                  <a href="https://torsten.io" title="Torsten's STDOUT">Torsten Becker</a>
                </li>
                <li>
                  <a href="https://touk.pl/blog" title="Team Blog">Touk</a>
                </li>
                <li>
                  <a href="https://towardsdatascience.com?source=rss----7f60cf5620c9---4" title="Towards Data Science - Medium">Towards Data Science</a>
                </li>
                <li>
                  <a href="http://travis-whitton.blogspot.com/search/label/clojure" title="so it was written...">Travis Whitton</a>
                </li>
                <li>
                  <a href="https://twoguysarguing.wordpress.com" title="clojure – Two Guys Arguing">Two Guys Arguing</a>
                </li>
                <li>
                  <a href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=vishers&amp;postID=21087443641" class="message" title="http status 504">Two Negatives Blog</a>
                </li>
                <li>
                  <a href="https://technology.blog.gov.uk" title="Technology in government">UK Government Digital Service</a>
                </li>
                <li>
                  <a href="http://udayv.com" title="verma/blog/clojure">Uday Verma</a>
                </li>
                <li>
                  <a href="http://blog.cleancoder.com/" title="The Clean Code Blog">Uncle Bob Martin</a>
                </li>
                <li>
                  <a href="http://vvvvalvalval.github.io/" title="Val on Programming">Valentin Waeselynck</a>
                </li>
                <li>
                  <a href="https://blog.venanti.us/" title="clojure - Venantius">Venantius</a>
                </li>
                <li>
                  <a href="http://vijaykiran.com" title="VijayKiran.com">Vijay Kiran</a>
                </li>
                <li>
                  <a href="http://www.viksit.com" title="Search Results for “clojure” – Viksit Gaur">Viksit Gaur</a>
                </li>
                <li>
                  <a href="https://vincent.404.taipei/" title="Vincent Cantin’s blog">Vincent Cantin</a>
                </li>
                <li>
                  <a href="https://technotzen.wordpress.com" title="clojure – Technology mixed with a little Zen">Vishal Sakaria</a>
                </li>
                <li>
                  <a href="https://vitalyper.wordpress.com" title="On Software and Life">Vitaly Peressada</a>
                </li>
                <li>
                  <a href="http://pannoniancoder.blogspot.com/search/label/clojure" title="Pannonian Coder">Vjeran Marcinko</a>
                </li>
                <li>
                  <a href="https://vlaaad.github.io/" title="(:dev/notes vlaaad)">Vlad Proczenko</a>
                </li>
                <li>
                  <a href="https://nvbn.github.io" title="nvbn blog - clojure">Vladimir Iakovlev</a>
                </li>
                <li>
                  <a href="https://brutalism.rs/" title="Vladimir Mitrović">Vladimir Mitrović</a>
                </li>
                <li>
                  <a href="https://www.voxxed.com" title="Voxxed">Voxxed</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Waldemar Schwan</a>
                </li>
                <li>
                  <a href="https://medium.com/wefarm-product-and-tech?source=rss----ad41a712344a---4" title="Wefarm Product and Tech - Medium">Wefarm Product and Tech</a>
                </li>
                <li>
                  <a href="https://wesmorgan.svbtle.com" title="Growing Desperate">Wes Morgan</a>
                </li>
                <li>
                  <a href="https://whynotsoftware.github.io/" title="Why Not Software [Blog]">Why Not Software</a>
                </li>
                <li>
                  <a href="https://wildbit.com/blog" title="Wildbit (en-US)">Wildbit</a>
                </li>
                <li>
                  <a href="https://www.patheos.com/blogs/crywoof" title="clojure – Cry 'Woof'">Will Duquette</a>
                </li>
                <li>
                  <a href="http://wmfarr.blogspot.com/" title="Scheming">Will Farr</a>
                </li>
                <li>
                  <a href="https://willwhim.wordpress.com" title="Clojure – Will.Whim">Will Fitzgerald</a>
                </li>
                <li>
                  <a href="https://wtfleming.github.io/" title="Will Fleming's Software blog">Will Fleming</a>
                </li>
                <li>
                  <a href="http://recursivity.com" title="Recursivity blog - All posts">Wille Faler</a>
                </li>
                <li>
                  <a href="http://blog.wjlr.org.uk/" title="Category: clojure | Will Roe&amp;#146;s blog">William Roe</a>
                </li>
                <li>
                  <a href="http://www.afronski.pl" class="message" title="404: not found">Wojciech Gawroński</a>
                </li>
                <li>
                  <a href="http://localhost:4000/" title="">Xavier Shay</a>
                </li>
                <li>
                  <a href="https://theburningmonk.com" title="theburningmonk.com">Yan Cui</a>
                </li>
                <li>
                  <a href="https://xsc.github.io/" title="(:title data)">Yannick Scherer</a>
                </li>
                <li>
                  <a href="https://read.klipse.tech/" title="A journey into functional programming">Yehonathan Sharvit</a>
                </li>
                <li>
                  <a href="https://blog.klipse.tech//" title="An interactive journey into functional programming with Yehonathan Sharvit">Yehonathan Sharvit</a>
                </li>
                <li>
                  <a class="message" title="404: not found">Yet Analytics</a>
                </li>
                <li>
                  <a href="https://yokolet.blogspot.com/" title="yokolet's notelets">Yoko Harada</a>
                </li>
                <li>
                  <a href="https://metametadata.wordpress.com" title="metametadata">Yuri Govorushchenko</a>
                </li>
                <li>
                  <a href="https://www.mednikov.tech" title="Yuri Mednikov">Yuri Mednikov</a>
                </li>
                <li>
                  <a href="http://zachcp.org/blog/" title="Blogs on zachcp.org">Zach Charlop-Powers</a>
                </li>
                <li>
                  <a href="https://medium.com/@ztellman?source=rss-c82016292cfc------2" title="Stories by Zach Tellman on Medium">Zach Tellman</a>
                </li>
                <li>
                  <a href="https://jobs.zalando.com/" class="message" title="404: not found">Zalando Tech Blog</a>
                </li>
                <li>
                  <a href="http://zeekat.nl/news/tag/clojure/index.rss" title="Zeekat.nl news tagged 'clojure'">Zeekat.nl news for clojure</a>
                </li>
                <li>
                  <a href="https://zef.me" title="Zef’s Musings 🤔">Zef Hemel</a>
                </li>
                <li>
                  <a class="message" title="http status 400">ZenModeler Engineering Blog</a>
                </li>
                <li>
                  <a href="https://medium.com/@zeroonegroup?source=rss-bd9b245f3b89------2" title="Stories by Zero One Group on Medium">Zero One Group</a>
                </li>
                <li>
                  <a href="https://jrebel.com" class="message" title="404: not found">ZeroTurnaround</a>
                </li>
                <li>
                  <a href="http://szamitogepesnyelveszet.blogspot.com/search/label/Clojure" title="NLP Meetup - Számítógépes Nyelvészet">Zoltan Varju</a>
                </li>
                <li>
                  <a href="https://anuj-seth.github.io/" title="anuj seth">anuj seth</a>
                </li>
                <li>
                  <a href="https://www.bevuta.com/en/blog" title="bevuta blog: 'clojure'">bevuta IT</a>
                </li>
                <li>
                  <a href="https://medium.com/@biopolitik?source=rss-4160dc59d724------2" title="Stories by Philip on Medium">biopolitik</a>
                </li>
                <li>
                  <a href="http://blog.cryptoguru.com/" title="cryptoguru">cryptoguru</a>
                </li>
                <li>
                  <a href="http://daiyi.co/blog/" title="daiyi">daiyi</a>
                </li>
                <li>
                  <a href="https://www.dotkam.com" title="clojure – . kam">dot kam</a>
                </li>
                <li>
                  <a href="https://tech.ebayinc.com/rss" title="eBay Tech Blog">eBay Tech Blog</a>
                </li>
                <li>
                  <a href="https://feierabendprojekte.wordpress.com" title="feierabendprojekte">feierabendprojekte</a>
                </li>
                <li>
                  <a class="message" title="403: forbidden">icyrock</a>
                </li>
                <li>
                  <a href="http://jr0cket.co.uk/" title="jr0cket">jr0cket - community developer</a>
                </li>
                <li>
                  <a href="https://medium.com/magnetcoop?source=rss----5e037f62561e---4" title="magnet.coop - Medium">magnet.coop</a>
                </li>
                <li>
                  <a href="http://mishadoff.com" title="mishadoff thoughts | clojure">mishadoff thoughts</a>
                </li>
                <li>
                  <a href="http://nd.github.io" class="message" title="404: not found">nd</a>
                </li>
                <li>
                  <a href="https://medium.com/fhirbase-dojo?source=rss----c373dab37cdb---4" title="fhirbase dojo - Medium">niquola</a>
                </li>
                <li>
                  <a class="message" title="internal server error">nrgb</a>
                </li>
                <li>
                  <a href="http://offcode.blogspot.com/search/label/clojure" title="Not your mother's code">offcode</a>
                </li>
                <li>
                  <a href="https://antoniogarrote.wordpress.com" title="Working Memory">opus artificem probat</a>
                </li>
                <li>
                  <a title="">outcastgeek</a>
                </li>
                <li>
                  <a href="https://pinterface.livejournal.com/" title="The Opinions Expressed Herein are My Own">pinterface</a>
                </li>
                <li>
                  <a href="http://programmablelife.blogspot.com/search/label/clojure" title="programmable life">programmable life</a>
                </li>
                <li>
                  <a href="http://pseudofish.com/" title="pseudofish">pseudofish</a>
                </li>
                <li>
                  <a href="https://quanttype.net/tags/clojure.html" title="Clojure and ClojureScript on quanttype">quanttype</a>
                </li>
                <li>
                  <a href="https://www.rdisorder.eu" title="Clojure – rDisorder">rDisorder</a>
                </li>
                <li>
                  <a href="http://randomcomputation.blogspot.com/" title="random computation">random computation</a>
                </li>
                <li>
                  <a href="http://www.tumblebolt.com/clojure.xml" class="message" title="403: forbidden">sabraham</a>
                </li>
                <li>
                  <a href="http://side-effects-bang.blogspot.com/search/label/clojure" title="side-effects!">side-effects!</a>
                </li>
                <li>
                  <a href="https://medium.com/@thi.ng?source=rss-af94d3518afd------2" title="Stories by thi.ng on Medium">thi.ng</a>
                </li>
                <li>
                  <a href="https://labs.uswitch.com/" class="message" title="internal server error">uSwitch Tech Blog</a>
                </li>
                <li>
                  <a href="https://revolucionlibrary.wordpress.com" title="Clojure – Revolución Movie Library">Željko Ziriković</a>
                </li>
            </ul>
          </section>
          
          <section class="sidebar-list">
            <h3>Planetarium</h3>
            <ul>
              <li><a href="http://planet.lisp.org/">Planet Lisp</a></li>
              <li><a href="http://www.planetscala.com/">Planet Scala</a></li>
              <li><a href="http://scheme.dk/planet/">Planet Scheme</a></li>
              <li><a href="http://planetjdk.org/">Planet JDK</a></li>
              <li><a href="http://planet.haskell.org/">Planet Haskell</a></li>
              <li><a href="http://www.planeterlang.org/">Planet Erlang</a></li>
              <li><a href="http://planet.python.org/">Planet Python</a></li>
              <li><a href="http://planetruby.0x42.net/">Planet Ruby</a></li>
              <li><a href="http://planet.perl.org/">Planet Perl</a></li>
            </ul>
          </section>
          
          <section class="sidebar-list">
            <h3>Syndicate</h3>
            <ul>
              <li><a href="http://planet.clojure.in/atom.xml">RSS</a></li>
<!--              <li><a href="http://feeds.feedburner.com/clojure">RSS</a></li>-->
              <li><a href="opml.xml">OPML</a></li>
              <li><a href="foafroll.xml">FOAF</a></li>
            </ul>
          </section>

        </div>
      </div>
    </div>
<!-- GOOG Analytics -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12235178-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = 'async';
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
  })();
</script>
  </body>
</html>
